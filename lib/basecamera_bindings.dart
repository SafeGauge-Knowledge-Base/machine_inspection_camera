
// Autogenerated by jnigen. DO NOT EDIT!


// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: inference_failure_on_untyped_parameter
// ignore_for_file: invalid_internal_annotation
// ignore_for_file: invalid_use_of_internal_member
// ignore_for_file: library_prefixes
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_library_prefixes
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unintended_html_in_doc_comment
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters


import 'dart:core' show Object, String, bool, double, int;
import 'dart:core' as _$core;

import 'package:jni/_internal.dart' as _$jni;
import 'package:jni/jni.dart' as _$jni;


/// from: `com.arashivision.insta360.basecamera.CameraModule$OooO00o`
class CameraModule_OooO00o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraModule_OooO00o> $type;

  

  @_$jni.internal
  CameraModule_OooO00o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/CameraModule$OooO00o');

      /// The type which includes information such as the signature of this class.
static const type = $CameraModule_OooO00o$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()Z',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean OooO00o()`
  bool OooO00o(){
    
    return _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_OooO00o$1 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void OooO00o$1(BaseCamera baseCamera, ){
    
    _OooO00o$1(reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0O0(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void OooO0O0(BaseCamera baseCamera, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $CameraModule_OooO00o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o()Z') {
          final $r = _$impls[$p]!.OooO00o(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'OooO00o(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.OooO00o$1(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0O0(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $CameraModule_OooO00o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.CameraModule$OooO00o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$1$async) r'OooO00o(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.OooO0O0$async) r'OooO0O0(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory CameraModule_OooO00o.implement(
    $CameraModule_OooO00o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return CameraModule_OooO00o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $CameraModule_OooO00o {
  factory $CameraModule_OooO00o(
    {required bool Function() OooO00o,
    required void Function(BaseCamera baseCamera) OooO00o$1, bool OooO00o$1$async,
    required void Function(BaseCamera baseCamera) OooO0O0, bool OooO0O0$async,}
  ) = _$CameraModule_OooO00o;

  

  bool OooO00o();
  void OooO00o$1(BaseCamera baseCamera);
  bool get OooO00o$1$async => false;
  void OooO0O0(BaseCamera baseCamera);
  bool get OooO0O0$async => false;
}

final class _$CameraModule_OooO00o with $CameraModule_OooO00o {
  _$CameraModule_OooO00o(
    {required bool Function() OooO00o,
    required void Function(BaseCamera baseCamera) OooO00o$1, this.OooO00o$1$async = false,
    required void Function(BaseCamera baseCamera) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO00o = OooO00o, _OooO00o$1 = OooO00o$1, _OooO0O0 = OooO0O0;

  

  final bool Function() _OooO00o;
  final void Function(BaseCamera baseCamera) _OooO00o$1;
  final bool OooO00o$1$async;
  final void Function(BaseCamera baseCamera) _OooO0O0;
  final bool OooO0O0$async;

  bool OooO00o() {
    return _OooO00o();
  }  void OooO00o$1(BaseCamera baseCamera) {
    return _OooO00o$1(baseCamera);
  }  void OooO0O0(BaseCamera baseCamera) {
    return _OooO0O0(baseCamera);
  }}
final class $CameraModule_OooO00o$Type extends _$jni.JObjType<CameraModule_OooO00o> {
  

  @_$jni.internal
  const $CameraModule_OooO00o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/CameraModule$OooO00o;';

  @_$jni.internal
  @_$core.override
  CameraModule_OooO00o fromReference(_$jni.JReference reference) => CameraModule_OooO00o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraModule_OooO00o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraModule_OooO00o$Type) &&
        other is $CameraModule_OooO00o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.CameraModule$OooO0O0`
class CameraModule_OooO0O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraModule_OooO0O0> $type;

  

  @_$jni.internal
  CameraModule_OooO0O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/CameraModule$OooO0O0');

      /// The type which includes information such as the signature of this class.
static const type = $CameraModule_OooO0O0$Type();
  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Ljava/lang/String;Ljava/lang/String;Z)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO0O0(java.lang.String string, java.lang.String string1, boolean z)`
  void OooO0O0(_$jni.JString string, _$jni.JString string1, bool z, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO0o0 = _class.instanceMethodId(
    r'OooO0o0',
    r'(Ljava/lang/String;Ljava/lang/String;Z)V',
  );

  static final _OooO0o0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO0o0(java.lang.String string, java.lang.String string1, boolean z)`
  void OooO0o0(_$jni.JString string, _$jni.JString string1, bool z, ){
    
    _OooO0o0(reference.pointer, _id_OooO0o0 as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;Ljava/lang/String;Z)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO00o(java.lang.String string, java.lang.String string1, boolean z)`
  void OooO00o(_$jni.JString string, _$jni.JString string1, bool z, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO0Oo = _class.instanceMethodId(
    r'OooO0Oo',
    r'(Ljava/lang/String;Ljava/lang/String;Z)V',
  );

  static final _OooO0Oo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO0Oo(java.lang.String string, java.lang.String string1, boolean z)`
  void OooO0Oo(_$jni.JString string, _$jni.JString string1, bool z, ){
    
    _OooO0Oo(reference.pointer, _id_OooO0Oo as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO0OO = _class.instanceMethodId(
    r'OooO0OO',
    r'(Ljava/lang/String;Ljava/lang/String;Z)V',
  );

  static final _OooO0OO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO0OO(java.lang.String string, java.lang.String string1, boolean z)`
  void OooO0OO(_$jni.JString string, _$jni.JString string1, bool z, ){
    
    _OooO0OO(reference.pointer, _id_OooO0OO as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO00o$1 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;Ljava/lang/Throwable;Z)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO00o(java.lang.String string, java.lang.Throwable throwable, boolean z)`
  void OooO00o$1(_$jni.JString string, _$jni.JObject throwable, bool z, ){
    
    _OooO00o$1(reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, string.reference.pointer, throwable.reference.pointer, z ? 1 : 0).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $CameraModule_OooO0O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0O0(Ljava/lang/String;Ljava/lang/String;Z)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0o0(Ljava/lang/String;Ljava/lang/String;Z)V') {
          _$impls[$p]!.OooO0o0(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(Ljava/lang/String;Ljava/lang/String;Z)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0Oo(Ljava/lang/String;Ljava/lang/String;Z)V') {
          _$impls[$p]!.OooO0Oo(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0OO(Ljava/lang/String;Ljava/lang/String;Z)V') {
          _$impls[$p]!.OooO0OO(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(Ljava/lang/String;Ljava/lang/Throwable;Z)V') {
          _$impls[$p]!.OooO00o$1(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $CameraModule_OooO0O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.CameraModule$OooO0O0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0O0$async) r'OooO0O0(Ljava/lang/String;Ljava/lang/String;Z)V',
        if ($impl.OooO0o0$async) r'OooO0o0(Ljava/lang/String;Ljava/lang/String;Z)V',
        if ($impl.OooO00o$async) r'OooO00o(Ljava/lang/String;Ljava/lang/String;Z)V',
        if ($impl.OooO0Oo$async) r'OooO0Oo(Ljava/lang/String;Ljava/lang/String;Z)V',
        if ($impl.OooO0OO$async) r'OooO0OO(Ljava/lang/String;Ljava/lang/String;Z)V',
        if ($impl.OooO00o$1$async) r'OooO00o(Ljava/lang/String;Ljava/lang/Throwable;Z)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory CameraModule_OooO0O0.implement(
    $CameraModule_OooO0O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return CameraModule_OooO0O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $CameraModule_OooO0O0 {
  factory $CameraModule_OooO0O0(
    {required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0O0, bool OooO0O0$async,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0o0, bool OooO0o0$async,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO00o, bool OooO00o$async,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0Oo, bool OooO0Oo$async,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0OO, bool OooO0OO$async,
    required void Function(_$jni.JString string, _$jni.JObject throwable, bool z) OooO00o$1, bool OooO00o$1$async,}
  ) = _$CameraModule_OooO0O0;

  

  void OooO0O0(_$jni.JString string, _$jni.JString string1, bool z);
  bool get OooO0O0$async => false;
  void OooO0o0(_$jni.JString string, _$jni.JString string1, bool z);
  bool get OooO0o0$async => false;
  void OooO00o(_$jni.JString string, _$jni.JString string1, bool z);
  bool get OooO00o$async => false;
  void OooO0Oo(_$jni.JString string, _$jni.JString string1, bool z);
  bool get OooO0Oo$async => false;
  void OooO0OO(_$jni.JString string, _$jni.JString string1, bool z);
  bool get OooO0OO$async => false;
  void OooO00o$1(_$jni.JString string, _$jni.JObject throwable, bool z);
  bool get OooO00o$1$async => false;
}

final class _$CameraModule_OooO0O0 with $CameraModule_OooO0O0 {
  _$CameraModule_OooO0O0(
    {required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0O0, this.OooO0O0$async = false,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0o0, this.OooO0o0$async = false,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO00o, this.OooO00o$async = false,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0Oo, this.OooO0Oo$async = false,
    required void Function(_$jni.JString string, _$jni.JString string1, bool z) OooO0OO, this.OooO0OO$async = false,
    required void Function(_$jni.JString string, _$jni.JObject throwable, bool z) OooO00o$1, this.OooO00o$1$async = false,}
  ) :  _OooO0O0 = OooO0O0, _OooO0o0 = OooO0o0, _OooO00o = OooO00o, _OooO0Oo = OooO0Oo, _OooO0OO = OooO0OO, _OooO00o$1 = OooO00o$1;

  

  final void Function(_$jni.JString string, _$jni.JString string1, bool z) _OooO0O0;
  final bool OooO0O0$async;
  final void Function(_$jni.JString string, _$jni.JString string1, bool z) _OooO0o0;
  final bool OooO0o0$async;
  final void Function(_$jni.JString string, _$jni.JString string1, bool z) _OooO00o;
  final bool OooO00o$async;
  final void Function(_$jni.JString string, _$jni.JString string1, bool z) _OooO0Oo;
  final bool OooO0Oo$async;
  final void Function(_$jni.JString string, _$jni.JString string1, bool z) _OooO0OO;
  final bool OooO0OO$async;
  final void Function(_$jni.JString string, _$jni.JObject throwable, bool z) _OooO00o$1;
  final bool OooO00o$1$async;

  void OooO0O0(_$jni.JString string, _$jni.JString string1, bool z) {
    return _OooO0O0(string, string1, z);
  }  void OooO0o0(_$jni.JString string, _$jni.JString string1, bool z) {
    return _OooO0o0(string, string1, z);
  }  void OooO00o(_$jni.JString string, _$jni.JString string1, bool z) {
    return _OooO00o(string, string1, z);
  }  void OooO0Oo(_$jni.JString string, _$jni.JString string1, bool z) {
    return _OooO0Oo(string, string1, z);
  }  void OooO0OO(_$jni.JString string, _$jni.JString string1, bool z) {
    return _OooO0OO(string, string1, z);
  }  void OooO00o$1(_$jni.JString string, _$jni.JObject throwable, bool z) {
    return _OooO00o$1(string, throwable, z);
  }}
final class $CameraModule_OooO0O0$Type extends _$jni.JObjType<CameraModule_OooO0O0> {
  

  @_$jni.internal
  const $CameraModule_OooO0O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/CameraModule$OooO0O0;';

  @_$jni.internal
  @_$core.override
  CameraModule_OooO0O0 fromReference(_$jni.JReference reference) => CameraModule_OooO0O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraModule_OooO0O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraModule_OooO0O0$Type) &&
        other is $CameraModule_OooO0O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.CameraModule`
class CameraModule extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraModule> $type;

  

  @_$jni.internal
  CameraModule.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/CameraModule');

      /// The type which includes information such as the signature of this class.
static const type = $CameraModule$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Landroid/app/Application;',
      );
  /// from: `static public android.app.Application OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get OooO00o => _id_OooO00o.get(_class, const _$jni.JObjectType());

  /// from: `static public android.app.Application OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static set OooO00o(_$jni.JObject value) => _id_OooO00o.set(_class, const _$jni.JObjectType(), value);

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/CameraModule$OooO0O0;',
      );
  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO0O0 OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static CameraModule_OooO0O0 get OooO0O0 => _id_OooO0O0.get(_class, const $CameraModule_OooO0O0$Type());

  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO0O0 OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static set OooO0O0(CameraModule_OooO0O0 value) => _id_OooO0O0.set(_class, const $CameraModule_OooO0O0$Type(), value);

  static final _id_OooO0OO =
      _class.staticFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/CameraModule$OooO00o;',
      );
  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO00o OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
static CameraModule_OooO00o get OooO0OO => _id_OooO0OO.get(_class, const $CameraModule_OooO00o$Type());

  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO00o OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
static set OooO0OO(CameraModule_OooO00o value) => _id_OooO0OO.set(_class, const $CameraModule_OooO00o$Type(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraModule() {
    
    return CameraModule.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_init = _class.staticMethodId(
    r'init',
    r'(Landroid/app/Application;)V',
  );

  static final _init = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public void init(android.app.Application application)`
  static void init(_$jni.JObject application, ){
    
    _init(_class.reference.pointer, _id_init as _$jni.JMethodIDPtr, application.reference.pointer).check();
  }

  static final _id_getApplication = _class.staticMethodId(
    r'getApplication',
    r'()Landroid/app/Application;',
  );

  static final _getApplication = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public android.app.Application getApplication()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JObject getApplication(){
    
    return _getApplication(_class.reference.pointer, _id_getApplication as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getApplicationContext = _class.staticMethodId(
    r'getApplicationContext',
    r'()Landroid/content/Context;',
  );

  static final _getApplicationContext = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public android.content.Context getApplicationContext()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JObject getApplicationContext(){
    
    return _getApplicationContext(_class.reference.pointer, _id_getApplicationContext as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setLoggerCallback = _class.staticMethodId(
    r'setLoggerCallback',
    r'(Lcom/arashivision/insta360/basecamera/CameraModule$OooO0O0;)V',
  );

  static final _setLoggerCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public void setLoggerCallback(com.arashivision.insta360.basecamera.CameraModule$OooO0O0 oooO0O0)`
  static void setLoggerCallback(CameraModule_OooO0O0 oooO0O0, ){
    
    _setLoggerCallback(_class.reference.pointer, _id_setLoggerCallback as _$jni.JMethodIDPtr, oooO0O0.reference.pointer).check();
  }

  static final _id_getLoggerCallback = _class.staticMethodId(
    r'getLoggerCallback',
    r'()Lcom/arashivision/insta360/basecamera/CameraModule$OooO0O0;',
  );

  static final _getLoggerCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO0O0 getLoggerCallback()`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraModule_OooO0O0 getLoggerCallback(){
    
    return _getLoggerCallback(_class.reference.pointer, _id_getLoggerCallback as _$jni.JMethodIDPtr).object(const $CameraModule_OooO0O0$Type());
  }

  static final _id_setCameraModuleCallback = _class.staticMethodId(
    r'setCameraModuleCallback',
    r'(Lcom/arashivision/insta360/basecamera/CameraModule$OooO00o;)V',
  );

  static final _setCameraModuleCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public void setCameraModuleCallback(com.arashivision.insta360.basecamera.CameraModule$OooO00o oooO00o)`
  static void setCameraModuleCallback(CameraModule_OooO00o oooO00o, ){
    
    _setCameraModuleCallback(_class.reference.pointer, _id_setCameraModuleCallback as _$jni.JMethodIDPtr, oooO00o.reference.pointer).check();
  }

  static final _id_getCameraModuleCallback = _class.staticMethodId(
    r'getCameraModuleCallback',
    r'()Lcom/arashivision/insta360/basecamera/CameraModule$OooO00o;',
  );

  static final _getCameraModuleCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.CameraModule$OooO00o getCameraModuleCallback()`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraModule_OooO00o getCameraModuleCallback(){
    
    return _getCameraModuleCallback(_class.reference.pointer, _id_getCameraModuleCallback as _$jni.JMethodIDPtr).object(const $CameraModule_OooO00o$Type());
  }

}
final class $CameraModule$Type extends _$jni.JObjType<CameraModule> {
  

  @_$jni.internal
  const $CameraModule$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/CameraModule;';

  @_$jni.internal
  @_$core.override
  CameraModule fromReference(_$jni.JReference reference) => CameraModule.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraModule$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraModule$Type) &&
        other is $CameraModule$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus`
class BaseCamera_CameraStatus extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_CameraStatus> $type;

  

  @_$jni.internal
  BaseCamera_CameraStatus.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_CameraStatus$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get IDLE => _id_IDLE.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_OPENING =
      _class.staticFieldId(
        r'OPENING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus OPENING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get OPENING => _id_OPENING.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_CHECK_TYPE =
      _class.staticFieldId(
        r'CHECK_TYPE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus CHECK_TYPE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get CHECK_TYPE => _id_CHECK_TYPE.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_SYNCING =
      _class.staticFieldId(
        r'SYNCING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus SYNCING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get SYNCING => _id_SYNCING.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_READY =
      _class.staticFieldId(
        r'READY',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus READY`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get READY => _id_READY.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_ERROR =
      _class.staticFieldId(
        r'ERROR',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus ERROR`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get ERROR => _id_ERROR.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_CLOSING =
      _class.staticFieldId(
        r'CLOSING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus CLOSING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraStatus get CLOSING => _id_CLOSING.get(_class, const $BaseCamera_CameraStatus$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_CameraStatus> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_CameraStatus$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_CameraStatus valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_CameraStatus$Type());
  }


}
final class $BaseCamera_CameraStatus$Type extends _$jni.JObjType<BaseCamera_CameraStatus> {
  

  @_$jni.internal
  const $BaseCamera_CameraStatus$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;';

  @_$jni.internal
  @_$core.override
  BaseCamera_CameraStatus fromReference(_$jni.JReference reference) => BaseCamera_CameraStatus.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_CameraStatus$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_CameraStatus$Type) &&
        other is $BaseCamera_CameraStatus$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus`
class BaseCamera_CameraSyncStatus extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_CameraSyncStatus> $type;

  

  @_$jni.internal
  BaseCamera_CameraSyncStatus.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_CameraSyncStatus$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get IDLE => _id_IDLE.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_SYNCING_OPTIONS =
      _class.staticFieldId(
        r'SYNCING_OPTIONS',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus SYNCING_OPTIONS`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get SYNCING_OPTIONS => _id_SYNCING_OPTIONS.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_SYNC_CAMERA_LANGUAGE =
      _class.staticFieldId(
        r'SYNC_CAMERA_LANGUAGE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus SYNC_CAMERA_LANGUAGE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get SYNC_CAMERA_LANGUAGE => _id_SYNC_CAMERA_LANGUAGE.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_AUTHORIZATION =
      _class.staticFieldId(
        r'AUTHORIZATION',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus AUTHORIZATION`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get AUTHORIZATION => _id_AUTHORIZATION.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_CHECKING =
      _class.staticFieldId(
        r'CHECKING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus CHECKING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get CHECKING => _id_CHECKING.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_WAITING_CAMERA_READY =
      _class.staticFieldId(
        r'WAITING_CAMERA_READY',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus WAITING_CAMERA_READY`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get WAITING_CAMERA_READY => _id_WAITING_CAMERA_READY.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_READY =
      _class.staticFieldId(
        r'READY',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus READY`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get READY => _id_READY.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_CLOSING =
      _class.staticFieldId(
        r'CLOSING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus CLOSING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get CLOSING => _id_CLOSING.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_ERROR =
      _class.staticFieldId(
        r'ERROR',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus ERROR`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CameraSyncStatus get ERROR => _id_ERROR.get(_class, const $BaseCamera_CameraSyncStatus$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_CameraSyncStatus> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_CameraSyncStatus$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_CameraSyncStatus valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_CameraSyncStatus$Type());
  }


}
final class $BaseCamera_CameraSyncStatus$Type extends _$jni.JObjType<BaseCamera_CameraSyncStatus> {
  

  @_$jni.internal
  const $BaseCamera_CameraSyncStatus$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;';

  @_$jni.internal
  @_$core.override
  BaseCamera_CameraSyncStatus fromReference(_$jni.JReference reference) => BaseCamera_CameraSyncStatus.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_CameraSyncStatus$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_CameraSyncStatus$Type) &&
        other is $BaseCamera_CameraSyncStatus$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus`
class BaseCamera_CaptureStatus extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_CaptureStatus> $type;

  

  @_$jni.internal
  BaseCamera_CaptureStatus.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_CaptureStatus$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureStatus get IDLE => _id_IDLE.get(_class, const $BaseCamera_CaptureStatus$Type());

  static final _id_STARTING =
      _class.staticFieldId(
        r'STARTING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus STARTING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureStatus get STARTING => _id_STARTING.get(_class, const $BaseCamera_CaptureStatus$Type());

  static final _id_WORKING =
      _class.staticFieldId(
        r'WORKING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus WORKING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureStatus get WORKING => _id_WORKING.get(_class, const $BaseCamera_CaptureStatus$Type());

  static final _id_STOPPING =
      _class.staticFieldId(
        r'STOPPING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus STOPPING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureStatus get STOPPING => _id_STOPPING.get(_class, const $BaseCamera_CaptureStatus$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_CaptureStatus> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_CaptureStatus$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_CaptureStatus valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_CaptureStatus$Type());
  }


}
final class $BaseCamera_CaptureStatus$Type extends _$jni.JObjType<BaseCamera_CaptureStatus> {
  

  @_$jni.internal
  const $BaseCamera_CaptureStatus$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;';

  @_$jni.internal
  @_$core.override
  BaseCamera_CaptureStatus fromReference(_$jni.JReference reference) => BaseCamera_CaptureStatus.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_CaptureStatus$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_CaptureStatus$Type) &&
        other is $BaseCamera_CaptureStatus$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus`
class BaseCamera_CaptureSubStatus extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_CaptureSubStatus> $type;

  

  @_$jni.internal
  BaseCamera_CaptureSubStatus.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_CaptureSubStatus$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureSubStatus get IDLE => _id_IDLE.get(_class, const $BaseCamera_CaptureSubStatus$Type());

  static final _id_PAUSE =
      _class.staticFieldId(
        r'PAUSE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus PAUSE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureSubStatus get PAUSE => _id_PAUSE.get(_class, const $BaseCamera_CaptureSubStatus$Type());

  static final _id_RECORD_SAVE =
      _class.staticFieldId(
        r'RECORD_SAVE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus RECORD_SAVE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureSubStatus get RECORD_SAVE => _id_RECORD_SAVE.get(_class, const $BaseCamera_CaptureSubStatus$Type());

  static final _id_PHOTO_SAVE =
      _class.staticFieldId(
        r'PHOTO_SAVE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus PHOTO_SAVE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureSubStatus get PHOTO_SAVE => _id_PHOTO_SAVE.get(_class, const $BaseCamera_CaptureSubStatus$Type());

  static final _id_STARTLAPSE_SYNTHESIS =
      _class.staticFieldId(
        r'STARTLAPSE_SYNTHESIS',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus STARTLAPSE_SYNTHESIS`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureSubStatus get STARTLAPSE_SYNTHESIS => _id_STARTLAPSE_SYNTHESIS.get(_class, const $BaseCamera_CaptureSubStatus$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_CaptureSubStatus> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_CaptureSubStatus$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_CaptureSubStatus valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_CaptureSubStatus$Type());
  }


}
final class $BaseCamera_CaptureSubStatus$Type extends _$jni.JObjType<BaseCamera_CaptureSubStatus> {
  

  @_$jni.internal
  const $BaseCamera_CaptureSubStatus$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;';

  @_$jni.internal
  @_$core.override
  BaseCamera_CaptureSubStatus fromReference(_$jni.JReference reference) => BaseCamera_CaptureSubStatus.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_CaptureSubStatus$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_CaptureSubStatus$Type) &&
        other is $BaseCamera_CaptureSubStatus$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType`
class BaseCamera_CaptureType extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_CaptureType> $type;

  

  @_$jni.internal
  BaseCamera_CaptureType.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_CaptureType$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get IDLE => _id_IDLE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_NORMAL_CAPTURE =
      _class.staticFieldId(
        r'NORMAL_CAPTURE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType NORMAL_CAPTURE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get NORMAL_CAPTURE => _id_NORMAL_CAPTURE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_HDR_CAPTURE =
      _class.staticFieldId(
        r'HDR_CAPTURE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType HDR_CAPTURE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get HDR_CAPTURE => _id_HDR_CAPTURE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_NIGHT_SCENE =
      _class.staticFieldId(
        r'NIGHT_SCENE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType NIGHT_SCENE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get NIGHT_SCENE => _id_NIGHT_SCENE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_INTERVAL_SHOOTING =
      _class.staticFieldId(
        r'INTERVAL_SHOOTING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType INTERVAL_SHOOTING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get INTERVAL_SHOOTING => _id_INTERVAL_SHOOTING.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_BURST =
      _class.staticFieldId(
        r'BURST',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType BURST`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get BURST => _id_BURST.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_NORMAL_PANO_CAPTURE =
      _class.staticFieldId(
        r'NORMAL_PANO_CAPTURE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType NORMAL_PANO_CAPTURE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get NORMAL_PANO_CAPTURE => _id_NORMAL_PANO_CAPTURE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_HDR_PANO_CAPTURE =
      _class.staticFieldId(
        r'HDR_PANO_CAPTURE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType HDR_PANO_CAPTURE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get HDR_PANO_CAPTURE => _id_HDR_PANO_CAPTURE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_STARLAPSE_SHOOTING =
      _class.staticFieldId(
        r'STARLAPSE_SHOOTING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType STARLAPSE_SHOOTING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get STARLAPSE_SHOOTING => _id_STARLAPSE_SHOOTING.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_NORMAL_RECORD =
      _class.staticFieldId(
        r'NORMAL_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType NORMAL_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get NORMAL_RECORD => _id_NORMAL_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_SUPER_RECORD =
      _class.staticFieldId(
        r'SUPER_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType SUPER_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get SUPER_RECORD => _id_SUPER_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_HDR_RECORD =
      _class.staticFieldId(
        r'HDR_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType HDR_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get HDR_RECORD => _id_HDR_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_INTERVAL_RECORD =
      _class.staticFieldId(
        r'INTERVAL_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType INTERVAL_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get INTERVAL_RECORD => _id_INTERVAL_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_BULLET_TIME =
      _class.staticFieldId(
        r'BULLET_TIME',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType BULLET_TIME`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get BULLET_TIME => _id_BULLET_TIME.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_TIMELAPSE =
      _class.staticFieldId(
        r'TIMELAPSE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType TIMELAPSE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get TIMELAPSE => _id_TIMELAPSE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_STATIC_TIMELAPSE =
      _class.staticFieldId(
        r'STATIC_TIMELAPSE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType STATIC_TIMELAPSE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get STATIC_TIMELAPSE => _id_STATIC_TIMELAPSE.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_TIME_SHIFT =
      _class.staticFieldId(
        r'TIME_SHIFT',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType TIME_SHIFT`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get TIME_SHIFT => _id_TIME_SHIFT.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_LOOPER_RECORDING =
      _class.staticFieldId(
        r'LOOPER_RECORDING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType LOOPER_RECORDING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get LOOPER_RECORDING => _id_LOOPER_RECORDING.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_FPV_RECORD =
      _class.staticFieldId(
        r'FPV_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType FPV_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get FPV_RECORD => _id_FPV_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_MOVIE_RECORD =
      _class.staticFieldId(
        r'MOVIE_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType MOVIE_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get MOVIE_RECORD => _id_MOVIE_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_SLOW_MOTION =
      _class.staticFieldId(
        r'SLOW_MOTION',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType SLOW_MOTION`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get SLOW_MOTION => _id_SLOW_MOTION.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_SELFIE_RECORD =
      _class.staticFieldId(
        r'SELFIE_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType SELFIE_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get SELFIE_RECORD => _id_SELFIE_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_PURE_RECORD =
      _class.staticFieldId(
        r'PURE_RECORD',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType PURE_RECORD`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_CaptureType get PURE_RECORD => _id_PURE_RECORD.get(_class, const $BaseCamera_CaptureType$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_CaptureType> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_CaptureType$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_CaptureType valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_CaptureType$Type());
  }


  static final _id_isPhotoType = _class.instanceMethodId(
    r'isPhotoType',
    r'()Z',
  );

  static final _isPhotoType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPhotoType()`
  bool isPhotoType(){
    
    return _isPhotoType(reference.pointer, _id_isPhotoType as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isVideoType = _class.instanceMethodId(
    r'isVideoType',
    r'()Z',
  );

  static final _isVideoType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isVideoType()`
  bool isVideoType(){
    
    return _isVideoType(reference.pointer, _id_isVideoType as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getNativeValue = _class.instanceMethodId(
    r'getNativeValue',
    r'()I',
  );

  static final _getNativeValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getNativeValue()`
  int getNativeValue(){
    
    return _getNativeValue(reference.pointer, _id_getNativeValue as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFuncMode = _class.instanceMethodId(
    r'getFuncMode',
    r'()I',
  );

  static final _getFuncMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFuncMode()`
  int getFuncMode(){
    
    return _getFuncMode(reference.pointer, _id_getFuncMode as _$jni.JMethodIDPtr).integer;
  }

}
final class $BaseCamera_CaptureType$Type extends _$jni.JObjType<BaseCamera_CaptureType> {
  

  @_$jni.internal
  const $BaseCamera_CaptureType$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;';

  @_$jni.internal
  @_$core.override
  BaseCamera_CaptureType fromReference(_$jni.JReference reference) => BaseCamera_CaptureType.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_CaptureType$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_CaptureType$Type) &&
        other is $BaseCamera_CaptureType$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType`
class BaseCamera_ConnectType extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_ConnectType> $type;

  

  @_$jni.internal
  BaseCamera_ConnectType.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_ConnectType$Type();
  static final _id_BLE =
      _class.staticFieldId(
        r'BLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType BLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_ConnectType get BLE => _id_BLE.get(_class, const $BaseCamera_ConnectType$Type());

  static final _id_WIFI =
      _class.staticFieldId(
        r'WIFI',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType WIFI`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_ConnectType get WIFI => _id_WIFI.get(_class, const $BaseCamera_ConnectType$Type());

  static final _id_USB =
      _class.staticFieldId(
        r'USB',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType USB`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_ConnectType get USB => _id_USB.get(_class, const $BaseCamera_ConnectType$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_ConnectType> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_ConnectType$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_ConnectType valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_ConnectType$Type());
  }


}
final class $BaseCamera_ConnectType$Type extends _$jni.JObjType<BaseCamera_ConnectType> {
  

  @_$jni.internal
  const $BaseCamera_ConnectType$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;';

  @_$jni.internal
  @_$core.override
  BaseCamera_ConnectType fromReference(_$jni.JReference reference) => BaseCamera_ConnectType.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_ConnectType$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_ConnectType$Type) &&
        other is $BaseCamera_ConnectType$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$IScanBleListener`
class BaseCamera_IScanBleListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_IScanBleListener> $type;

  

  @_$jni.internal
  BaseCamera_IScanBleListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_IScanBleListener$Type();
  static final _id_onScanStartSuccess = _class.instanceMethodId(
    r'onScanStartSuccess',
    r'()V',
  );

  static final _onScanStartSuccess = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void onScanStartSuccess()`
  void onScanStartSuccess(){
    
    _onScanStartSuccess(reference.pointer, _id_onScanStartSuccess as _$jni.JMethodIDPtr).check();
  }

  static final _id_onScanStartFail = _class.instanceMethodId(
    r'onScanStartFail',
    r'(I)V',
  );

  static final _onScanStartFail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onScanStartFail(int i)`
  void onScanStartFail(int i, ){
    
    _onScanStartFail(reference.pointer, _id_onScanStartFail as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_onRawScanResult = _class.instanceMethodId(
    r'onRawScanResult',
    r'(ILandroid/bluetooth/le/ScanResult;)V',
  );

  static final _onRawScanResult = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onRawScanResult(int i, android.bluetooth.le.ScanResult scanResult)`
  void onRawScanResult(int i, _$jni.JObject scanResult, ){
    
    _onRawScanResult(reference.pointer, _id_onRawScanResult as _$jni.JMethodIDPtr, i, scanResult.reference.pointer).check();
  }

  static final _id_onScanning = _class.instanceMethodId(
    r'onScanning',
    r'(Lcom/clj/fastble/data/BleDevice;)V',
  );

  static final _onScanning = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onScanning(com.clj.fastble.data.BleDevice bleDevice)`
  void onScanning(_$jni.JObject bleDevice, ){
    
    _onScanning(reference.pointer, _id_onScanning as _$jni.JMethodIDPtr, bleDevice.reference.pointer).check();
  }

  static final _id_onScanUpdate = _class.instanceMethodId(
    r'onScanUpdate',
    r'(Ljava/util/List;)V',
  );

  static final _onScanUpdate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onScanUpdate(java.util.List list)`
  void onScanUpdate(_$jni.JList<_$jni.JObject> list, ){
    
    _onScanUpdate(reference.pointer, _id_onScanUpdate as _$jni.JMethodIDPtr, list.reference.pointer).check();
  }

  static final _id_onScanFinish = _class.instanceMethodId(
    r'onScanFinish',
    r'(Ljava/util/List;)V',
  );

  static final _onScanFinish = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onScanFinish(java.util.List list)`
  void onScanFinish(_$jni.JList<_$jni.JObject> list, ){
    
    _onScanFinish(reference.pointer, _id_onScanFinish as _$jni.JMethodIDPtr, list.reference.pointer).check();
  }

  static final _id_onScanReject = _class.instanceMethodId(
    r'onScanReject',
    r'()V',
  );

  static final _onScanReject = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void onScanReject()`
  void onScanReject(){
    
    _onScanReject(reference.pointer, _id_onScanReject as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $BaseCamera_IScanBleListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onScanStartSuccess()V') {
          _$impls[$p]!.onScanStartSuccess(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScanStartFail(I)V') {
          _$impls[$p]!.onScanStartFail(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onRawScanResult(ILandroid/bluetooth/le/ScanResult;)V') {
          _$impls[$p]!.onRawScanResult(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScanning(Lcom/clj/fastble/data/BleDevice;)V') {
          _$impls[$p]!.onScanning(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScanUpdate(Ljava/util/List;)V') {
          _$impls[$p]!.onScanUpdate(
$a[0].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScanFinish(Ljava/util/List;)V') {
          _$impls[$p]!.onScanFinish(
$a[0].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScanReject()V') {
          _$impls[$p]!.onScanReject(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $BaseCamera_IScanBleListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.BaseCamera$IScanBleListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onScanStartSuccess$async) r'onScanStartSuccess()V',
        if ($impl.onScanStartFail$async) r'onScanStartFail(I)V',
        if ($impl.onRawScanResult$async) r'onRawScanResult(ILandroid/bluetooth/le/ScanResult;)V',
        if ($impl.onScanning$async) r'onScanning(Lcom/clj/fastble/data/BleDevice;)V',
        if ($impl.onScanUpdate$async) r'onScanUpdate(Ljava/util/List;)V',
        if ($impl.onScanFinish$async) r'onScanFinish(Ljava/util/List;)V',
        if ($impl.onScanReject$async) r'onScanReject()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory BaseCamera_IScanBleListener.implement(
    $BaseCamera_IScanBleListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return BaseCamera_IScanBleListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $BaseCamera_IScanBleListener {
  factory $BaseCamera_IScanBleListener(
    {required void Function() onScanStartSuccess, bool onScanStartSuccess$async,
    required void Function(int i) onScanStartFail, bool onScanStartFail$async,
    required void Function(int i, _$jni.JObject scanResult) onRawScanResult, bool onRawScanResult$async,
    required void Function(_$jni.JObject bleDevice) onScanning, bool onScanning$async,
    required void Function(_$jni.JList<_$jni.JObject> list) onScanUpdate, bool onScanUpdate$async,
    required void Function(_$jni.JList<_$jni.JObject> list) onScanFinish, bool onScanFinish$async,
    required void Function() onScanReject, bool onScanReject$async,}
  ) = _$BaseCamera_IScanBleListener;

  

  void onScanStartSuccess();
  bool get onScanStartSuccess$async => false;
  void onScanStartFail(int i);
  bool get onScanStartFail$async => false;
  void onRawScanResult(int i, _$jni.JObject scanResult);
  bool get onRawScanResult$async => false;
  void onScanning(_$jni.JObject bleDevice);
  bool get onScanning$async => false;
  void onScanUpdate(_$jni.JList<_$jni.JObject> list);
  bool get onScanUpdate$async => false;
  void onScanFinish(_$jni.JList<_$jni.JObject> list);
  bool get onScanFinish$async => false;
  void onScanReject();
  bool get onScanReject$async => false;
}

final class _$BaseCamera_IScanBleListener with $BaseCamera_IScanBleListener {
  _$BaseCamera_IScanBleListener(
    {required void Function() onScanStartSuccess, this.onScanStartSuccess$async = false,
    required void Function(int i) onScanStartFail, this.onScanStartFail$async = false,
    required void Function(int i, _$jni.JObject scanResult) onRawScanResult, this.onRawScanResult$async = false,
    required void Function(_$jni.JObject bleDevice) onScanning, this.onScanning$async = false,
    required void Function(_$jni.JList<_$jni.JObject> list) onScanUpdate, this.onScanUpdate$async = false,
    required void Function(_$jni.JList<_$jni.JObject> list) onScanFinish, this.onScanFinish$async = false,
    required void Function() onScanReject, this.onScanReject$async = false,}
  ) :  _onScanStartSuccess = onScanStartSuccess, _onScanStartFail = onScanStartFail, _onRawScanResult = onRawScanResult, _onScanning = onScanning, _onScanUpdate = onScanUpdate, _onScanFinish = onScanFinish, _onScanReject = onScanReject;

  

  final void Function() _onScanStartSuccess;
  final bool onScanStartSuccess$async;
  final void Function(int i) _onScanStartFail;
  final bool onScanStartFail$async;
  final void Function(int i, _$jni.JObject scanResult) _onRawScanResult;
  final bool onRawScanResult$async;
  final void Function(_$jni.JObject bleDevice) _onScanning;
  final bool onScanning$async;
  final void Function(_$jni.JList<_$jni.JObject> list) _onScanUpdate;
  final bool onScanUpdate$async;
  final void Function(_$jni.JList<_$jni.JObject> list) _onScanFinish;
  final bool onScanFinish$async;
  final void Function() _onScanReject;
  final bool onScanReject$async;

  void onScanStartSuccess() {
    return _onScanStartSuccess();
  }  void onScanStartFail(int i) {
    return _onScanStartFail(i);
  }  void onRawScanResult(int i, _$jni.JObject scanResult) {
    return _onRawScanResult(i, scanResult);
  }  void onScanning(_$jni.JObject bleDevice) {
    return _onScanning(bleDevice);
  }  void onScanUpdate(_$jni.JList<_$jni.JObject> list) {
    return _onScanUpdate(list);
  }  void onScanFinish(_$jni.JList<_$jni.JObject> list) {
    return _onScanFinish(list);
  }  void onScanReject() {
    return _onScanReject();
  }}
final class $BaseCamera_IScanBleListener$Type extends _$jni.JObjType<BaseCamera_IScanBleListener> {
  

  @_$jni.internal
  const $BaseCamera_IScanBleListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener;';

  @_$jni.internal
  @_$core.override
  BaseCamera_IScanBleListener fromReference(_$jni.JReference reference) => BaseCamera_IScanBleListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_IScanBleListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_IScanBleListener$Type) &&
        other is $BaseCamera_IScanBleListener$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0`
class BaseCamera_OooOOO0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_OooOOO0> $type;

  

  @_$jni.internal
  BaseCamera_OooOOO0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_OooOOO0$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0 OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_OooOOO0 get OooO00o => _id_OooO00o.get(_class, const $BaseCamera_OooOOO0$Type());

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0 OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_OooOOO0 get OooO0O0 => _id_OooO0O0.get(_class, const $BaseCamera_OooOOO0$Type());

  static final _id_OooO0OO =
      _class.staticFieldId(
        r'OooO0OO',
        r'[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0[] OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<BaseCamera_OooOOO0> get OooO0OO => _id_OooO0OO.get(_class, const _$jni.JArrayType($BaseCamera_OooOOO0$Type()));

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_OooOOO0> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_OooOOO0$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0 valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_OooOOO0 valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_OooOOO0$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;I)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(java.lang.String string, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory BaseCamera_OooOOO0(_$jni.JString string, int i, ) {
    
    return BaseCamera_OooOOO0.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i).reference
    );
  }


}
final class $BaseCamera_OooOOO0$Type extends _$jni.JObjType<BaseCamera_OooOOO0> {
  

  @_$jni.internal
  const $BaseCamera_OooOOO0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;';

  @_$jni.internal
  @_$core.override
  BaseCamera_OooOOO0 fromReference(_$jni.JReference reference) => BaseCamera_OooOOO0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_OooOOO0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_OooOOO0$Type) &&
        other is $BaseCamera_OooOOO0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo`
class BaseCamera_OooOo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_OooOo> $type;

  

  @_$jni.internal
  BaseCamera_OooOo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$OooOo');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_OooOo$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_OooOo get OooO00o => _id_OooO00o.get(_class, const $BaseCamera_OooOo$Type());

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_OooOo get OooO0O0 => _id_OooO0O0.get(_class, const $BaseCamera_OooOo$Type());

  static final _id_OooO0OO =
      _class.staticFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_OooOo get OooO0OO => _id_OooO0OO.get(_class, const $BaseCamera_OooOo$Type());

  static final _id_OooO0Oo =
      _class.staticFieldId(
        r'OooO0Oo',
        r'[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo[] OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<BaseCamera_OooOo> get OooO0Oo => _id_OooO0Oo.get(_class, const _$jni.JArrayType($BaseCamera_OooOo$Type()));

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_OooOo> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_OooOo$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_OooOo valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_OooOo$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;I)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(java.lang.String string, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory BaseCamera_OooOo(_$jni.JString string, int i, ) {
    
    return BaseCamera_OooOo.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i).reference
    );
  }


}
final class $BaseCamera_OooOo$Type extends _$jni.JObjType<BaseCamera_OooOo> {
  

  @_$jni.internal
  const $BaseCamera_OooOo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;';

  @_$jni.internal
  @_$core.override
  BaseCamera_OooOo fromReference(_$jni.JReference reference) => BaseCamera_OooOo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_OooOo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_OooOo$Type) &&
        other is $BaseCamera_OooOo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo00`
class BaseCamera_OooOo00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_OooOo00> $type;

  

  @_$jni.internal
  BaseCamera_OooOo00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$OooOo00');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_OooOo00$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO00o()`
  void OooO00o(){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$1 = _class.instanceMethodId(
    r'OooO00o',
    r'(I)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO00o(int i)`
  void OooO00o$1(int i, ){
    
    _OooO00o$1(reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $BaseCamera_OooOo00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o()V') {
          _$impls[$p]!.OooO00o(
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(I)V') {
          _$impls[$p]!.OooO00o$1(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $BaseCamera_OooOo00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o()V',
        if ($impl.OooO00o$1$async) r'OooO00o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory BaseCamera_OooOo00.implement(
    $BaseCamera_OooOo00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return BaseCamera_OooOo00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $BaseCamera_OooOo00 {
  factory $BaseCamera_OooOo00(
    {required void Function() OooO00o, bool OooO00o$async,
    required void Function(int i) OooO00o$1, bool OooO00o$1$async,}
  ) = _$BaseCamera_OooOo00;

  

  void OooO00o();
  bool get OooO00o$async => false;
  void OooO00o$1(int i);
  bool get OooO00o$1$async => false;
}

final class _$BaseCamera_OooOo00 with $BaseCamera_OooOo00 {
  _$BaseCamera_OooOo00(
    {required void Function() OooO00o, this.OooO00o$async = false,
    required void Function(int i) OooO00o$1, this.OooO00o$1$async = false,}
  ) :  _OooO00o = OooO00o, _OooO00o$1 = OooO00o$1;

  

  final void Function() _OooO00o;
  final bool OooO00o$async;
  final void Function(int i) _OooO00o$1;
  final bool OooO00o$1$async;

  void OooO00o() {
    return _OooO00o();
  }  void OooO00o$1(int i) {
    return _OooO00o$1(i);
  }}
final class $BaseCamera_OooOo00$Type extends _$jni.JObjType<BaseCamera_OooOo00> {
  

  @_$jni.internal
  const $BaseCamera_OooOo00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo00;';

  @_$jni.internal
  @_$core.override
  BaseCamera_OooOo00 fromReference(_$jni.JReference reference) => BaseCamera_OooOo00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_OooOo00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_OooOo00$Type) &&
        other is $BaseCamera_OooOo00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000`
class BaseCamera_Oooo000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_Oooo000> $type;

  

  @_$jni.internal
  BaseCamera_Oooo000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_Oooo000$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_Oooo000 get OooO00o => _id_OooO00o.get(_class, const $BaseCamera_Oooo000$Type());

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_Oooo000 get OooO0O0 => _id_OooO0O0.get(_class, const $BaseCamera_Oooo000$Type());

  static final _id_OooO0OO =
      _class.staticFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_Oooo000 get OooO0OO => _id_OooO0OO.get(_class, const $BaseCamera_Oooo000$Type());

  static final _id_OooO0Oo =
      _class.staticFieldId(
        r'OooO0Oo',
        r'[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000[] OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<BaseCamera_Oooo000> get OooO0Oo => _id_OooO0Oo.get(_class, const _$jni.JArrayType($BaseCamera_Oooo000$Type()));

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_Oooo000> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_Oooo000$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_Oooo000 valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_Oooo000$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;I)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(java.lang.String string, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory BaseCamera_Oooo000(_$jni.JString string, int i, ) {
    
    return BaseCamera_Oooo000.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i).reference
    );
  }


}
final class $BaseCamera_Oooo000$Type extends _$jni.JObjType<BaseCamera_Oooo000> {
  

  @_$jni.internal
  const $BaseCamera_Oooo000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;';

  @_$jni.internal
  @_$core.override
  BaseCamera_Oooo000 fromReference(_$jni.JReference reference) => BaseCamera_Oooo000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_Oooo000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_Oooo000$Type) &&
        other is $BaseCamera_Oooo000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus`
class BaseCamera_PreviewStatus extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera_PreviewStatus> $type;

  

  @_$jni.internal
  BaseCamera_PreviewStatus.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera_PreviewStatus$Type();
  static final _id_IDLE =
      _class.staticFieldId(
        r'IDLE',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus IDLE`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_PreviewStatus get IDLE => _id_IDLE.get(_class, const $BaseCamera_PreviewStatus$Type());

  static final _id_OPENING =
      _class.staticFieldId(
        r'OPENING',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus OPENING`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_PreviewStatus get OPENING => _id_OPENING.get(_class, const $BaseCamera_PreviewStatus$Type());

  static final _id_OPENED =
      _class.staticFieldId(
        r'OPENED',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus OPENED`
  /// The returned object must be released after use, by calling the [release] method.
static BaseCamera_PreviewStatus get OPENED => _id_OPENED.get(_class, const $BaseCamera_PreviewStatus$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<BaseCamera_PreviewStatus> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($BaseCamera_PreviewStatus$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static BaseCamera_PreviewStatus valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $BaseCamera_PreviewStatus$Type());
  }


}
final class $BaseCamera_PreviewStatus$Type extends _$jni.JObjType<BaseCamera_PreviewStatus> {
  

  @_$jni.internal
  const $BaseCamera_PreviewStatus$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;';

  @_$jni.internal
  @_$core.override
  BaseCamera_PreviewStatus fromReference(_$jni.JReference reference) => BaseCamera_PreviewStatus.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera_PreviewStatus$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera_PreviewStatus$Type) &&
        other is $BaseCamera_PreviewStatus$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCamera`
class BaseCamera extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCamera> $type;

  

  @_$jni.internal
  BaseCamera.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCamera');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCamera$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.log.CameraLogger OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static CameraLogger get OooO00o => _id_OooO00o.get(_class, const $CameraLogger$Type());

  static final _id_CAMERA_SERVICE_WIFI_AP_IP =
      _class.staticFieldId(
        r'CAMERA_SERVICE_WIFI_AP_IP',
        r'Ljava/lang/String;',
      );
  /// from: `static public final java.lang.String CAMERA_SERVICE_WIFI_AP_IP`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JString get CAMERA_SERVICE_WIFI_AP_IP => _id_CAMERA_SERVICE_WIFI_AP_IP.get(_class, const _$jni.JStringType());

  static final _id_OooO0O0 =
      _class.instanceFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO;',
      );
  /// from: `public final com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooO0O0 => _id_OooO0O0.get(this, const _$jni.JObjectType());

  static final _id_OooO0OO =
      _class.instanceFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController get OooO0OO => _id_OooO0OO.get(this, const $ICameraController$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0OO(ICameraController value) => _id_OooO0OO.set(this, const $ICameraController$Type(), value);

  static final _id_OooO0Oo =
      _class.instanceFieldId(
        r'OooO0Oo',
        r'Lcom/arashivision/camera/InstaCamera;',
      );
  /// from: `public com.arashivision.camera.InstaCamera OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooO0Oo => _id_OooO0Oo.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.InstaCamera OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0Oo(_$jni.JObject value) => _id_OooO0Oo.set(this, const _$jni.JObjectType(), value);

  static final _id_OooO0o0 =
      _class.instanceFieldId(
        r'OooO0o0',
        r'Z',
      );
  /// from: `public boolean OooO0o0`
bool get OooO0o0 => _id_OooO0o0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooO0o0`
set OooO0o0(bool value) => _id_OooO0o0.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooO0o =
      _class.instanceFieldId(
        r'OooO0o',
        r'Z',
      );
  /// from: `public boolean OooO0o`
bool get OooO0o => _id_OooO0o.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooO0o`
set OooO0o(bool value) => _id_OooO0o.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooO0oO =
      _class.instanceFieldId(
        r'OooO0oO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType OooO0oO`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_ConnectType get OooO0oO => _id_OooO0oO.get(this, const $BaseCamera_ConnectType$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType OooO0oO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0oO(BaseCamera_ConnectType value) => _id_OooO0oO.set(this, const $BaseCamera_ConnectType$Type(), value);

  static final _id_OooO0oo =
      _class.instanceFieldId(
        r'OooO0oo',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo OooO0oo`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_OooOo get OooO0oo => _id_OooO0oo.get(this, const $BaseCamera_OooOo$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo OooO0oo`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0oo(BaseCamera_OooOo value) => _id_OooO0oo.set(this, const $BaseCamera_OooOo$Type(), value);

  static final _id_OooO =
      _class.instanceFieldId(
        r'OooO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$Oooo000;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 OooO`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_Oooo000 get OooO => _id_OooO.get(this, const $BaseCamera_Oooo000$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$Oooo000 OooO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO(BaseCamera_Oooo000 value) => _id_OooO.set(this, const $BaseCamera_Oooo000$Type(), value);

  static final _id_OooOO0 =
      _class.instanceFieldId(
        r'OooOO0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus OooOO0`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CameraStatus get OooOO0 => _id_OooOO0.get(this, const $BaseCamera_CameraStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus OooOO0`
  /// The returned object must be released after use, by calling the [release] method.
set OooOO0(BaseCamera_CameraStatus value) => _id_OooOO0.set(this, const $BaseCamera_CameraStatus$Type(), value);

  static final _id_OooOO0O =
      _class.instanceFieldId(
        r'OooOO0O',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus OooOO0O`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CameraStatus get OooOO0O => _id_OooOO0O.get(this, const $BaseCamera_CameraStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus OooOO0O`
  /// The returned object must be released after use, by calling the [release] method.
set OooOO0O(BaseCamera_CameraStatus value) => _id_OooOO0O.set(this, const $BaseCamera_CameraStatus$Type(), value);

  static final _id_OooOO0o =
      _class.instanceFieldId(
        r'OooOO0o',
        r'Lcom/clj/fastble/data/BleDevice;',
      );
  /// from: `public com.clj.fastble.data.BleDevice OooOO0o`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOO0o => _id_OooOO0o.get(this, const _$jni.JObjectType());

  /// from: `public com.clj.fastble.data.BleDevice OooOO0o`
  /// The returned object must be released after use, by calling the [release] method.
set OooOO0o(_$jni.JObject value) => _id_OooOO0o.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOO0 =
      _class.instanceFieldId(
        r'OooOOO0',
        r'Ljava/util/List;',
      );
  /// from: `public final java.util.List OooOOO0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JList<_$jni.JObject> get OooOOO0 => _id_OooOOO0.get(this, const _$jni.JListType(_$jni.JObjectType()));

  static final _id_OooOOO =
      _class.instanceFieldId(
        r'OooOOO',
        r'Z',
      );
  /// from: `public boolean OooOOO`
bool get OooOOO => _id_OooOOO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOOO`
set OooOOO(bool value) => _id_OooOOO.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOOOO =
      _class.instanceFieldId(
        r'OooOOOO',
        r'J',
      );
  /// from: `public long OooOOOO`
int get OooOOOO => _id_OooOOOO.get(this, const _$jni.jlongType());

  /// from: `public long OooOOOO`
set OooOOOO(int value) => _id_OooOOOO.set(this, const _$jni.jlongType(), value);

  static final _id_OooOOOo =
      _class.instanceFieldId(
        r'OooOOOo',
        r'J',
      );
  /// from: `public long OooOOOo`
int get OooOOOo => _id_OooOOOo.get(this, const _$jni.jlongType());

  /// from: `public long OooOOOo`
set OooOOOo(int value) => _id_OooOOOo.set(this, const _$jni.jlongType(), value);

  static final _id_OooOOo0 =
      _class.instanceFieldId(
        r'OooOOo0',
        r'J',
      );
  /// from: `public long OooOOo0`
int get OooOOo0 => _id_OooOOo0.get(this, const _$jni.jlongType());

  /// from: `public long OooOOo0`
set OooOOo0(int value) => _id_OooOOo0.set(this, const _$jni.jlongType(), value);

  static final _id_OooOOo =
      _class.instanceFieldId(
        r'OooOOo',
        r'Z',
      );
  /// from: `public boolean OooOOo`
bool get OooOOo => _id_OooOOo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOOo`
set OooOOo(bool value) => _id_OooOOo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOOoo =
      _class.instanceFieldId(
        r'OooOOoo',
        r'Landroid/os/Handler;',
      );
  /// from: `public final android.os.Handler OooOOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOoo => _id_OooOOoo.get(this, const _$jni.JObjectType());

  static final _id_OooOo00 =
      _class.instanceFieldId(
        r'OooOo00',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$IScanBleListener OooOo00`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_IScanBleListener get OooOo00 => _id_OooOo00.get(this, const $BaseCamera_IScanBleListener$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$IScanBleListener OooOo00`
  /// The returned object must be released after use, by calling the [release] method.
set OooOo00(BaseCamera_IScanBleListener value) => _id_OooOo00.set(this, const $BaseCamera_IScanBleListener$Type(), value);

  static final _id_OooOo0 =
      _class.instanceFieldId(
        r'OooOo0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo00;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo00 OooOo0`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_OooOo00 get OooOo0 => _id_OooOo0.get(this, const $BaseCamera_OooOo00$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo00 OooOo0`
  /// The returned object must be released after use, by calling the [release] method.
set OooOo0(BaseCamera_OooOo00 value) => _id_OooOo0.set(this, const $BaseCamera_OooOo00$Type(), value);

  static final _id_OooOo0O =
      _class.instanceFieldId(
        r'OooOo0O',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOOO;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOOO OooOo0O`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOo0O => _id_OooOo0O.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOOO OooOo0O`
  /// The returned object must be released after use, by calling the [release] method.
set OooOo0O(_$jni.JObject value) => _id_OooOo0O.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOo0o =
      _class.instanceFieldId(
        r'OooOo0o',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable OooOo0o`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOo0o => _id_OooOo0o.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable OooOo0o`
  /// The returned object must be released after use, by calling the [release] method.
set OooOo0o(_$jni.JObject value) => _id_OooOo0o.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOo =
      _class.instanceFieldId(
        r'OooOo',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public final java.lang.Runnable OooOo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOo => _id_OooOo.get(this, const _$jni.JObjectType());

  static final _id_OooOoO0 =
      _class.instanceFieldId(
        r'OooOoO0',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public final java.lang.Runnable OooOoO0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOoO0 => _id_OooOoO0.get(this, const _$jni.JObjectType());

  static final _id_OooOoO =
      _class.instanceFieldId(
        r'OooOoO',
        r'Z',
      );
  /// from: `public boolean OooOoO`
bool get OooOoO => _id_OooOoO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOoO`
set OooOoO(bool value) => _id_OooOoO.set(this, const _$jni.jbooleanType(), value);

  static final _id_new$ = _class.constructorId(
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType, com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO oooOOO)`
  /// The returned object must be released after use, by calling the [release] method.
  factory BaseCamera(BaseCamera_ConnectType connectType, _$jni.JObject oooOOO, ) {
    
    return BaseCamera.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, connectType.reference.pointer, oooOOO.reference.pointer).reference
    );
  }

  static final _id_OooO00o$1 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;I)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `synthetic static public void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo o000O0Oo, int i)`
  static void OooO00o$1(ICameraController_o000O0Oo o000O0Oo, int i, ){
    
    _OooO00o$1(_class.reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, o000O0Oo.reference.pointer, i).check();
  }

  static final _id_OooO00o$2 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/clj/fastble/data/BleDevice;)V',
  );

  static final _OooO00o$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.clj.fastble.data.BleDevice bleDevice)`
  static void OooO00o$2(BaseCamera baseCamera, _$jni.JObject bleDevice, ){
    
    _OooO00o$2(_class.reference.pointer, _id_OooO00o$2 as _$jni.JMethodIDPtr, baseCamera.reference.pointer, bleDevice.reference.pointer).check();
  }

  static final _id_OooO0O0$1 = _class.staticMethodId(
    r'OooO0O0',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)Z',
  );

  static final _OooO0O0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `synthetic static public boolean OooO0O0(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, boolean z)`
  static bool OooO0O0$1(BaseCamera baseCamera, bool z, ){
    
    return _OooO0O0$1(_class.reference.pointer, _id_OooO0O0$1 as _$jni.JMethodIDPtr, baseCamera.reference.pointer, z ? 1 : 0).boolean;
  }

  static final _id_OooO00o$3 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)Z',
  );

  static final _OooO00o$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `synthetic static public boolean OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, boolean z)`
  static bool OooO00o$3(BaseCamera baseCamera, bool z, ){
    
    return _OooO00o$3(_class.reference.pointer, _id_OooO00o$3 as _$jni.JMethodIDPtr, baseCamera.reference.pointer, z ? 1 : 0).boolean;
  }


  static final _id_setCaptureStatusChangedListener = _class.instanceMethodId(
    r'setCaptureStatusChangedListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;)V',
  );

  static final _setCaptureStatusChangedListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCaptureStatusChangedListener(com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener iCaptureStatusChangedListener)`
  void setCaptureStatusChangedListener(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener, ){
    
    _setCaptureStatusChangedListener(reference.pointer, _id_setCaptureStatusChangedListener as _$jni.JMethodIDPtr, iCaptureStatusChangedListener.reference.pointer).check();
  }

  static final _id_setPreviewStatusChangedListener = _class.instanceMethodId(
    r'setPreviewStatusChangedListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;)V',
  );

  static final _setPreviewStatusChangedListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewStatusChangedListener(com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener iPreviewStatusChangedListener)`
  void setPreviewStatusChangedListener(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener, ){
    
    _setPreviewStatusChangedListener(reference.pointer, _id_setPreviewStatusChangedListener as _$jni.JMethodIDPtr, iPreviewStatusChangedListener.reference.pointer).check();
  }

  static final _id_getConnectDevice = _class.instanceMethodId(
    r'getConnectDevice',
    r'()Lcom/clj/fastble/data/BleDevice;',
  );

  static final _getConnectDevice = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.clj.fastble.data.BleDevice getConnectDevice()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getConnectDevice(){
    
    return _getConnectDevice(reference.pointer, _id_getConnectDevice as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_OooO00o$4 = _class.instanceMethodId(
    r'OooO00o',
    r'(J)V',
  );

  static final _OooO00o$4 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void OooO00o(long j)`
  void OooO00o$4(int j, ){
    
    _OooO00o$4(reference.pointer, _id_OooO00o$4 as _$jni.JMethodIDPtr, j).check();
  }

  static final _id_setWakeUpBleListener = _class.instanceMethodId(
    r'setWakeUpBleListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOo00;)V',
  );

  static final _setWakeUpBleListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWakeUpBleListener(com.arashivision.insta360.basecamera.camera.BaseCamera$OooOo00 oooOo00)`
  void setWakeUpBleListener(BaseCamera_OooOo00 oooOo00, ){
    
    _setWakeUpBleListener(reference.pointer, _id_setWakeUpBleListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_requestAuthorization = _class.instanceMethodId(
    r'requestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;)V',
  );

  static final _requestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void requestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0 o000O0)`
  void requestAuthorization(int i, ICameraController_o000O0 o000O0, ){
    
    _requestAuthorization(reference.pointer, _id_requestAuthorization as _$jni.JMethodIDPtr, i, o000O0.reference.pointer).check();
  }

  static final _id_cancelRequestAuthorization = _class.instanceMethodId(
    r'cancelRequestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelRequestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelRequestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelRequestAuthorization(int i, ICameraController_OooO0o oooO0o, ){
    
    _cancelRequestAuthorization(reference.pointer, _id_cancelRequestAuthorization as _$jni.JMethodIDPtr, i, oooO0o.reference.pointer).check();
  }

  static final _id_cancelAuthorization = _class.instanceMethodId(
    r'cancelAuthorization',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelAuthorization(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelAuthorization(ICameraController_OooO0o oooO0o, ){
    
    _cancelAuthorization(reference.pointer, _id_cancelAuthorization as _$jni.JMethodIDPtr, oooO0o.reference.pointer).check();
  }

  static final _id_checkToContinueCameraCheck = _class.instanceMethodId(
    r'checkToContinueCameraCheck',
    r'()V',
  );

  static final _checkToContinueCameraCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void checkToContinueCameraCheck()`
  void checkToContinueCameraCheck(){
    
    _checkToContinueCameraCheck(reference.pointer, _id_checkToContinueCameraCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$5 = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o$5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void OooO00o()`
  void OooO00o$5(){
    
    _OooO00o$5(reference.pointer, _id_OooO00o$5 as _$jni.JMethodIDPtr).check();
  }

  static final _id_isFrozen = _class.instanceMethodId(
    r'isFrozen',
    r'()Z',
  );

  static final _isFrozen = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFrozen()`
  bool isFrozen(){
    
    return _isFrozen(reference.pointer, _id_isFrozen as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_freeze = _class.instanceMethodId(
    r'freeze',
    r'()V',
  );

  static final _freeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void freeze()`
  void freeze(){
    
    _freeze(reference.pointer, _id_freeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_unfreeze = _class.instanceMethodId(
    r'unfreeze',
    r'()V',
  );

  static final _unfreeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void unfreeze()`
  void unfreeze(){
    
    _unfreeze(reference.pointer, _id_unfreeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_syncCameraSensorMode = _class.instanceMethodId(
    r'syncCameraSensorMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;)V',
  );

  static final _syncCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void syncCameraSensorMode(com.arashivision.insta360.basecamera.camera.ICameraController$o0000Ooo o0000Ooo)`
  void syncCameraSensorMode(ICameraController_o0000Ooo o0000Ooo, ){
    
    _syncCameraSensorMode(reference.pointer, _id_syncCameraSensorMode as _$jni.JMethodIDPtr, o0000Ooo.reference.pointer).check();
  }

  static final _id_getCameraSensorMode = _class.instanceMethodId(
    r'getCameraSensorMode',
    r'()I',
  );

  static final _getCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraSensorMode()`
  int getCameraSensorMode(){
    
    return _getCameraSensorMode(reference.pointer, _id_getCameraSensorMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_supportSwitchCameraSensorMode = _class.instanceMethodId(
    r'supportSwitchCameraSensorMode',
    r'()Z',
  );

  static final _supportSwitchCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportSwitchCameraSensorMode()`
  bool supportSwitchCameraSensorMode(){
    
    return _supportSwitchCameraSensorMode(reference.pointer, _id_supportSwitchCameraSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraSingleSensorMode = _class.instanceMethodId(
    r'isCameraSingleSensorMode',
    r'()Z',
  );

  static final _isCameraSingleSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraSingleSensorMode()`
  bool isCameraSingleSensorMode(){
    
    return _isCameraSingleSensorMode(reference.pointer, _id_isCameraSingleSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraPowerPanoMode = _class.instanceMethodId(
    r'isCameraPowerPanoMode',
    r'()Z',
  );

  static final _isCameraPowerPanoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraPowerPanoMode()`
  bool isCameraPowerPanoMode(){
    
    return _isCameraPowerPanoMode(reference.pointer, _id_isCameraPowerPanoMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setCameraSensorMode = _class.instanceMethodId(
    r'setCameraSensorMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;)V',
  );

  static final _setCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSensorMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO0O o000OO0O)`
  void setCameraSensorMode(int i, ICameraController_o000OO0O o000OO0O, ){
    
    _setCameraSensorMode(reference.pointer, _id_setCameraSensorMode as _$jni.JMethodIDPtr, i, o000OO0O.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorResolutionId = _class.instanceMethodId(
    r'getCameraSingleSensorResolutionId',
    r'(I)I',
  );

  static final _getCameraSingleSensorResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorResolutionId(int i)`
  int getCameraSingleSensorResolutionId(int i, ){
    
    return _getCameraSingleSensorResolutionId(reference.pointer, _id_getCameraSingleSensorResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorResolution = _class.instanceMethodId(
    r'setCameraSingleSensorResolution',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorResolution(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorResolution(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorResolution(reference.pointer, _id_setCameraSingleSensorResolution as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorFlowstateEnable = _class.instanceMethodId(
    r'getCameraSingleSensorFlowstateEnable',
    r'(I)Z',
  );

  static final _getCameraSingleSensorFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCameraSingleSensorFlowstateEnable(int i)`
  bool getCameraSingleSensorFlowstateEnable(int i, ){
    
    return _getCameraSingleSensorFlowstateEnable(reference.pointer, _id_getCameraSingleSensorFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCameraSingleSensorFlowstateEnable = _class.instanceMethodId(
    r'setCameraSingleSensorFlowstateEnable',
    r'(IIZLcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorFlowstateEnable(int i, int i1, boolean z, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorFlowstateEnable(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorFlowstateEnable(reference.pointer, _id_setCameraSingleSensorFlowstateEnable as _$jni.JMethodIDPtr, i, i1, z ? 1 : 0, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'getCameraSingleSensorDimensionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorDimensionType(int i)`
  int getCameraSingleSensorDimensionType(int i, ){
    
    return _getCameraSingleSensorDimensionType(reference.pointer, _id_getCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'setCameraSingleSensorDimensionType',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorDimensionType(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorDimensionType(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorDimensionType(reference.pointer, _id_setCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorVisionType = _class.instanceMethodId(
    r'getCameraSingleSensorVisionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorVisionType(int i)`
  int getCameraSingleSensorVisionType(int i, ){
    
    return _getCameraSingleSensorVisionType(reference.pointer, _id_getCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorVisionType = _class.instanceMethodId(
    r'setCameraSingleSensorVisionType',
    r'(III)V',
  );

  static final _setCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void setCameraSingleSensorVisionType(int i, int i1, int i2)`
  void setCameraSingleSensorVisionType(int i, int i1, int i2, ){
    
    _setCameraSingleSensorVisionType(reference.pointer, _id_setCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i, i1, i2).check();
  }

  static final _id_openPreviewStream = _class.instanceMethodId(
    r'openPreviewStream',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;IZLcom/arashivision/onecamera/render/RenderMode;ZIZLjava/lang/String;Z)V',
  );

  static final _openPreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, int, _$jni.Pointer<_$jni.Void>, int, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void openPreviewStream(com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution, com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution1, int i, boolean z, com.arashivision.onecamera.render.RenderMode renderMode, boolean z1, int i1, boolean z2, java.lang.String string, boolean z3)`
  void openPreviewStream(StreamResolution streamResolution, StreamResolution streamResolution1, int i, bool z, _$jni.JObject renderMode, bool z1, int i1, bool z2, _$jni.JString string, bool z3, ){
    
    _openPreviewStream(reference.pointer, _id_openPreviewStream as _$jni.JMethodIDPtr, streamResolution.reference.pointer, streamResolution1.reference.pointer, i, z ? 1 : 0, renderMode.reference.pointer, z1 ? 1 : 0, i1, z2 ? 1 : 0, string.reference.pointer, z3 ? 1 : 0).check();
  }

  static final _id_closePreviewStream = _class.instanceMethodId(
    r'closePreviewStream',
    r'()V',
  );

  static final _closePreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void closePreviewStream()`
  void closePreviewStream(){
    
    _closePreviewStream(reference.pointer, _id_closePreviewStream as _$jni.JMethodIDPtr).check();
  }

  static final _id_getPreviewStatus = _class.instanceMethodId(
    r'getPreviewStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
  );

  static final _getPreviewStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus getPreviewStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_PreviewStatus getPreviewStatus(){
    
    return _getPreviewStatus(reference.pointer, _id_getPreviewStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_PreviewStatus$Type());
  }

  static final _id_setPipeline = _class.instanceMethodId(
    r'setPipeline',
    r'(Lcom/arashivision/onestream/pipeline/ICameraPreviewPipeline;)V',
  );

  static final _setPipeline = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPipeline(com.arashivision.onestream.pipeline.ICameraPreviewPipeline iCameraPreviewPipeline)`
  void setPipeline(_$jni.JObject iCameraPreviewPipeline, ){
    
    _setPipeline(reference.pointer, _id_setPipeline as _$jni.JMethodIDPtr, iCameraPreviewPipeline.reference.pointer).check();
  }

  static final _id_setPreviewImageNotify = _class.instanceMethodId(
    r'setPreviewImageNotify',
    r'(Lcom/arashivision/camera/stream/PreviewImageNotify;Landroid/os/Handler;)V',
  );

  static final _setPreviewImageNotify = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewImageNotify(com.arashivision.camera.stream.PreviewImageNotify previewImageNotify, android.os.Handler handler)`
  void setPreviewImageNotify(_$jni.JObject previewImageNotify, _$jni.JObject handler, ){
    
    _setPreviewImageNotify(reference.pointer, _id_setPreviewImageNotify as _$jni.JMethodIDPtr, previewImageNotify.reference.pointer, handler.reference.pointer).check();
  }

  static final _id_forcePutPreviewImage = _class.instanceMethodId(
    r'forcePutPreviewImage',
    r'([Lcom/arashivision/onestream/ImageData;)V',
  );

  static final _forcePutPreviewImage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void forcePutPreviewImage(com.arashivision.onestream.ImageData[] imageDatas)`
  void forcePutPreviewImage(_$jni.JArray<_$jni.JObject> imageDatas, ){
    
    _forcePutPreviewImage(reference.pointer, _id_forcePutPreviewImage as _$jni.JMethodIDPtr, imageDatas.reference.pointer).check();
  }

  static final _id_isStreamProcessing = _class.instanceMethodId(
    r'isStreamProcessing',
    r'()Z',
  );

  static final _isStreamProcessing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStreamProcessing()`
  bool isStreamProcessing(){
    
    return _isStreamProcessing(reference.pointer, _id_isStreamProcessing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isH265StreamEncode = _class.instanceMethodId(
    r'isH265StreamEncode',
    r'()Z',
  );

  static final _isH265StreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isH265StreamEncode()`
  bool isH265StreamEncode(){
    
    return _isH265StreamEncode(reference.pointer, _id_isH265StreamEncode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStreamEncode = _class.instanceMethodId(
    r'setStreamEncode',
    r'(Z)V',
  );

  static final _setStreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setStreamEncode(boolean z)`
  void setStreamEncode(bool z, ){
    
    _setStreamEncode(reference.pointer, _id_setStreamEncode as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_requestStreamIframe = _class.instanceMethodId(
    r'requestStreamIframe',
    r'()V',
  );

  static final _requestStreamIframe = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void requestStreamIframe()`
  void requestStreamIframe(){
    
    _requestStreamIframe(reference.pointer, _id_requestStreamIframe as _$jni.JMethodIDPtr).check();
  }

  static final _id_getCurFirstStreamResolution = _class.instanceMethodId(
    r'getCurFirstStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurFirstStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurFirstStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurFirstStreamResolution(){
    
    return _getCurFirstStreamResolution(reference.pointer, _id_getCurFirstStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurSecondStreamResolution = _class.instanceMethodId(
    r'getCurSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurSecondStreamResolution(){
    
    return _getCurSecondStreamResolution(reference.pointer, _id_getCurSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurRealCameraStreamResolution = _class.instanceMethodId(
    r'getCurRealCameraStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getCurRealCameraStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getCurRealCameraStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getCurRealCameraStreamResolution(){
    
    return _getCurRealCameraStreamResolution(reference.pointer, _id_getCurRealCameraStreamResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_getAudioCodec = _class.instanceMethodId(
    r'getAudioCodec',
    r'()I',
  );

  static final _getAudioCodec = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getAudioCodec()`
  int getAudioCodec(){
    
    return _getAudioCodec(reference.pointer, _id_getAudioCodec as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getPreviewNum = _class.instanceMethodId(
    r'getPreviewNum',
    r'()I',
  );

  static final _getPreviewNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPreviewNum()`
  int getPreviewNum(){
    
    return _getPreviewNum(reference.pointer, _id_getPreviewNum as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getRenderMode = _class.instanceMethodId(
    r'getRenderMode',
    r'()Lcom/arashivision/onecamera/render/RenderMode;',
  );

  static final _getRenderMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.render.RenderMode getRenderMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getRenderMode(){
    
    return _getRenderMode(reference.pointer, _id_getRenderMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getSecondStreamResolution = _class.instanceMethodId(
    r'getSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getSecondStreamResolution(){
    
    return _getSecondStreamResolution(reference.pointer, _id_getSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_pauseRecord = _class.instanceMethodId(
    r'pauseRecord',
    r'()V',
  );

  static final _pauseRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void pauseRecord()`
  void pauseRecord(){
    
    _pauseRecord(reference.pointer, _id_pauseRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_startNormalCapture = _class.instanceMethodId(
    r'startNormalCapture',
    r'(I[BI)V',
  );

  static final _startNormalCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalCapture(int i, byte[] bs, int i1)`
  void startNormalCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNormalCapture(reference.pointer, _id_startNormalCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_startCaptureWhileRecording = _class.instanceMethodId(
    r'startCaptureWhileRecording',
    r'(I[BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;)V',
  );

  static final _startCaptureWhileRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startCaptureWhileRecording(int i, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooO oooO)`
  void startCaptureWhileRecording(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO, ){
    
    _startCaptureWhileRecording(reference.pointer, _id_startCaptureWhileRecording as _$jni.JMethodIDPtr, i, bs.reference.pointer, oooO.reference.pointer).check();
  }

  static final _id_isNormalCapturing = _class.instanceMethodId(
    r'isNormalCapturing',
    r'()Z',
  );

  static final _isNormalCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalCapturing()`
  bool isNormalCapturing(){
    
    return _isNormalCapturing(reference.pointer, _id_isNormalCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalPanoCapture = _class.instanceMethodId(
    r'startNormalPanoCapture',
    r'(II[BI)V',
  );

  static final _startNormalPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalPanoCapture(int i, int i1, byte[] bs, int i2)`
  void startNormalPanoCapture(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startNormalPanoCapture(reference.pointer, _id_startNormalPanoCapture as _$jni.JMethodIDPtr, i, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isNormalPanoCapturing = _class.instanceMethodId(
    r'isNormalPanoCapturing',
    r'()Z',
  );

  static final _isNormalPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalPanoCapturing()`
  bool isNormalPanoCapturing(){
    
    return _isNormalPanoCapturing(reference.pointer, _id_isNormalPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRCapture = _class.instanceMethodId(
    r'startHDRCapture',
    r'([II[BI)V',
  );

  static final _startHDRCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRCapture(int[] is, int i, byte[] bs, int i1)`
  void startHDRCapture(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startHDRCapture(reference.pointer, _id_startHDRCapture as _$jni.JMethodIDPtr, is$.reference.pointer, i, bs.reference.pointer, i1).check();
  }

  static final _id_isHDRCapturing = _class.instanceMethodId(
    r'isHDRCapturing',
    r'()Z',
  );

  static final _isHDRCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRCapturing()`
  bool isHDRCapturing(){
    
    return _isHDRCapturing(reference.pointer, _id_isHDRCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRPanoCapture = _class.instanceMethodId(
    r'startHDRPanoCapture',
    r'(I[II[BI)V',
  );

  static final _startHDRPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRPanoCapture(int i, int[] is, int i1, byte[] bs, int i2)`
  void startHDRPanoCapture(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startHDRPanoCapture(reference.pointer, _id_startHDRPanoCapture as _$jni.JMethodIDPtr, i, is$.reference.pointer, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isHDRPanoCapturing = _class.instanceMethodId(
    r'isHDRPanoCapturing',
    r'()Z',
  );

  static final _isHDRPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRPanoCapturing()`
  bool isHDRPanoCapturing(){
    
    return _isHDRPanoCapturing(reference.pointer, _id_isHDRPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNightScene = _class.instanceMethodId(
    r'startNightScene',
    r'(I[BI)V',
  );

  static final _startNightScene = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNightScene(int i, byte[] bs, int i1)`
  void startNightScene(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNightScene(reference.pointer, _id_startNightScene as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isNightSceneCapturing = _class.instanceMethodId(
    r'isNightSceneCapturing',
    r'()Z',
  );

  static final _isNightSceneCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNightSceneCapturing()`
  bool isNightSceneCapturing(){
    
    return _isNightSceneCapturing(reference.pointer, _id_isNightSceneCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalShooting = _class.instanceMethodId(
    r'startIntervalShooting',
    r'([B)V',
  );

  static final _startIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalShooting(byte[] bs)`
  void startIntervalShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalShooting(reference.pointer, _id_startIntervalShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalShooting = _class.instanceMethodId(
    r'stopIntervalShooting',
    r'()V',
  );

  static final _stopIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalShooting()`
  void stopIntervalShooting(){
    
    _stopIntervalShooting(reference.pointer, _id_stopIntervalShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalShooting = _class.instanceMethodId(
    r'isIntervalShooting',
    r'()Z',
  );

  static final _isIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalShooting()`
  bool isIntervalShooting(){
    
    return _isIntervalShooting(reference.pointer, _id_isIntervalShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStarLapseShooting = _class.instanceMethodId(
    r'startStarLapseShooting',
    r'([B)V',
  );

  static final _startStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startStarLapseShooting(byte[] bs)`
  void startStarLapseShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startStarLapseShooting(reference.pointer, _id_startStarLapseShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopStarLapseShooting = _class.instanceMethodId(
    r'stopStarLapseShooting',
    r'()V',
  );

  static final _stopStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopStarLapseShooting()`
  void stopStarLapseShooting(){
    
    _stopStarLapseShooting(reference.pointer, _id_stopStarLapseShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isStarLapseShooting = _class.instanceMethodId(
    r'isStarLapseShooting',
    r'()Z',
  );

  static final _isStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStarLapseShooting()`
  bool isStarLapseShooting(){
    
    return _isStarLapseShooting(reference.pointer, _id_isStarLapseShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBurstCapture = _class.instanceMethodId(
    r'startBurstCapture',
    r'(I[BI)V',
  );

  static final _startBurstCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startBurstCapture(int i, byte[] bs, int i1)`
  void startBurstCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startBurstCapture(reference.pointer, _id_startBurstCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isBurstCapturing = _class.instanceMethodId(
    r'isBurstCapturing',
    r'()Z',
  );

  static final _isBurstCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBurstCapturing()`
  bool isBurstCapturing(){
    
    return _isBurstCapturing(reference.pointer, _id_isBurstCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalRecord = _class.instanceMethodId(
    r'startNormalRecord',
    r'()V',
  );

  static final _startNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startNormalRecord()`
  void startNormalRecord(){
    
    _startNormalRecord(reference.pointer, _id_startNormalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopNormalRecord = _class.instanceMethodId(
    r'stopNormalRecord',
    r'([B)V',
  );

  static final _stopNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopNormalRecord(byte[] bs)`
  void stopNormalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopNormalRecord(reference.pointer, _id_stopNormalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isNormalRecording = _class.instanceMethodId(
    r'isNormalRecording',
    r'()Z',
  );

  static final _isNormalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalRecording()`
  bool isNormalRecording(){
    
    return _isNormalRecording(reference.pointer, _id_isNormalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSuperRecord = _class.instanceMethodId(
    r'startSuperRecord',
    r'()V',
  );

  static final _startSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSuperRecord()`
  void startSuperRecord(){
    
    _startSuperRecord(reference.pointer, _id_startSuperRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSuperRecord = _class.instanceMethodId(
    r'stopSuperRecord',
    r'([B)V',
  );

  static final _stopSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSuperRecord(byte[] bs)`
  void stopSuperRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSuperRecord(reference.pointer, _id_stopSuperRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSuperRecording = _class.instanceMethodId(
    r'isSuperRecording',
    r'()Z',
  );

  static final _isSuperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSuperRecording()`
  bool isSuperRecording(){
    
    return _isSuperRecording(reference.pointer, _id_isSuperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRRecord = _class.instanceMethodId(
    r'startHDRRecord',
    r'()V',
  );

  static final _startHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startHDRRecord()`
  void startHDRRecord(){
    
    _startHDRRecord(reference.pointer, _id_startHDRRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopHDRRecord = _class.instanceMethodId(
    r'stopHDRRecord',
    r'([B)V',
  );

  static final _stopHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopHDRRecord(byte[] bs)`
  void stopHDRRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopHDRRecord(reference.pointer, _id_stopHDRRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isHDRRecording = _class.instanceMethodId(
    r'isHDRRecording',
    r'()Z',
  );

  static final _isHDRRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRRecording()`
  bool isHDRRecording(){
    
    return _isHDRRecording(reference.pointer, _id_isHDRRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBulletTime = _class.instanceMethodId(
    r'startBulletTime',
    r'()V',
  );

  static final _startBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startBulletTime()`
  void startBulletTime(){
    
    _startBulletTime(reference.pointer, _id_startBulletTime as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopBulletTime = _class.instanceMethodId(
    r'stopBulletTime',
    r'([B)V',
  );

  static final _stopBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopBulletTime(byte[] bs)`
  void stopBulletTime(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopBulletTime(reference.pointer, _id_stopBulletTime as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isBulletTimeRecording = _class.instanceMethodId(
    r'isBulletTimeRecording',
    r'()Z',
  );

  static final _isBulletTimeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBulletTimeRecording()`
  bool isBulletTimeRecording(){
    
    return _isBulletTimeRecording(reference.pointer, _id_isBulletTimeRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimeShift = _class.instanceMethodId(
    r'startTimeShift',
    r'()V',
  );

  static final _startTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimeShift()`
  void startTimeShift(){
    
    _startTimeShift(reference.pointer, _id_startTimeShift as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimeShift = _class.instanceMethodId(
    r'stopTimeShift',
    r'([B)V',
  );

  static final _stopTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimeShift(byte[] bs)`
  void stopTimeShift(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimeShift(reference.pointer, _id_stopTimeShift as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimeShiftRecording = _class.instanceMethodId(
    r'isTimeShiftRecording',
    r'()Z',
  );

  static final _isTimeShiftRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimeShiftRecording()`
  bool isTimeShiftRecording(){
    
    return _isTimeShiftRecording(reference.pointer, _id_isTimeShiftRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startLooperRecording = _class.instanceMethodId(
    r'startLooperRecording',
    r'()V',
  );

  static final _startLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startLooperRecording()`
  void startLooperRecording(){
    
    _startLooperRecording(reference.pointer, _id_startLooperRecording as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopLooperRecording = _class.instanceMethodId(
    r'stopLooperRecording',
    r'([B)V',
  );

  static final _stopLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopLooperRecording(byte[] bs)`
  void stopLooperRecording(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopLooperRecording(reference.pointer, _id_stopLooperRecording as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isLooperRecording = _class.instanceMethodId(
    r'isLooperRecording',
    r'()Z',
  );

  static final _isLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLooperRecording()`
  bool isLooperRecording(){
    
    return _isLooperRecording(reference.pointer, _id_isLooperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startFpvRecord = _class.instanceMethodId(
    r'startFpvRecord',
    r'()V',
  );

  static final _startFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFpvRecord()`
  void startFpvRecord(){
    
    _startFpvRecord(reference.pointer, _id_startFpvRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopFpvRecord = _class.instanceMethodId(
    r'stopFpvRecord',
    r'([B)V',
  );

  static final _stopFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFpvRecord(byte[] bs)`
  void stopFpvRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopFpvRecord(reference.pointer, _id_stopFpvRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isFpvRecording = _class.instanceMethodId(
    r'isFpvRecording',
    r'()Z',
  );

  static final _isFpvRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFpvRecording()`
  bool isFpvRecording(){
    
    return _isFpvRecording(reference.pointer, _id_isFpvRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startMovieRecord = _class.instanceMethodId(
    r'startMovieRecord',
    r'()V',
  );

  static final _startMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startMovieRecord()`
  void startMovieRecord(){
    
    _startMovieRecord(reference.pointer, _id_startMovieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopMovieRecord = _class.instanceMethodId(
    r'stopMovieRecord',
    r'([B)V',
  );

  static final _stopMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopMovieRecord(byte[] bs)`
  void stopMovieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopMovieRecord(reference.pointer, _id_stopMovieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isMovieRecording = _class.instanceMethodId(
    r'isMovieRecording',
    r'()Z',
  );

  static final _isMovieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMovieRecording()`
  bool isMovieRecording(){
    
    return _isMovieRecording(reference.pointer, _id_isMovieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSlowMotionRecord = _class.instanceMethodId(
    r'startSlowMotionRecord',
    r'()V',
  );

  static final _startSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSlowMotionRecord()`
  void startSlowMotionRecord(){
    
    _startSlowMotionRecord(reference.pointer, _id_startSlowMotionRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSlowMotionRecord = _class.instanceMethodId(
    r'stopSlowMotionRecord',
    r'([B)V',
  );

  static final _stopSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSlowMotionRecord(byte[] bs)`
  void stopSlowMotionRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSlowMotionRecord(reference.pointer, _id_stopSlowMotionRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSlowMotionRecording = _class.instanceMethodId(
    r'isSlowMotionRecording',
    r'()Z',
  );

  static final _isSlowMotionRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSlowMotionRecording()`
  bool isSlowMotionRecording(){
    
    return _isSlowMotionRecording(reference.pointer, _id_isSlowMotionRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSelfieRecord = _class.instanceMethodId(
    r'startSelfieRecord',
    r'()V',
  );

  static final _startSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSelfieRecord()`
  void startSelfieRecord(){
    
    _startSelfieRecord(reference.pointer, _id_startSelfieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSelfieRecord = _class.instanceMethodId(
    r'stopSelfieRecord',
    r'([B)V',
  );

  static final _stopSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSelfieRecord(byte[] bs)`
  void stopSelfieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSelfieRecord(reference.pointer, _id_stopSelfieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSelfieRecording = _class.instanceMethodId(
    r'isSelfieRecording',
    r'()Z',
  );

  static final _isSelfieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfieRecording()`
  bool isSelfieRecording(){
    
    return _isSelfieRecording(reference.pointer, _id_isSelfieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startPureRecord = _class.instanceMethodId(
    r'startPureRecord',
    r'()V',
  );

  static final _startPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startPureRecord()`
  void startPureRecord(){
    
    _startPureRecord(reference.pointer, _id_startPureRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopPureRecord = _class.instanceMethodId(
    r'stopPureRecord',
    r'([B)V',
  );

  static final _stopPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopPureRecord(byte[] bs)`
  void stopPureRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopPureRecord(reference.pointer, _id_stopPureRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isPureRecording = _class.instanceMethodId(
    r'isPureRecording',
    r'()Z',
  );

  static final _isPureRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPureRecording()`
  bool isPureRecording(){
    
    return _isPureRecording(reference.pointer, _id_isPureRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalRecord = _class.instanceMethodId(
    r'startIntervalRecord',
    r'([B)V',
  );

  static final _startIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalRecord(byte[] bs)`
  void startIntervalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalRecord(reference.pointer, _id_startIntervalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalRecord = _class.instanceMethodId(
    r'stopIntervalRecord',
    r'()V',
  );

  static final _stopIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalRecord()`
  void stopIntervalRecord(){
    
    _stopIntervalRecord(reference.pointer, _id_stopIntervalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalRecording = _class.instanceMethodId(
    r'isIntervalRecording',
    r'()Z',
  );

  static final _isIntervalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalRecording()`
  bool isIntervalRecording(){
    
    return _isIntervalRecording(reference.pointer, _id_isIntervalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimelapse = _class.instanceMethodId(
    r'startTimelapse',
    r'()V',
  );

  static final _startTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimelapse()`
  void startTimelapse(){
    
    _startTimelapse(reference.pointer, _id_startTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimelapse = _class.instanceMethodId(
    r'stopTimelapse',
    r'([B)V',
  );

  static final _stopTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimelapse(byte[] bs)`
  void stopTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimelapse(reference.pointer, _id_stopTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimelapseRecording = _class.instanceMethodId(
    r'isTimelapseRecording',
    r'()Z',
  );

  static final _isTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimelapseRecording()`
  bool isTimelapseRecording(){
    
    return _isTimelapseRecording(reference.pointer, _id_isTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStaticTimelapse = _class.instanceMethodId(
    r'startStaticTimelapse',
    r'()V',
  );

  static final _startStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startStaticTimelapse()`
  void startStaticTimelapse(){
    
    _startStaticTimelapse(reference.pointer, _id_startStaticTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopStaticTimelapse = _class.instanceMethodId(
    r'stopStaticTimelapse',
    r'([B)V',
  );

  static final _stopStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopStaticTimelapse(byte[] bs)`
  void stopStaticTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopStaticTimelapse(reference.pointer, _id_stopStaticTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isStaticTimelapseRecording = _class.instanceMethodId(
    r'isStaticTimelapseRecording',
    r'()Z',
  );

  static final _isStaticTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStaticTimelapseRecording()`
  bool isStaticTimelapseRecording(){
    
    return _isStaticTimelapseRecording(reference.pointer, _id_isStaticTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setLiveListener = _class.instanceMethodId(
    r'setLiveListener',
    r'(Lcom/arashivision/camera/listener/ICameraLiveStateListener;Lcom/arashivision/onecamera/InfoUpdateListener;)V',
  );

  static final _setLiveListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLiveListener(com.arashivision.camera.listener.ICameraLiveStateListener iCameraLiveStateListener, com.arashivision.onecamera.InfoUpdateListener infoUpdateListener)`
  void setLiveListener(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener, ){
    
    _setLiveListener(reference.pointer, _id_setLiveListener as _$jni.JMethodIDPtr, iCameraLiveStateListener.reference.pointer, infoUpdateListener.reference.pointer).check();
  }

  static final _id_startLive = _class.instanceMethodId(
    r'startLive',
    r'(IIIILjava/lang/String;IJZZ)V',
  );

  static final _startLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int64, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, int, _$jni.Pointer<_$jni.Void>, int, int, int, int)>();
  /// from: `public void startLive(int i, int i1, int i2, int i3, java.lang.String string, int i4, long j, boolean z, boolean z1)`
  void startLive(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1, ){
    
    _startLive(reference.pointer, _id_startLive as _$jni.JMethodIDPtr, i, i1, i2, i3, string.reference.pointer, i4, j, z ? 1 : 0, z1 ? 1 : 0).check();
  }

  static final _id_stopLive = _class.instanceMethodId(
    r'stopLive',
    r'()V',
  );

  static final _stopLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopLive()`
  void stopLive(){
    
    _stopLive(reference.pointer, _id_stopLive as _$jni.JMethodIDPtr).check();
  }

  static final _id_resetRecord = _class.instanceMethodId(
    r'resetRecord',
    r'()V',
  );

  static final _resetRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void resetRecord()`
  void resetRecord(){
    
    _resetRecord(reference.pointer, _id_resetRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_getBatteryLevel = _class.instanceMethodId(
    r'getBatteryLevel',
    r'()I',
  );

  static final _getBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryLevel()`
  int getBatteryLevel(){
    
    return _getBatteryLevel(reference.pointer, _id_getBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isCharging = _class.instanceMethodId(
    r'isCharging',
    r'()Z',
  );

  static final _isCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCharging()`
  bool isCharging(){
    
    return _isCharging(reference.pointer, _id_isCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getBatteryType = _class.instanceMethodId(
    r'getBatteryType',
    r'()I',
  );

  static final _getBatteryType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryType()`
  int getBatteryType(){
    
    return _getBatteryType(reference.pointer, _id_getBatteryType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isHighTemperature = _class.instanceMethodId(
    r'isHighTemperature',
    r'()Z',
  );

  static final _isHighTemperature = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHighTemperature()`
  bool isHighTemperature(){
    
    return _isHighTemperature(reference.pointer, _id_isHighTemperature as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isLowTemperature = _class.instanceMethodId(
    r'isLowTemperature',
    r'()Z',
  );

  static final _isLowTemperature = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLowTemperature()`
  bool isLowTemperature(){
    
    return _isLowTemperature(reference.pointer, _id_isLowTemperature as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isChargeBoxConnected = _class.instanceMethodId(
    r'isChargeBoxConnected',
    r'()Z',
  );

  static final _isChargeBoxConnected = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnected()`
  bool isChargeBoxConnected(){
    
    return _isChargeBoxConnected(reference.pointer, _id_isChargeBoxConnected as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxUsbConnectedState = _class.instanceMethodId(
    r'getChargeBoxUsbConnectedState',
    r'()I',
  );

  static final _getChargeBoxUsbConnectedState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxUsbConnectedState()`
  int getChargeBoxUsbConnectedState(){
    
    return _getChargeBoxUsbConnectedState(reference.pointer, _id_getChargeBoxUsbConnectedState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxConnectedWhenCaptureStart = _class.instanceMethodId(
    r'isChargeBoxConnectedWhenCaptureStart',
    r'()Z',
  );

  static final _isChargeBoxConnectedWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnectedWhenCaptureStart()`
  bool isChargeBoxConnectedWhenCaptureStart(){
    
    return _isChargeBoxConnectedWhenCaptureStart(reference.pointer, _id_isChargeBoxConnectedWhenCaptureStart as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxBatteryLevel = _class.instanceMethodId(
    r'getChargeBoxBatteryLevel',
    r'()I',
  );

  static final _getChargeBoxBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxBatteryLevel()`
  int getChargeBoxBatteryLevel(){
    
    return _getChargeBoxBatteryLevel(reference.pointer, _id_getChargeBoxBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxCharging = _class.instanceMethodId(
    r'isChargeBoxCharging',
    r'()Z',
  );

  static final _isChargeBoxCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxCharging()`
  bool isChargeBoxCharging(){
    
    return _isChargeBoxCharging(reference.pointer, _id_isChargeBoxCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setBleRemoteControllerListener = _class.instanceMethodId(
    r'setBleRemoteControllerListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;)V',
  );

  static final _setBleRemoteControllerListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteControllerListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO oooO0OO)`
  void setBleRemoteControllerListener(ICameraController_OooO0OO oooO0OO, ){
    
    _setBleRemoteControllerListener(reference.pointer, _id_setBleRemoteControllerListener as _$jni.JMethodIDPtr, oooO0OO.reference.pointer).check();
  }

  static final _id_scanBleRemoteController = _class.instanceMethodId(
    r'scanBleRemoteController',
    r'()V',
  );

  static final _scanBleRemoteController = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void scanBleRemoteController()`
  void scanBleRemoteController(){
    
    _scanBleRemoteController(reference.pointer, _id_scanBleRemoteController as _$jni.JMethodIDPtr).check();
  }

  static final _id_connectBleRemoteControl = _class.instanceMethodId(
    r'connectBleRemoteControl',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _connectBleRemoteControl = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void connectBleRemoteControl(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void connectBleRemoteControl(_$jni.JObject bTPeripheral, ){
    
    _connectBleRemoteControl(reference.pointer, _id_connectBleRemoteControl as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_disconnectBle = _class.instanceMethodId(
    r'disconnectBle',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _disconnectBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disconnectBle(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void disconnectBle(_$jni.JObject bTPeripheral, ){
    
    _disconnectBle(reference.pointer, _id_disconnectBle as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_getBleRemoteVersion = _class.instanceMethodId(
    r'getBleRemoteVersion',
    r'()Ljava/lang/String;',
  );

  static final _getBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getBleRemoteVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getBleRemoteVersion(){
    
    return _getBleRemoteVersion(reference.pointer, _id_getBleRemoteVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setBleRemoteVersion = _class.instanceMethodId(
    r'setBleRemoteVersion',
    r'(Ljava/lang/String;)V',
  );

  static final _setBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteVersion(java.lang.String string)`
  void setBleRemoteVersion(_$jni.JString string, ){
    
    _setBleRemoteVersion(reference.pointer, _id_setBleRemoteVersion as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getBleRemoteType = _class.instanceMethodId(
    r'getBleRemoteType',
    r'()I',
  );

  static final _getBleRemoteType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBleRemoteType()`
  int getBleRemoteType(){
    
    return _getBleRemoteType(reference.pointer, _id_getBleRemoteType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageCardState = _class.instanceMethodId(
    r'getStorageCardState',
    r'()I',
  );

  static final _getStorageCardState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardState()`
  int getStorageCardState(){
    
    return _getStorageCardState(reference.pointer, _id_getStorageCardState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageCardLocation = _class.instanceMethodId(
    r'getStorageCardLocation',
    r'()I',
  );

  static final _getStorageCardLocation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardLocation()`
  int getStorageCardLocation(){
    
    return _getStorageCardLocation(reference.pointer, _id_getStorageCardLocation as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageTotalSpace = _class.instanceMethodId(
    r'getStorageTotalSpace',
    r'()J',
  );

  static final _getStorageTotalSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageTotalSpace()`
  int getStorageTotalSpace(){
    
    return _getStorageTotalSpace(reference.pointer, _id_getStorageTotalSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_getStorageFreeSpace = _class.instanceMethodId(
    r'getStorageFreeSpace',
    r'()J',
  );

  static final _getStorageFreeSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageFreeSpace()`
  int getStorageFreeSpace(){
    
    return _getStorageFreeSpace(reference.pointer, _id_getStorageFreeSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_formatStorage = _class.instanceMethodId(
    r'formatStorage',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;)V',
  );

  static final _formatStorage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void formatStorage(com.arashivision.insta360.basecamera.camera.ICameraController$o00000O o00000O)`
  void formatStorage(ICameraController_o00000O o00000O, ){
    
    _formatStorage(reference.pointer, _id_formatStorage as _$jni.JMethodIDPtr, o00000O.reference.pointer).check();
  }

  static final _id_setAccessCameraFileState = _class.instanceMethodId(
    r'setAccessCameraFileState',
    r'(I)V',
  );

  static final _setAccessCameraFileState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAccessCameraFileState(int i)`
  void setAccessCameraFileState(int i, ){
    
    _setAccessCameraFileState(reference.pointer, _id_setAccessCameraFileState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getCameraFile = _class.instanceMethodId(
    r'getCameraFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _getCameraFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getCameraFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void getCameraFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _getCameraFile(reference.pointer, _id_getCameraFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_packLogFile = _class.instanceMethodId(
    r'packLogFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _packLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void packLogFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void packLogFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _packLogFile(reference.pointer, _id_packLogFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_setLogFileTransferState = _class.instanceMethodId(
    r'setLogFileTransferState',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;)V',
  );

  static final _setLogFileTransferState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLogFileTransferState(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo0 o000OOo0)`
  void setLogFileTransferState(int i, int i1, ICameraController_o000OOo0 o000OOo0, ){
    
    _setLogFileTransferState(reference.pointer, _id_setLogFileTransferState as _$jni.JMethodIDPtr, i, i1, o000OOo0.reference.pointer).check();
  }

  static final _id_deleteLogFile = _class.instanceMethodId(
    r'deleteLogFile',
    r'(I)V',
  );

  static final _deleteLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void deleteLogFile(int i)`
  void deleteLogFile(int i, ){
    
    _deleteLogFile(reference.pointer, _id_deleteLogFile as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFileList = _class.instanceMethodId(
    r'getFileList',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileList(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileList(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileList(reference.pointer, _id_getFileList as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileListIncludeRecording = _class.instanceMethodId(
    r'getFileListIncludeRecording',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileListIncludeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileListIncludeRecording(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileListIncludeRecording(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileListIncludeRecording(reference.pointer, _id_getFileListIncludeRecording as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileInfoList = _class.instanceMethodId(
    r'getFileInfoList',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;)V',
  );

  static final _getFileInfoList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileInfoList(com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0O o0000O0O)`
  void getFileInfoList(ICameraController_o0000O0O o0000O0O, ){
    
    _getFileInfoList(reference.pointer, _id_getFileInfoList as _$jni.JMethodIDPtr, o0000O0O.reference.pointer).check();
  }

  static final _id_deleteFileList = _class.instanceMethodId(
    r'deleteFileList',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;)V',
  );

  static final _deleteFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void deleteFileList(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO0 oooOOO0)`
  void deleteFileList(_$jni.JList<_$jni.JString> list, ICameraController_OooOOO0 oooOOO0, ){
    
    _deleteFileList(reference.pointer, _id_deleteFileList as _$jni.JMethodIDPtr, list.reference.pointer, oooOOO0.reference.pointer).check();
  }

  static final _id_getFileGps = _class.instanceMethodId(
    r'getFileGps',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGps(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGps(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGps(reference.pointer, _id_getFileGps as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnail = _class.instanceMethodId(
    r'getFileThumbnail',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnail(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnail(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnail(reference.pointer, _id_getFileThumbnail as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnailExt = _class.instanceMethodId(
    r'getFileThumbnailExt',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnailExt = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnailExt(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnailExt(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnailExt(reference.pointer, _id_getFileThumbnailExt as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExposureTimeData = _class.instanceMethodId(
    r'getFileExposureTimeData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExposureTimeData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExposureTimeData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExposureTimeData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExposureTimeData(reference.pointer, _id_getFileExposureTimeData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileGyroData = _class.instanceMethodId(
    r'getFileGyroData',
    r'(Ljava/lang/String;JJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGyroData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int64, _$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGyroData(java.lang.String string, long j, long j1, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGyroData(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGyroData(reference.pointer, _id_getFileGyroData as _$jni.JMethodIDPtr, string.reference.pointer, j, j1, o0000O0.reference.pointer).check();
  }

  static final _id_getFileTimelapseTimestamp = _class.instanceMethodId(
    r'getFileTimelapseTimestamp',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileTimelapseTimestamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileTimelapseTimestamp(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileTimelapseTimestamp(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileTimelapseTimestamp(reference.pointer, _id_getFileTimelapseTimestamp as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraHighlight = _class.instanceMethodId(
    r'getFileExtraHighlight',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraHighlight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraHighlight(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraHighlight(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraHighlight(reference.pointer, _id_getFileExtraHighlight as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraAutoEditor = _class.instanceMethodId(
    r'getFileExtraAutoEditor',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraAutoEditor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraAutoEditor(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraAutoEditor(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraAutoEditor(reference.pointer, _id_getFileExtraAutoEditor as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraMetaData = _class.instanceMethodId(
    r'getFileExtraMetaData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraMetaData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraMetaData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraMetaData(reference.pointer, _id_getFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_setFileExtraMetaData = _class.instanceMethodId(
    r'setFileExtraMetaData',
    r'(Ljava/lang/String;[BLcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;)V',
  );

  static final _setFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFileExtraMetaData(java.lang.String string, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO00 o000OO00)`
  void setFileExtraMetaData(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00, ){
    
    _setFileExtraMetaData(reference.pointer, _id_setFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, bs.reference.pointer, o000OO00.reference.pointer).check();
  }

  static final _id_calibrateGyro = _class.instanceMethodId(
    r'calibrateGyro',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;)V',
  );

  static final _calibrateGyro = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void calibrateGyro(com.arashivision.insta360.basecamera.camera.ICameraController$ICalibrateGyroCallback iCalibrateGyroCallback)`
  void calibrateGyro(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback, ){
    
    _calibrateGyro(reference.pointer, _id_calibrateGyro as _$jni.JMethodIDPtr, iCalibrateGyroCallback.reference.pointer).check();
  }

  static final _id_setGpsData = _class.instanceMethodId(
    r'setGpsData',
    r'([B)V',
  );

  static final _setGpsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGpsData(byte[] bs)`
  void setGpsData(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _setGpsData(reference.pointer, _id_setGpsData as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_setKeyTimeDetail = _class.instanceMethodId(
    r'setKeyTimeDetail',
    r'(JILjava/lang/String;)V',
  );

  static final _setKeyTimeDetail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setKeyTimeDetail(long j, int i, java.lang.String string)`
  void setKeyTimeDetail(int j, int i, _$jni.JString string, ){
    
    _setKeyTimeDetail(reference.pointer, _id_setKeyTimeDetail as _$jni.JMethodIDPtr, j, i, string.reference.pointer).check();
  }

  static final _id_fetchStorageState = _class.instanceMethodId(
    r'fetchStorageState',
    r'()V',
  );

  static final _fetchStorageState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchStorageState()`
  void fetchStorageState(){
    
    _fetchStorageState(reference.pointer, _id_fetchStorageState as _$jni.JMethodIDPtr).check();
  }

  static final _id_fetchBatteryState = _class.instanceMethodId(
    r'fetchBatteryState',
    r'()V',
  );

  static final _fetchBatteryState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchBatteryState()`
  void fetchBatteryState(){
    
    _fetchBatteryState(reference.pointer, _id_fetchBatteryState as _$jni.JMethodIDPtr).check();
  }

  static final _id_fetchAllOptions = _class.instanceMethodId(
    r'fetchAllOptions',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchAllOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchAllOptions(com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchAllOptions(ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchAllOptions(reference.pointer, _id_fetchAllOptions as _$jni.JMethodIDPtr, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchOptions = _class.instanceMethodId(
    r'fetchOptions',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchOptions(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchOptions(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchOptions(reference.pointer, _id_fetchOptions as _$jni.JMethodIDPtr, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchPhotoOptions = _class.instanceMethodId(
    r'fetchPhotoOptions',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchPhotoOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchPhotoOptions(int i, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchPhotoOptions(int i, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchPhotoOptions(reference.pointer, _id_fetchPhotoOptions as _$jni.JMethodIDPtr, i, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchPhotoOptions$1 = _class.instanceMethodId(
    r'fetchPhotoOptions',
    r'(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchPhotoOptions$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchPhotoOptions(int i, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchPhotoOptions$1(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchPhotoOptions$1(reference.pointer, _id_fetchPhotoOptions$1 as _$jni.JMethodIDPtr, i, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchCameraSingleSensorOptions = _class.instanceMethodId(
    r'fetchCameraSingleSensorOptions',
    r'([ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchCameraSingleSensorOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchCameraSingleSensorOptions(java.lang.Object[] is, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchCameraSingleSensorOptions(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchCameraSingleSensorOptions(reference.pointer, _id_fetchCameraSingleSensorOptions as _$jni.JMethodIDPtr, is$.reference.pointer, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_getSerial = _class.instanceMethodId(
    r'getSerial',
    r'()Ljava/lang/String;',
  );

  static final _getSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getSerial(){
    
    return _getSerial(reference.pointer, _id_getSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setSerial = _class.instanceMethodId(
    r'setSerial',
    r'(Ljava/lang/String;)V',
  );

  static final _setSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSerial(java.lang.String string)`
  void setSerial(_$jni.JString string, ){
    
    _setSerial(reference.pointer, _id_setSerial as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getUUID = _class.instanceMethodId(
    r'getUUID',
    r'()Ljava/lang/String;',
  );

  static final _getUUID = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getUUID()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getUUID(){
    
    return _getUUID(reference.pointer, _id_getUUID as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor0Serial = _class.instanceMethodId(
    r'getVR360Senor0Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor0Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor0Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor0Serial(){
    
    return _getVR360Senor0Serial(reference.pointer, _id_getVR360Senor0Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor1Serial = _class.instanceMethodId(
    r'getVR360Senor1Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor1Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor1Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor1Serial(){
    
    return _getVR360Senor1Serial(reference.pointer, _id_getVR360Senor1Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR180SenorSerial = _class.instanceMethodId(
    r'getVR180SenorSerial',
    r'()Ljava/lang/String;',
  );

  static final _getVR180SenorSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR180SenorSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR180SenorSerial(){
    
    return _getVR180SenorSerial(reference.pointer, _id_getVR180SenorSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getSensorSerials = _class.instanceMethodId(
    r'getSensorSerials',
    r'()[Ljava/lang/String;',
  );

  static final _getSensorSerials = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String[] getSensorSerials()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> getSensorSerials(){
    
    return _getSensorSerials(reference.pointer, _id_getSensorSerials as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraName = _class.instanceMethodId(
    r'getCameraName',
    r'()Ljava/lang/String;',
  );

  static final _getCameraName = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraName()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraName(){
    
    return _getCameraName(reference.pointer, _id_getCameraName as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getFWVersion = _class.instanceMethodId(
    r'getFWVersion',
    r'()Ljava/lang/String;',
  );

  static final _getFWVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFWVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFWVersion(){
    
    return _getFWVersion(reference.pointer, _id_getFWVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFwVersion = _class.instanceMethodId(
    r'getCameraFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFwVersion(){
    
    return _getCameraFwVersion(reference.pointer, _id_getCameraFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraBleVersion = _class.instanceMethodId(
    r'getCameraBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraBleVersion(){
    
    return _getCameraBleVersion(reference.pointer, _id_getCameraBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxFwVersion = _class.instanceMethodId(
    r'getChargeBoxFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxFwVersion(){
    
    return _getChargeBoxFwVersion(reference.pointer, _id_getChargeBoxFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxBleVersion = _class.instanceMethodId(
    r'getChargeBoxBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxBleVersion(){
    
    return _getChargeBoxBleVersion(reference.pointer, _id_getChargeBoxBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffset = _class.instanceMethodId(
    r'setMediaOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setMediaOffset(java.lang.String string)`
  void setMediaOffset(_$jni.JString string, ){
    
    _setMediaOffset(reference.pointer, _id_setMediaOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getMediaOffset = _class.instanceMethodId(
    r'getMediaOffset',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffset(){
    
    return _getMediaOffset(reference.pointer, _id_getMediaOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV2 = _class.instanceMethodId(
    r'getMediaOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV2(){
    
    return _getMediaOffsetV2(reference.pointer, _id_getMediaOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV3 = _class.instanceMethodId(
    r'getMediaOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV3(){
    
    return _getMediaOffsetV3(reference.pointer, _id_getMediaOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setOriginalOffset = _class.instanceMethodId(
    r'setOriginalOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setOriginalOffset(java.lang.String string)`
  void setOriginalOffset(_$jni.JString string, ){
    
    _setOriginalOffset(reference.pointer, _id_setOriginalOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getOriginalOffset = _class.instanceMethodId(
    r'getOriginalOffset',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffset(){
    
    return _getOriginalOffset(reference.pointer, _id_getOriginalOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV2 = _class.instanceMethodId(
    r'getOriginalOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV2(){
    
    return _getOriginalOffsetV2(reference.pointer, _id_getOriginalOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV3 = _class.instanceMethodId(
    r'getOriginalOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV3(){
    
    return _getOriginalOffsetV3(reference.pointer, _id_getOriginalOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setAllOffset = _class.instanceMethodId(
    r'setAllOffset',
    r'(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V',
  );

  static final _setAllOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAllOffset(java.lang.String string, java.lang.String string1, java.lang.String string2, java.lang.String string3, java.lang.String string4, java.lang.String string5)`
  void setAllOffset(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5, ){
    
    _setAllOffset(reference.pointer, _id_setAllOffset as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, string2.reference.pointer, string3.reference.pointer, string4.reference.pointer, string5.reference.pointer).check();
  }

  static final _id_getOffsetState = _class.instanceMethodId(
    r'getOffsetState',
    r'()I',
  );

  static final _getOffsetState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getOffsetState()`
  int getOffsetState(){
    
    return _getOffsetState(reference.pointer, _id_getOffsetState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getImageFlicker = _class.instanceMethodId(
    r'getImageFlicker',
    r'()I',
  );

  static final _getImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getImageFlicker()`
  int getImageFlicker(){
    
    return _getImageFlicker(reference.pointer, _id_getImageFlicker as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setImageFlicker = _class.instanceMethodId(
    r'setImageFlicker',
    r'(I)V',
  );

  static final _setImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setImageFlicker(int i)`
  void setImageFlicker(int i, ){
    
    _setImageFlicker(reference.pointer, _id_setImageFlicker as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_setStandByMode = _class.instanceMethodId(
    r'setStandByMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;)V',
  );

  static final _setStandByMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setStandByMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000 o00O0000)`
  void setStandByMode(int i, ICameraController_o00O0000 o00O0000, ){
    
    _setStandByMode(reference.pointer, _id_setStandByMode as _$jni.JMethodIDPtr, i, o00O0000.reference.pointer).check();
  }

  static final _id_isDebugActiveState = _class.instanceMethodId(
    r'isDebugActiveState',
    r'()Z',
  );

  static final _isDebugActiveState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isDebugActiveState()`
  bool isDebugActiveState(){
    
    return _isDebugActiveState(reference.pointer, _id_isDebugActiveState as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getActiveTime = _class.instanceMethodId(
    r'getActiveTime',
    r'()J',
  );

  static final _getActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getActiveTime()`
  int getActiveTime(){
    
    return _getActiveTime(reference.pointer, _id_getActiveTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_setActiveTime = _class.instanceMethodId(
    r'setActiveTime',
    r'(JLcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setActiveTime(long j, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setActiveTime(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setActiveTime(reference.pointer, _id_setActiveTime as _$jni.JMethodIDPtr, j, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getVideoEncodeType = _class.instanceMethodId(
    r'getVideoEncodeType',
    r'()I',
  );

  static final _getVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoEncodeType()`
  int getVideoEncodeType(){
    
    return _getVideoEncodeType(reference.pointer, _id_getVideoEncodeType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setVideoEncodeType = _class.instanceMethodId(
    r'setVideoEncodeType',
    r'(I)V',
  );

  static final _setVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setVideoEncodeType(int i)`
  void setVideoEncodeType(int i, ){
    
    _setVideoEncodeType(reference.pointer, _id_setVideoEncodeType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isSelfie = _class.instanceMethodId(
    r'isSelfie',
    r'()Z',
  );

  static final _isSelfie = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfie()`
  bool isSelfie(){
    
    return _isSelfie(reference.pointer, _id_isSelfie as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraPosture = _class.instanceMethodId(
    r'getCameraPosture',
    r'()I',
  );

  static final _getCameraPosture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPosture()`
  int getCameraPosture(){
    
    return _getCameraPosture(reference.pointer, _id_getCameraPosture as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCameraPostureWhenCaptureStart = _class.instanceMethodId(
    r'getCameraPostureWhenCaptureStart',
    r'()I',
  );

  static final _getCameraPostureWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPostureWhenCaptureStart()`
  int getCameraPostureWhenCaptureStart(){
    
    return _getCameraPostureWhenCaptureStart(reference.pointer, _id_getCameraPostureWhenCaptureStart as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getBtWakeupSwState = _class.instanceMethodId(
    r'getBtWakeupSwState',
    r'()I',
  );

  static final _getBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtWakeupSwState()`
  int getBtWakeupSwState(){
    
    return _getBtWakeupSwState(reference.pointer, _id_getBtWakeupSwState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtWakeupSwState = _class.instanceMethodId(
    r'setBtWakeupSwState',
    r'(I)V',
  );

  static final _setBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtWakeupSwState(int i)`
  void setBtWakeupSwState(int i, ){
    
    _setBtWakeupSwState(reference.pointer, _id_setBtWakeupSwState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getGyroTimeStamp = _class.instanceMethodId(
    r'getGyroTimeStamp',
    r'()D',
  );

  static final _getGyroTimeStamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getGyroTimeStamp()`
  double getGyroTimeStamp(){
    
    return _getGyroTimeStamp(reference.pointer, _id_getGyroTimeStamp as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_getQuickCaptureEnable = _class.instanceMethodId(
    r'getQuickCaptureEnable',
    r'()Z',
  );

  static final _getQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getQuickCaptureEnable()`
  bool getQuickCaptureEnable(){
    
    return _getQuickCaptureEnable(reference.pointer, _id_getQuickCaptureEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setQuickCaptureEnable = _class.instanceMethodId(
    r'setQuickCaptureEnable',
    r'(Z)V',
  );

  static final _setQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setQuickCaptureEnable(boolean z)`
  void setQuickCaptureEnable(bool z, ){
    
    _setQuickCaptureEnable(reference.pointer, _id_setQuickCaptureEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getWindowCropInfo = _class.instanceMethodId(
    r'getWindowCropInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WindowCropInfo;',
  );

  static final _getWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WindowCropInfo getWindowCropInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWindowCropInfo(){
    
    return _getWindowCropInfo(reference.pointer, _id_getWindowCropInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getBtnShutdownClickMode = _class.instanceMethodId(
    r'getBtnShutdownClickMode',
    r'()I',
  );

  static final _getBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownClickMode()`
  int getBtnShutdownClickMode(){
    
    return _getBtnShutdownClickMode(reference.pointer, _id_getBtnShutdownClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownClickMode = _class.instanceMethodId(
    r'setBtnShutdownClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownClickMode(int i)`
  void setBtnShutdownClickMode(int i, ){
    
    _setBtnShutdownClickMode(reference.pointer, _id_setBtnShutdownClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'getBtnShutdownDoubleClickMode',
    r'()I',
  );

  static final _getBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownDoubleClickMode()`
  int getBtnShutdownDoubleClickMode(){
    
    return _getBtnShutdownDoubleClickMode(reference.pointer, _id_getBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'setBtnShutdownDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownDoubleClickMode(int i)`
  void setBtnShutdownDoubleClickMode(int i, ){
    
    _setBtnShutdownDoubleClickMode(reference.pointer, _id_setBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'getBtnShutdownTripleClickMode',
    r'()I',
  );

  static final _getBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownTripleClickMode()`
  int getBtnShutdownTripleClickMode(){
    
    return _getBtnShutdownTripleClickMode(reference.pointer, _id_getBtnShutdownTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'setBtnShutdownTripleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownTripleClickMode(int i)`
  void setBtnShutdownTripleClickMode(int i, ){
    
    _setBtnShutdownTripleClickMode(reference.pointer, _id_setBtnShutdownTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownLongPressMode = _class.instanceMethodId(
    r'getBtnShutdownLongPressMode',
    r'()I',
  );

  static final _getBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownLongPressMode()`
  int getBtnShutdownLongPressMode(){
    
    return _getBtnShutdownLongPressMode(reference.pointer, _id_getBtnShutdownLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownLongPressMode = _class.instanceMethodId(
    r'setBtnShutdownLongPressMode',
    r'(I)V',
  );

  static final _setBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownLongPressMode(int i)`
  void setBtnShutdownLongPressMode(int i, ){
    
    _setBtnShutdownLongPressMode(reference.pointer, _id_setBtnShutdownLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnClickMode = _class.instanceMethodId(
    r'getBtnClickMode',
    r'()I',
  );

  static final _getBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnClickMode()`
  int getBtnClickMode(){
    
    return _getBtnClickMode(reference.pointer, _id_getBtnClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnClickMode = _class.instanceMethodId(
    r'setBtnClickMode',
    r'(I)V',
  );

  static final _setBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnClickMode(int i)`
  void setBtnClickMode(int i, ){
    
    _setBtnClickMode(reference.pointer, _id_setBtnClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnDoubleClickMode = _class.instanceMethodId(
    r'getBtnDoubleClickMode',
    r'()I',
  );

  static final _getBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnDoubleClickMode()`
  int getBtnDoubleClickMode(){
    
    return _getBtnDoubleClickMode(reference.pointer, _id_getBtnDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnDoubleClickMode = _class.instanceMethodId(
    r'setBtnDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnDoubleClickMode(int i)`
  void setBtnDoubleClickMode(int i, ){
    
    _setBtnDoubleClickMode(reference.pointer, _id_setBtnDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnTripleClickMode = _class.instanceMethodId(
    r'getBtnTripleClickMode',
    r'()I',
  );

  static final _getBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnTripleClickMode()`
  int getBtnTripleClickMode(){
    
    return _getBtnTripleClickMode(reference.pointer, _id_getBtnTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnTripleClickMode = _class.instanceMethodId(
    r'setBtnTripleClickMode',
    r'(I)V',
  );

  static final _setBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnTripleClickMode(int i)`
  void setBtnTripleClickMode(int i, ){
    
    _setBtnTripleClickMode(reference.pointer, _id_setBtnTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnLongPressMode = _class.instanceMethodId(
    r'getBtnLongPressMode',
    r'()I',
  );

  static final _getBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnLongPressMode()`
  int getBtnLongPressMode(){
    
    return _getBtnLongPressMode(reference.pointer, _id_getBtnLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnLongPressMode = _class.instanceMethodId(
    r'setBtnLongPressMode',
    r'(I)V',
  );

  static final _setBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnLongPressMode(int i)`
  void setBtnLongPressMode(int i, ){
    
    _setBtnLongPressMode(reference.pointer, _id_setBtnLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isMute = _class.instanceMethodId(
    r'isMute',
    r'()Z',
  );

  static final _isMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMute()`
  bool isMute(){
    
    return _isMute(reference.pointer, _id_isMute as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMute = _class.instanceMethodId(
    r'setMute',
    r'(Z)V',
  );

  static final _setMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMute(boolean z)`
  void setMute(bool z, ){
    
    _setMute(reference.pointer, _id_setMute as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getWifiInfo = _class.instanceMethodId(
    r'getWifiInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WifiInfo;',
  );

  static final _getWifiInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WifiInfo getWifiInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWifiInfo(){
    
    return _getWifiInfo(reference.pointer, _id_getWifiInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setWifiPwd = _class.instanceMethodId(
    r'setWifiPwd',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiPwd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiPwd(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiPwd(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiPwd(reference.pointer, _id_setWifiPwd as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getWifiChannelCountry = _class.instanceMethodId(
    r'getWifiChannelCountry',
    r'()Ljava/lang/String;',
  );

  static final _getWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getWifiChannelCountry()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getWifiChannelCountry(){
    
    return _getWifiChannelCountry(reference.pointer, _id_getWifiChannelCountry as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setWifiChannelCountry = _class.instanceMethodId(
    r'setWifiChannelCountry',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiChannelCountry(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiChannelCountry(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiChannelCountry(reference.pointer, _id_setWifiChannelCountry as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getCameraLanguage = _class.instanceMethodId(
    r'getCameraLanguage',
    r'()I',
  );

  static final _getCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraLanguage()`
  int getCameraLanguage(){
    
    return _getCameraLanguage(reference.pointer, _id_getCameraLanguage as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setCameraLanguage = _class.instanceMethodId(
    r'setCameraLanguage',
    r'(I)V',
  );

  static final _setCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setCameraLanguage(int i)`
  void setCameraLanguage(int i, ){
    
    _setCameraLanguage(reference.pointer, _id_setCameraLanguage as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_openCameraWifi = _class.instanceMethodId(
    r'openCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;)V',
  );

  static final _openCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void openCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00O o000O00O)`
  void openCameraWifi(ICameraController_o000O00O o000O00O, ){
    
    _openCameraWifi(reference.pointer, _id_openCameraWifi as _$jni.JMethodIDPtr, o000O00O.reference.pointer).check();
  }

  static final _id_closeCameraWifi = _class.instanceMethodId(
    r'closeCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;)V',
  );

  static final _closeCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void closeCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0O oooOO0O)`
  void closeCameraWifi(ICameraController_OooOO0O oooOO0O, ){
    
    _closeCameraWifi(reference.pointer, _id_closeCameraWifi as _$jni.JMethodIDPtr, oooOO0O.reference.pointer).check();
  }

  static final _id_resetCameraWifi = _class.instanceMethodId(
    r'resetCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;)V',
  );

  static final _resetCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo o000O0Oo)`
  void resetCameraWifi(ICameraController_o000O0Oo o000O0Oo, ){
    
    _resetCameraWifi(reference.pointer, _id_resetCameraWifi as _$jni.JMethodIDPtr, o000O0Oo.reference.pointer).check();
  }

  static final _id_notifyOTAError = _class.instanceMethodId(
    r'notifyOTAError',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;)V',
  );

  static final _notifyOTAError = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void notifyOTAError(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00 o000O00)`
  void notifyOTAError(ICameraController_o000O00 o000O00, ){
    
    _notifyOTAError(reference.pointer, _id_notifyOTAError as _$jni.JMethodIDPtr, o000O00.reference.pointer).check();
  }

  static final _id_setCameraWifiSeizable = _class.instanceMethodId(
    r'setCameraWifiSeizable',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;)V',
  );

  static final _setCameraWifiSeizable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraWifiSeizable(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O o000O)`
  void setCameraWifiSeizable(int i, ICameraController_o000O o000O, ){
    
    _setCameraWifiSeizable(reference.pointer, _id_setCameraWifiSeizable as _$jni.JMethodIDPtr, i, o000O.reference.pointer).check();
  }

  static final _id_getVideoResolution = _class.instanceMethodId(
    r'getVideoResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getVideoResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getVideoResolution(){
    
    return _getVideoResolution(reference.pointer, _id_getVideoResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_setVideoResolution = _class.instanceMethodId(
    r'setVideoResolution',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolution(com.arashivision.insta360.basecamera.camera.setting.VideoResolution videoResolution, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setVideoResolution(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setVideoResolution(reference.pointer, _id_setVideoResolution as _$jni.JMethodIDPtr, videoResolution.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getVideoBitrate = _class.instanceMethodId(
    r'getVideoBitrate',
    r'()I',
  );

  static final _getVideoBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoBitrate()`
  int getVideoBitrate(){
    
    return _getVideoBitrate(reference.pointer, _id_getVideoBitrate as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFlowstateEnable = _class.instanceMethodId(
    r'getFlowstateEnable',
    r'(I)Z',
  );

  static final _getFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateEnable(int i)`
  bool getFlowstateEnable(int i, ){
    
    return _getFlowstateEnable(reference.pointer, _id_getFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateEnable = _class.instanceMethodId(
    r'setFlowstateEnable',
    r'(IZ)V',
  );

  static final _setFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateEnable(int i, boolean z)`
  void setFlowstateEnable(int i, bool z, ){
    
    _setFlowstateEnable(reference.pointer, _id_setFlowstateEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getUnDamageZoomEnable = _class.instanceMethodId(
    r'getUnDamageZoomEnable',
    r'(I)Z',
  );

  static final _getUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getUnDamageZoomEnable(int i)`
  bool getUnDamageZoomEnable(int i, ){
    
    return _getUnDamageZoomEnable(reference.pointer, _id_getUnDamageZoomEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setUnDamageZoomEnable = _class.instanceMethodId(
    r'setUnDamageZoomEnable',
    r'(IZ)V',
  );

  static final _setUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setUnDamageZoomEnable(int i, boolean z)`
  void setUnDamageZoomEnable(int i, bool z, ){
    
    _setUnDamageZoomEnable(reference.pointer, _id_setUnDamageZoomEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getFlowstateVideoEnable = _class.instanceMethodId(
    r'getFlowstateVideoEnable',
    r'(I)Z',
  );

  static final _getFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateVideoEnable(int i)`
  bool getFlowstateVideoEnable(int i, ){
    
    return _getFlowstateVideoEnable(reference.pointer, _id_getFlowstateVideoEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateVideoEnable = _class.instanceMethodId(
    r'setFlowstateVideoEnable',
    r'(IZ)V',
  );

  static final _setFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateVideoEnable(int i, boolean z)`
  void setFlowstateVideoEnable(int i, bool z, ){
    
    _setFlowstateVideoEnable(reference.pointer, _id_setFlowstateVideoEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getDarkEisEnable = _class.instanceMethodId(
    r'getDarkEisEnable',
    r'(I)Z',
  );

  static final _getDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getDarkEisEnable(int i)`
  bool getDarkEisEnable(int i, ){
    
    return _getDarkEisEnable(reference.pointer, _id_getDarkEisEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setDarkEisEnable = _class.instanceMethodId(
    r'setDarkEisEnable',
    r'(IZ)V',
  );

  static final _setDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setDarkEisEnable(int i, boolean z)`
  void setDarkEisEnable(int i, bool z, ){
    
    _setDarkEisEnable(reference.pointer, _id_setDarkEisEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_setMeteringEnable = _class.instanceMethodId(
    r'setMeteringEnable',
    r'(IZ)V',
  );

  static final _setMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMeteringEnable(int i, boolean z)`
  void setMeteringEnable(int i, bool z, ){
    
    _setMeteringEnable(reference.pointer, _id_setMeteringEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnable = _class.instanceMethodId(
    r'getMeteringEnable',
    r'(I)Z',
  );

  static final _getMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getMeteringEnable(int i)`
  bool getMeteringEnable(int i, ){
    
    return _getMeteringEnable(reference.pointer, _id_getMeteringEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_getVideoSelfieMode = _class.instanceMethodId(
    r'getVideoSelfieMode',
    r'(I)I',
  );

  static final _getVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoSelfieMode(int i)`
  int getVideoSelfieMode(int i, ){
    
    return _getVideoSelfieMode(reference.pointer, _id_getVideoSelfieMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoSelfieMode = _class.instanceMethodId(
    r'setVideoSelfieMode',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoSelfieMode(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoSelfieMode(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoSelfieMode(reference.pointer, _id_setVideoSelfieMode as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getDarkEisStatus = _class.instanceMethodId(
    r'getDarkEisStatus',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;)V',
  );

  static final _getDarkEisStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getDarkEisStatus(com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo o0000oo)`
  void getDarkEisStatus(ICameraController_o0000oo o0000oo, ){
    
    _getDarkEisStatus(reference.pointer, _id_getDarkEisStatus as _$jni.JMethodIDPtr, o0000oo.reference.pointer).check();
  }

  static final _id_setDarkEisEnableGlobal = _class.instanceMethodId(
    r'setDarkEisEnableGlobal',
    r'(Z)V',
  );

  static final _setDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setDarkEisEnableGlobal(boolean z)`
  void setDarkEisEnableGlobal(bool z, ){
    
    _setDarkEisEnableGlobal(reference.pointer, _id_setDarkEisEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getDarkEisEnableGlobal = _class.instanceMethodId(
    r'getDarkEisEnableGlobal',
    r'()Z',
  );

  static final _getDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getDarkEisEnableGlobal()`
  bool getDarkEisEnableGlobal(){
    
    return _getDarkEisEnableGlobal(reference.pointer, _id_getDarkEisEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMeteringEnableGlobal = _class.instanceMethodId(
    r'setMeteringEnableGlobal',
    r'(Z)V',
  );

  static final _setMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMeteringEnableGlobal(boolean z)`
  void setMeteringEnableGlobal(bool z, ){
    
    _setMeteringEnableGlobal(reference.pointer, _id_setMeteringEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnableGlobal = _class.instanceMethodId(
    r'getMeteringEnableGlobal',
    r'()Z',
  );

  static final _getMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getMeteringEnableGlobal()`
  bool getMeteringEnableGlobal(){
    
    return _getMeteringEnableGlobal(reference.pointer, _id_getMeteringEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setInternalSplicingEnable = _class.instanceMethodId(
    r'setInternalSplicingEnable',
    r'(Z)V',
  );

  static final _setInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setInternalSplicingEnable(boolean z)`
  void setInternalSplicingEnable(bool z, ){
    
    _setInternalSplicingEnable(reference.pointer, _id_setInternalSplicingEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getInternalSplicingEnable = _class.instanceMethodId(
    r'getInternalSplicingEnable',
    r'()Z',
  );

  static final _getInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getInternalSplicingEnable()`
  bool getInternalSplicingEnable(){
    
    return _getInternalSplicingEnable(reference.pointer, _id_getInternalSplicingEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getSubVideoMode = _class.instanceMethodId(
    r'getSubVideoMode',
    r'()I',
  );

  static final _getSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubVideoMode()`
  int getSubVideoMode(){
    
    return _getSubVideoMode(reference.pointer, _id_getSubVideoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubVideoMode = _class.instanceMethodId(
    r'setSubVideoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubVideoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubVideoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubVideoMode(reference.pointer, _id_setSubVideoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getSubPhotoMode = _class.instanceMethodId(
    r'getSubPhotoMode',
    r'()I',
  );

  static final _getSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubPhotoMode()`
  int getSubPhotoMode(){
    
    return _getSubPhotoMode(reference.pointer, _id_getSubPhotoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubPhotoMode = _class.instanceMethodId(
    r'setSubPhotoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubPhotoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubPhotoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubPhotoMode(reference.pointer, _id_setSubPhotoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getExpectOutputType = _class.instanceMethodId(
    r'getExpectOutputType',
    r'()I',
  );

  static final _getExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getExpectOutputType()`
  int getExpectOutputType(){
    
    return _getExpectOutputType(reference.pointer, _id_getExpectOutputType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setExpectOutputType = _class.instanceMethodId(
    r'setExpectOutputType',
    r'(I)V',
  );

  static final _setExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setExpectOutputType(int i)`
  void setExpectOutputType(int i, ){
    
    _setExpectOutputType(reference.pointer, _id_setExpectOutputType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFocusSensor = _class.instanceMethodId(
    r'getFocusSensor',
    r'()I',
  );

  static final _getFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFocusSensor()`
  int getFocusSensor(){
    
    return _getFocusSensor(reference.pointer, _id_getFocusSensor as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setFocusSensor = _class.instanceMethodId(
    r'setFocusSensor',
    r'(I)V',
  );

  static final _setFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFocusSensor(int i)`
  void setFocusSensor(int i, ){
    
    _setFocusSensor(reference.pointer, _id_setFocusSensor as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getSensorType = _class.instanceMethodId(
    r'getSensorType',
    r'()I',
  );

  static final _getSensorType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSensorType()`
  int getSensorType(){
    
    return _getSensorType(reference.pointer, _id_getSensorType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getButtonFollowOptions = _class.instanceMethodId(
    r'getButtonFollowOptions',
    r'()Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;',
  );

  static final _getButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.ButtonFollowOptions getButtonFollowOptions()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getButtonFollowOptions(){
    
    return _getButtonFollowOptions(reference.pointer, _id_getButtonFollowOptions as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setButtonFollowOptions = _class.instanceMethodId(
    r'setButtonFollowOptions',
    r'(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setButtonFollowOptions(com.arashivision.onecamera.camerarequest.ButtonFollowOptions buttonFollowOptions, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setButtonFollowOptions(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setButtonFollowOptions(reference.pointer, _id_setButtonFollowOptions as _$jni.JMethodIDPtr, buttonFollowOptions.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_beginOptionsTransaction = _class.instanceMethodId(
    r'beginOptionsTransaction',
    r'()V',
  );

  static final _beginOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void beginOptionsTransaction()`
  void beginOptionsTransaction(){
    
    _beginOptionsTransaction(reference.pointer, _id_beginOptionsTransaction as _$jni.JMethodIDPtr).check();
  }

  static final _id_commitOptionsTransaction = _class.instanceMethodId(
    r'commitOptionsTransaction',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;)V',
  );

  static final _commitOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void commitOptionsTransaction(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o o000O0o)`
  void commitOptionsTransaction(ICameraController_o000O0o o000O0o, ){
    
    _commitOptionsTransaction(reference.pointer, _id_commitOptionsTransaction as _$jni.JMethodIDPtr, o000O0o.reference.pointer).check();
  }

  static final _id_getTimelapseParams = _class.instanceMethodId(
    r'getTimelapseParams',
    r'(I)Lcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;',
  );

  static final _getTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.TimelapseParams getTimelapseParams(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  TimelapseParams getTimelapseParams(int i, ){
    
    return _getTimelapseParams(reference.pointer, _id_getTimelapseParams as _$jni.JMethodIDPtr, i).object(const $TimelapseParams$Type());
  }

  static final _id_setTimelapseParams = _class.instanceMethodId(
    r'setTimelapseParams',
    r'(ILcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;)V',
  );

  static final _setTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setTimelapseParams(int i, com.arashivision.insta360.basecamera.camera.setting.TimelapseParams timelapseParams)`
  void setTimelapseParams(int i, TimelapseParams timelapseParams, ){
    
    _setTimelapseParams(reference.pointer, _id_setTimelapseParams as _$jni.JMethodIDPtr, i, timelapseParams.reference.pointer).check();
  }

  static final _id_getExposureMode = _class.instanceMethodId(
    r'getExposureMode',
    r'(IZ)I',
  );

  static final _getExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getExposureMode(int i, boolean z)`
  int getExposureMode(int i, bool z, ){
    
    return _getExposureMode(reference.pointer, _id_getExposureMode as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getISO = _class.instanceMethodId(
    r'getISO',
    r'(IZ)I',
  );

  static final _getISO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getISO(int i, boolean z)`
  int getISO(int i, bool z, ){
    
    return _getISO(reference.pointer, _id_getISO as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getShutter = _class.instanceMethodId(
    r'getShutter',
    r'(IZ)D',
  );

  static final _getShutter = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public double getShutter(int i, boolean z)`
  double getShutter(int i, bool z, ){
    
    return _getShutter(reference.pointer, _id_getShutter as _$jni.JMethodIDPtr, i, z ? 1 : 0).doubleFloat;
  }

  static final _id_setExposureOptions = _class.instanceMethodId(
    r'setExposureOptions',
    r'(IIIDZ)V',
  );

  static final _setExposureOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, double, int)>();
  /// from: `public void setExposureOptions(int i, int i1, int i2, double d, boolean z)`
  void setExposureOptions(int i, int i1, int i2, double d, bool z, ){
    
    _setExposureOptions(reference.pointer, _id_setExposureOptions as _$jni.JMethodIDPtr, i, i1, i2, d, z ? 1 : 0).check();
  }

  static final _id_getExposureEV = _class.instanceMethodId(
    r'getExposureEV',
    r'(I)I',
  );

  static final _getExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getExposureEV(int i)`
  int getExposureEV(int i, ){
    
    return _getExposureEV(reference.pointer, _id_getExposureEV as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setExposureEV = _class.instanceMethodId(
    r'setExposureEV',
    r'(II)V',
  );

  static final _setExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setExposureEV(int i, int i1)`
  void setExposureEV(int i, int i1, ){
    
    _setExposureEV(reference.pointer, _id_setExposureEV as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFocalLengthValue = _class.instanceMethodId(
    r'getFocalLengthValue',
    r'(I)D',
  );

  static final _getFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getFocalLengthValue(int i)`
  double getFocalLengthValue(int i, ){
    
    return _getFocalLengthValue(reference.pointer, _id_getFocalLengthValue as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setFocalLengthValue = _class.instanceMethodId(
    r'setFocalLengthValue',
    r'(ID)V',
  );

  static final _setFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setFocalLengthValue(int i, double d)`
  void setFocalLengthValue(int i, double d, ){
    
    _setFocalLengthValue(reference.pointer, _id_setFocalLengthValue as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getVideoResolutionId = _class.instanceMethodId(
    r'getVideoResolutionId',
    r'(I)I',
  );

  static final _getVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoResolutionId(int i)`
  int getVideoResolutionId(int i, ){
    
    return _getVideoResolutionId(reference.pointer, _id_getVideoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoResolutionId = _class.instanceMethodId(
    r'setVideoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoResolutionId(reference.pointer, _id_setVideoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getResRecLimit = _class.instanceMethodId(
    r'getResRecLimit',
    r'(I)Ljava/util/List;',
  );

  static final _getResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public java.util.List getResRecLimit(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<_$jni.JObject> getResRecLimit(int i, ){
    
    return _getResRecLimit(reference.pointer, _id_getResRecLimit as _$jni.JMethodIDPtr, i).object(const _$jni.JListType(_$jni.JObjectType()));
  }

  static final _id_setResRecLimit = _class.instanceMethodId(
    r'setResRecLimit',
    r'(ILjava/util/List;)V',
  );

  static final _setResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setResRecLimit(int i, java.util.List list)`
  void setResRecLimit(int i, _$jni.JList<_$jni.JObject> list, ){
    
    _setResRecLimit(reference.pointer, _id_setResRecLimit as _$jni.JMethodIDPtr, i, list.reference.pointer).check();
  }

  static final _id_getRemainingTime = _class.instanceMethodId(
    r'getRemainingTime',
    r'(I)I',
  );

  static final _getRemainingTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRemainingTime(int i)`
  int getRemainingTime(int i, ){
    
    return _getRemainingTime(reference.pointer, _id_getRemainingTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getISOTopLimit = _class.instanceMethodId(
    r'getISOTopLimit',
    r'(I)I',
  );

  static final _getISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getISOTopLimit(int i)`
  int getISOTopLimit(int i, ){
    
    return _getISOTopLimit(reference.pointer, _id_getISOTopLimit as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setISOTopLimit = _class.instanceMethodId(
    r'setISOTopLimit',
    r'(II)V',
  );

  static final _setISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setISOTopLimit(int i, int i1)`
  void setISOTopLimit(int i, int i1, ){
    
    _setISOTopLimit(reference.pointer, _id_setISOTopLimit as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAEBCaptureNum = _class.instanceMethodId(
    r'getAEBCaptureNum',
    r'(I)I',
  );

  static final _getAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAEBCaptureNum(int i)`
  int getAEBCaptureNum(int i, ){
    
    return _getAEBCaptureNum(reference.pointer, _id_getAEBCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAEBCaptureNum = _class.instanceMethodId(
    r'setAEBCaptureNum',
    r'(II)V',
  );

  static final _setAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAEBCaptureNum(int i, int i1)`
  void setAEBCaptureNum(int i, int i1, ){
    
    _setAEBCaptureNum(reference.pointer, _id_setAEBCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSize = _class.instanceMethodId(
    r'getPhotoSize',
    r'(I)I',
  );

  static final _getPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSize(int i)`
  int getPhotoSize(int i, ){
    
    return _getPhotoSize(reference.pointer, _id_getPhotoSize as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSize = _class.instanceMethodId(
    r'setPhotoSize',
    r'(II)V',
  );

  static final _setPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSize(int i, int i1)`
  void setPhotoSize(int i, int i1, ){
    
    _setPhotoSize(reference.pointer, _id_setPhotoSize as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoResolutionId = _class.instanceMethodId(
    r'getPhotoResolutionId',
    r'(I)I',
  );

  static final _getPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoResolutionId(int i)`
  int getPhotoResolutionId(int i, ){
    
    return _getPhotoResolutionId(reference.pointer, _id_getPhotoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoResolutionId = _class.instanceMethodId(
    r'setPhotoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPhotoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setPhotoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setPhotoResolutionId(reference.pointer, _id_setPhotoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getWhiteBalanceId = _class.instanceMethodId(
    r'getWhiteBalanceId',
    r'(I)I',
  );

  static final _getWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceId(int i)`
  int getWhiteBalanceId(int i, ){
    
    return _getWhiteBalanceId(reference.pointer, _id_getWhiteBalanceId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceId = _class.instanceMethodId(
    r'setWhiteBalanceId',
    r'(II)V',
  );

  static final _setWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceId(int i, int i1)`
  void setWhiteBalanceId(int i, int i1, ){
    
    _setWhiteBalanceId(reference.pointer, _id_setWhiteBalanceId as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getWhiteBalanceValue = _class.instanceMethodId(
    r'getWhiteBalanceValue',
    r'(I)I',
  );

  static final _getWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceValue(int i)`
  int getWhiteBalanceValue(int i, ){
    
    return _getWhiteBalanceValue(reference.pointer, _id_getWhiteBalanceValue as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceValue = _class.instanceMethodId(
    r'setWhiteBalanceValue',
    r'(II)V',
  );

  static final _setWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceValue(int i, int i1)`
  void setWhiteBalanceValue(int i, int i1, ){
    
    _setWhiteBalanceValue(reference.pointer, _id_setWhiteBalanceValue as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getSportModeEnable = _class.instanceMethodId(
    r'getSportModeEnable',
    r'(I)Z',
  );

  static final _getSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getSportModeEnable(int i)`
  bool getSportModeEnable(int i, ){
    
    return _getSportModeEnable(reference.pointer, _id_getSportModeEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setSportModeEnable = _class.instanceMethodId(
    r'setSportModeEnable',
    r'(IZ)V',
  );

  static final _setSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeEnable(int i, boolean z)`
  void setSportModeEnable(int i, bool z, ){
    
    _setSportModeEnable(reference.pointer, _id_setSportModeEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getSportModeLevel = _class.instanceMethodId(
    r'getSportModeLevel',
    r'(I)I',
  );

  static final _getSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSportModeLevel(int i)`
  int getSportModeLevel(int i, ){
    
    return _getSportModeLevel(reference.pointer, _id_getSportModeLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSportModeLevel = _class.instanceMethodId(
    r'setSportModeLevel',
    r'(II)V',
  );

  static final _setSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeLevel(int i, int i1)`
  void setSportModeLevel(int i, int i1, ){
    
    _setSportModeLevel(reference.pointer, _id_setSportModeLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getGammaMode = _class.instanceMethodId(
    r'getGammaMode',
    r'(I)I',
  );

  static final _getGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getGammaMode(int i)`
  int getGammaMode(int i, ){
    
    return _getGammaMode(reference.pointer, _id_getGammaMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setGammaMode = _class.instanceMethodId(
    r'setGammaMode',
    r'(II)V',
  );

  static final _setGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setGammaMode(int i, int i1)`
  void setGammaMode(int i, int i1, ){
    
    _setGammaMode(reference.pointer, _id_setGammaMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRawType = _class.instanceMethodId(
    r'getRawType',
    r'(I)I',
  );

  static final _getRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRawType(int i)`
  int getRawType(int i, ){
    
    return _getRawType(reference.pointer, _id_getRawType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRawType = _class.instanceMethodId(
    r'setRawType',
    r'(II)V',
  );

  static final _setRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRawType(int i, int i1)`
  void setRawType(int i, int i1, ){
    
    _setRawType(reference.pointer, _id_setRawType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSelfTimer = _class.instanceMethodId(
    r'getPhotoSelfTimer',
    r'(I)I',
  );

  static final _getPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSelfTimer(int i)`
  int getPhotoSelfTimer(int i, ){
    
    return _getPhotoSelfTimer(reference.pointer, _id_getPhotoSelfTimer as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSelfTimer = _class.instanceMethodId(
    r'setPhotoSelfTimer',
    r'(II)V',
  );

  static final _setPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSelfTimer(int i, int i1)`
  void setPhotoSelfTimer(int i, int i1, ){
    
    _setPhotoSelfTimer(reference.pointer, _id_setPhotoSelfTimer as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAccelerateFrequency = _class.instanceMethodId(
    r'getAccelerateFrequency',
    r'(I)I',
  );

  static final _getAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAccelerateFrequency(int i)`
  int getAccelerateFrequency(int i, ){
    
    return _getAccelerateFrequency(reference.pointer, _id_getAccelerateFrequency as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAccelerateFrequency = _class.instanceMethodId(
    r'setAccelerateFrequency',
    r'(II)V',
  );

  static final _setAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAccelerateFrequency(int i, int i1)`
  void setAccelerateFrequency(int i, int i1, ){
    
    _setAccelerateFrequency(reference.pointer, _id_setAccelerateFrequency as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRecordDurationS = _class.instanceMethodId(
    r'getRecordDurationS',
    r'(I)I',
  );

  static final _getRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRecordDurationS(int i)`
  int getRecordDurationS(int i, ){
    
    return _getRecordDurationS(reference.pointer, _id_getRecordDurationS as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRecordDurationS = _class.instanceMethodId(
    r'setRecordDurationS',
    r'(II)V',
  );

  static final _setRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRecordDurationS(int i, int i1)`
  void setRecordDurationS(int i, int i1, ){
    
    _setRecordDurationS(reference.pointer, _id_setRecordDurationS as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlicker = _class.instanceMethodId(
    r'getFlicker',
    r'(I)I',
  );

  static final _getFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlicker(int i)`
  int getFlicker(int i, ){
    
    return _getFlicker(reference.pointer, _id_getFlicker as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlicker = _class.instanceMethodId(
    r'setFlicker',
    r'(II)V',
  );

  static final _setFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlicker(int i, int i1)`
  void setFlicker(int i, int i1, ){
    
    _setFlicker(reference.pointer, _id_setFlicker as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getVideoBitrate$1 = _class.instanceMethodId(
    r'getVideoBitrate',
    r'(I)I',
  );

  static final _getVideoBitrate$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoBitrate(int i)`
  int getVideoBitrate$1(int i, ){
    
    return _getVideoBitrate$1(reference.pointer, _id_getVideoBitrate$1 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getFlowStateLevel = _class.instanceMethodId(
    r'getFlowStateLevel',
    r'(I)I',
  );

  static final _getFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevel(int i)`
  int getFlowStateLevel(int i, ){
    
    return _getFlowStateLevel(reference.pointer, _id_getFlowStateLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlowStateLevel = _class.instanceMethodId(
    r'setFlowStateLevel',
    r'(II)V',
  );

  static final _setFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevel(int i, int i1)`
  void setFlowStateLevel(int i, int i1, ){
    
    _setFlowStateLevel(reference.pointer, _id_setFlowStateLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlowStateLevelByCv5 = _class.instanceMethodId(
    r'getFlowStateLevelByCv5',
    r'(I)I',
  );

  static final _getFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevelByCv5(int i)`
  int getFlowStateLevelByCv5(int i, ){
    
    return _getFlowStateLevelByCv5(reference.pointer, _id_getFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getHdrStatus = _class.instanceMethodId(
    r'getHdrStatus',
    r'(I)Z',
  );

  static final _getHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getHdrStatus(int i)`
  bool getHdrStatus(int i, ){
    
    return _getHdrStatus(reference.pointer, _id_getHdrStatus as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setHdrStatus = _class.instanceMethodId(
    r'setHdrStatus',
    r'(IZ)V',
  );

  static final _setHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setHdrStatus(int i, boolean z)`
  void setHdrStatus(int i, bool z, ){
    
    _setHdrStatus(reference.pointer, _id_setHdrStatus as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_setFlowStateLevelByCv5 = _class.instanceMethodId(
    r'setFlowStateLevelByCv5',
    r'(II)V',
  );

  static final _setFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevelByCv5(int i, int i1)`
  void setFlowStateLevelByCv5(int i, int i1, ){
    
    _setFlowStateLevelByCv5(reference.pointer, _id_setFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getSharpness = _class.instanceMethodId(
    r'getSharpness',
    r'(I)I',
  );

  static final _getSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSharpness(int i)`
  int getSharpness(int i, ){
    
    return _getSharpness(reference.pointer, _id_getSharpness as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSharpness = _class.instanceMethodId(
    r'setSharpness',
    r'(II)V',
  );

  static final _setSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSharpness(int i, int i1)`
  void setSharpness(int i, int i1, ){
    
    _setSharpness(reference.pointer, _id_setSharpness as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getStarLapseExportType = _class.instanceMethodId(
    r'getStarLapseExportType',
    r'(I)I',
  );

  static final _getStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getStarLapseExportType(int i)`
  int getStarLapseExportType(int i, ){
    
    return _getStarLapseExportType(reference.pointer, _id_getStarLapseExportType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setStarLapseExportType = _class.instanceMethodId(
    r'setStarLapseExportType',
    r'(II)V',
  );

  static final _setStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setStarLapseExportType(int i, int i1)`
  void setStarLapseExportType(int i, int i1, ){
    
    _setStarLapseExportType(reference.pointer, _id_setStarLapseExportType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPanoExposureMode = _class.instanceMethodId(
    r'getPanoExposureMode',
    r'(I)I',
  );

  static final _getPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPanoExposureMode(int i)`
  int getPanoExposureMode(int i, ){
    
    return _getPanoExposureMode(reference.pointer, _id_getPanoExposureMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPanoExposureMode = _class.instanceMethodId(
    r'setPanoExposureMode',
    r'(II)V',
  );

  static final _setPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPanoExposureMode(int i, int i1)`
  void setPanoExposureMode(int i, int i1, ){
    
    _setPanoExposureMode(reference.pointer, _id_setPanoExposureMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFovType = _class.instanceMethodId(
    r'getFovType',
    r'(I)I',
  );

  static final _getFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFovType(int i)`
  int getFovType(int i, ){
    
    return _getFovType(reference.pointer, _id_getFovType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFovType = _class.instanceMethodId(
    r'setFovType',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFovType(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setFovType(int i, int i1, ICameraController_o00 o00, ){
    
    _setFovType(reference.pointer, _id_setFovType as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getBurstCaptureNum = _class.instanceMethodId(
    r'getBurstCaptureNum',
    r'(I)I',
  );

  static final _getBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureNum(int i)`
  int getBurstCaptureNum(int i, ){
    
    return _getBurstCaptureNum(reference.pointer, _id_getBurstCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureNum = _class.instanceMethodId(
    r'setBurstCaptureNum',
    r'(II)V',
  );

  static final _setBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureNum(int i, int i1)`
  void setBurstCaptureNum(int i, int i1, ){
    
    _setBurstCaptureNum(reference.pointer, _id_setBurstCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getBurstCacheNum = _class.instanceMethodId(
    r'getBurstCacheNum',
    r'(I)I',
  );

  static final _getBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCacheNum(int i)`
  int getBurstCacheNum(int i, ){
    
    return _getBurstCacheNum(reference.pointer, _id_getBurstCacheNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCacheNum = _class.instanceMethodId(
    r'setBurstCacheNum',
    r'(II)V',
  );

  static final _setBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCacheNum(int i, int i1)`
  void setBurstCacheNum(int i, int i1, ){
    
    _setBurstCacheNum(reference.pointer, _id_setBurstCacheNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getCacheCaptureEnable = _class.instanceMethodId(
    r'getCacheCaptureEnable',
    r'(I)Z',
  );

  static final _getCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCacheCaptureEnable(int i)`
  bool getCacheCaptureEnable(int i, ){
    
    return _getCacheCaptureEnable(reference.pointer, _id_getCacheCaptureEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCacheCaptureEnable = _class.instanceMethodId(
    r'setCacheCaptureEnable',
    r'(IZ)V',
  );

  static final _setCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setCacheCaptureEnable(int i, boolean z)`
  void setCacheCaptureEnable(int i, bool z, ){
    
    _setCacheCaptureEnable(reference.pointer, _id_setCacheCaptureEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getBurstCaptureTime = _class.instanceMethodId(
    r'getBurstCaptureTime',
    r'(I)I',
  );

  static final _getBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureTime(int i)`
  int getBurstCaptureTime(int i, ){
    
    return _getBurstCaptureTime(reference.pointer, _id_getBurstCaptureTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureTime = _class.instanceMethodId(
    r'setBurstCaptureTime',
    r'(II)V',
  );

  static final _setBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureTime(int i, int i1)`
  void setBurstCaptureTime(int i, int i1, ){
    
    _setBurstCaptureTime(reference.pointer, _id_setBurstCaptureTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getZoomScale = _class.instanceMethodId(
    r'getZoomScale',
    r'(I)D',
  );

  static final _getZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getZoomScale(int i)`
  double getZoomScale(int i, ){
    
    return _getZoomScale(reference.pointer, _id_getZoomScale as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setZoomScale = _class.instanceMethodId(
    r'setZoomScale',
    r'(ID)V',
  );

  static final _setZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setZoomScale(int i, double d)`
  void setZoomScale(int i, double d, ){
    
    _setZoomScale(reference.pointer, _id_setZoomScale as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getMaxRecordTime = _class.instanceMethodId(
    r'getMaxRecordTime',
    r'(I)I',
  );

  static final _getMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getMaxRecordTime(int i)`
  int getMaxRecordTime(int i, ){
    
    return _getMaxRecordTime(reference.pointer, _id_getMaxRecordTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setMaxRecordTime = _class.instanceMethodId(
    r'setMaxRecordTime',
    r'(II)V',
  );

  static final _setMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMaxRecordTime(int i, int i1)`
  void setMaxRecordTime(int i, int i1, ){
    
    _setMaxRecordTime(reference.pointer, _id_setMaxRecordTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getLastConnectionDuration = _class.instanceMethodId(
    r'getLastConnectionDuration',
    r'()J',
  );

  static final _getLastConnectionDuration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getLastConnectionDuration()`
  int getLastConnectionDuration(){
    
    return _getLastConnectionDuration(reference.pointer, _id_getLastConnectionDuration as _$jni.JMethodIDPtr).long;
  }

  static final _id_getLastConnectedTime = _class.instanceMethodId(
    r'getLastConnectedTime',
    r'()J',
  );

  static final _getLastConnectedTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getLastConnectedTime()`
  int getLastConnectedTime(){
    
    return _getLastConnectedTime(reference.pointer, _id_getLastConnectedTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getLastDisconnectedTime = _class.instanceMethodId(
    r'getLastDisconnectedTime',
    r'()J',
  );

  static final _getLastDisconnectedTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getLastDisconnectedTime()`
  int getLastDisconnectedTime(){
    
    return _getLastDisconnectedTime(reference.pointer, _id_getLastDisconnectedTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getConnectType = _class.instanceMethodId(
    r'getConnectType',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
  );

  static final _getConnectType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType getConnectType()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_ConnectType getConnectType(){
    
    return _getConnectType(reference.pointer, _id_getConnectType as _$jni.JMethodIDPtr).object(const $BaseCamera_ConnectType$Type());
  }

  static final _id_isPrimary = _class.instanceMethodId(
    r'isPrimary',
    r'()Z',
  );

  static final _isPrimary = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPrimary()`
  bool isPrimary(){
    
    return _isPrimary(reference.pointer, _id_isPrimary as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isReady = _class.instanceMethodId(
    r'isReady',
    r'()Z',
  );

  static final _isReady = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isReady()`
  bool isReady(){
    
    return _isReady(reference.pointer, _id_isReady as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraStatus = _class.instanceMethodId(
    r'getCameraStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
  );

  static final _getCameraStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus getCameraStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraStatus getCameraStatus(){
    
    return _getCameraStatus(reference.pointer, _id_getCameraStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraStatus$Type());
  }

  static final _id_getLastCameraStatus = _class.instanceMethodId(
    r'getLastCameraStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;',
  );

  static final _getLastCameraStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus getLastCameraStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraStatus getLastCameraStatus(){
    
    return _getLastCameraStatus(reference.pointer, _id_getLastCameraStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraStatus$Type());
  }

  static final _id_getCameraSyncStatus = _class.instanceMethodId(
    r'getCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getCameraSyncStatus(){
    
    return _getCameraSyncStatus(reference.pointer, _id_getCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_getLastCameraSyncStatus = _class.instanceMethodId(
    r'getLastCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getLastCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getLastCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getLastCameraSyncStatus(){
    
    return _getLastCameraSyncStatus(reference.pointer, _id_getLastCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_isIdle = _class.instanceMethodId(
    r'isIdle',
    r'()Z',
  );

  static final _isIdle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIdle()`
  bool isIdle(){
    
    return _isIdle(reference.pointer, _id_isIdle as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraWorking = _class.instanceMethodId(
    r'isCameraWorking',
    r'()Z',
  );

  static final _isCameraWorking = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraWorking()`
  bool isCameraWorking(){
    
    return _isCameraWorking(reference.pointer, _id_isCameraWorking as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraRecordOnPause = _class.instanceMethodId(
    r'isCameraRecordOnPause',
    r'()Z',
  );

  static final _isCameraRecordOnPause = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraRecordOnPause()`
  bool isCameraRecordOnPause(){
    
    return _isCameraRecordOnPause(reference.pointer, _id_isCameraRecordOnPause as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraBusy = _class.instanceMethodId(
    r'isCameraBusy',
    r'()Z',
  );

  static final _isCameraBusy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraBusy()`
  bool isCameraBusy(){
    
    return _isCameraBusy(reference.pointer, _id_isCameraBusy as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCaptureType = _class.instanceMethodId(
    r'getCaptureType',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
  );

  static final _getCaptureType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType getCaptureType()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureType getCaptureType(){
    
    return _getCaptureType(reference.pointer, _id_getCaptureType as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureType$Type());
  }

  static final _id_getCaptureStatus = _class.instanceMethodId(
    r'getCaptureStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
  );

  static final _getCaptureStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus getCaptureStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureStatus getCaptureStatus(){
    
    return _getCaptureStatus(reference.pointer, _id_getCaptureStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureStatus$Type());
  }

  static final _id_getCaptureSubStatus = _class.instanceMethodId(
    r'getCaptureSubStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
  );

  static final _getCaptureSubStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus getCaptureSubStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureSubStatus getCaptureSubStatus(){
    
    return _getCaptureSubStatus(reference.pointer, _id_getCaptureSubStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureSubStatus$Type());
  }

  static final _id_getCaptureTime = _class.instanceMethodId(
    r'getCaptureTime',
    r'()J',
  );

  static final _getCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getCaptureTime()`
  int getCaptureTime(){
    
    return _getCaptureTime(reference.pointer, _id_getCaptureTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getCaptureKeyTimePointDetail = _class.instanceMethodId(
    r'getCaptureKeyTimePointDetail',
    r'()Ljava/lang/String;',
  );

  static final _getCaptureKeyTimePointDetail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCaptureKeyTimePointDetail()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCaptureKeyTimePointDetail(){
    
    return _getCaptureKeyTimePointDetail(reference.pointer, _id_getCaptureKeyTimePointDetail as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCaptureCount = _class.instanceMethodId(
    r'getCaptureCount',
    r'()I',
  );

  static final _getCaptureCount = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCaptureCount()`
  int getCaptureCount(){
    
    return _getCaptureCount(reference.pointer, _id_getCaptureCount as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCameraHost = _class.instanceMethodId(
    r'getCameraHost',
    r'()Ljava/lang/String;',
  );

  static final _getCameraHost = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraHost()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraHost(){
    
    return _getCameraHost(reference.pointer, _id_getCameraHost as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getPort = _class.instanceMethodId(
    r'getPort',
    r'()I',
  );

  static final _getPort = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPort()`
  int getPort(){
    
    return _getPort(reference.pointer, _id_getPort as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFirmwareUploadPath = _class.instanceMethodId(
    r'getFirmwareUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getFirmwareUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFirmwareUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFirmwareUploadPath(){
    
    return _getFirmwareUploadPath(reference.pointer, _id_getFirmwareUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFileUploadPath = _class.instanceMethodId(
    r'getCameraFileUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFileUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFileUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFileUploadPath(){
    
    return _getCameraFileUploadPath(reference.pointer, _id_getCameraFileUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_supportUploadFileToCamera = _class.instanceMethodId(
    r'supportUploadFileToCamera',
    r'()Z',
  );

  static final _supportUploadFileToCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportUploadFileToCamera()`
  bool supportUploadFileToCamera(){
    
    return _supportUploadFileToCamera(reference.pointer, _id_supportUploadFileToCamera as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getVersionValidLength = _class.instanceMethodId(
    r'getVersionValidLength',
    r'()I',
  );

  static final _getVersionValidLength = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVersionValidLength()`
  int getVersionValidLength(){
    
    return _getVersionValidLength(reference.pointer, _id_getVersionValidLength as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setAssistiveGridEnable = _class.instanceMethodId(
    r'setAssistiveGridEnable',
    r'(Z)V',
  );

  static final _setAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAssistiveGridEnable(boolean z)`
  void setAssistiveGridEnable(bool z, ){
    
    _setAssistiveGridEnable(reference.pointer, _id_setAssistiveGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getAssistiveGridEnable = _class.instanceMethodId(
    r'getAssistiveGridEnable',
    r'()Z',
  );

  static final _getAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getAssistiveGridEnable()`
  bool getAssistiveGridEnable(){
    
    return _getAssistiveGridEnable(reference.pointer, _id_getAssistiveGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setFreeFrameGridEnable = _class.instanceMethodId(
    r'setFreeFrameGridEnable',
    r'(Z)V',
  );

  static final _setFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFreeFrameGridEnable(boolean z)`
  void setFreeFrameGridEnable(bool z, ){
    
    _setFreeFrameGridEnable(reference.pointer, _id_setFreeFrameGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getFreeFrameGridEnable = _class.instanceMethodId(
    r'getFreeFrameGridEnable',
    r'()Z',
  );

  static final _getFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getFreeFrameGridEnable()`
  bool getFreeFrameGridEnable(){
    
    return _getFreeFrameGridEnable(reference.pointer, _id_getFreeFrameGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_uploadScriptJson = _class.instanceMethodId(
    r'uploadScriptJson',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptJson = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptJson(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptJson(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptJson(reference.pointer, _id_uploadScriptJson as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_uploadScriptCmd = _class.instanceMethodId(
    r'uploadScriptCmd',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptCmd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptCmd(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptCmd(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptCmd(reference.pointer, _id_uploadScriptCmd as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_refreshScript = _class.instanceMethodId(
    r'refreshScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _refreshScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void refreshScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void refreshScript(ICameraController_OooOOO oooOOO, ){
    
    _refreshScript(reference.pointer, _id_refreshScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_runScript = _class.instanceMethodId(
    r'runScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _runScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void runScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void runScript(ICameraController_OooOOO oooOOO, ){
    
    _runScript(reference.pointer, _id_runScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_addFmgButtonClickListener = _class.instanceMethodId(
    r'addFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _addFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void addFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void addFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _addFmgButtonClickListener(reference.pointer, _id_addFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_removeFmgButtonClickListener = _class.instanceMethodId(
    r'removeFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _removeFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void removeFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void removeFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _removeFmgButtonClickListener(reference.pointer, _id_removeFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_startFmgUpgrade = _class.instanceMethodId(
    r'startFmgUpgrade',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;)V',
  );

  static final _startFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgUpgrade(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o00000O0 o00000O0)`
  void startFmgUpgrade(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0, ){
    
    _startFmgUpgrade(reference.pointer, _id_startFmgUpgrade as _$jni.JMethodIDPtr, bs.reference.pointer, o00000O0.reference.pointer).check();
  }

  static final _id_cancelFmgUpgrade = _class.instanceMethodId(
    r'cancelFmgUpgrade',
    r'()V',
  );

  static final _cancelFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void cancelFmgUpgrade()`
  void cancelFmgUpgrade(){
    
    _cancelFmgUpgrade(reference.pointer, _id_cancelFmgUpgrade as _$jni.JMethodIDPtr).check();
  }

  static final _id_isFmgLimitYaw = _class.instanceMethodId(
    r'isFmgLimitYaw',
    r'()Z',
  );

  static final _isFmgLimitYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgLimitYaw()`
  bool isFmgLimitYaw(){
    
    return _isFmgLimitYaw(reference.pointer, _id_isFmgLimitYaw as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgLimitPitch = _class.instanceMethodId(
    r'isFmgLimitPitch',
    r'()Z',
  );

  static final _isFmgLimitPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgLimitPitch()`
  bool isFmgLimitPitch(){
    
    return _isFmgLimitPitch(reference.pointer, _id_isFmgLimitPitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgStalled = _class.instanceMethodId(
    r'isFmgStalled',
    r'()Z',
  );

  static final _isFmgStalled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgStalled()`
  bool isFmgStalled(){
    
    return _isFmgStalled(reference.pointer, _id_isFmgStalled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgPayload = _class.instanceMethodId(
    r'isFmgPayload',
    r'()Z',
  );

  static final _isFmgPayload = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgPayload()`
  bool isFmgPayload(){
    
    return _isFmgPayload(reference.pointer, _id_isFmgPayload as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgSleep = _class.instanceMethodId(
    r'isFmgSleep',
    r'()Z',
  );

  static final _isFmgSleep = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgSleep()`
  bool isFmgSleep(){
    
    return _isFmgSleep(reference.pointer, _id_isFmgSleep as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getFmgMode = _class.instanceMethodId(
    r'getFmgMode',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;',
  );

  static final _getFmgMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzMode getFmgMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgMode(){
    
    return _getFmgMode(reference.pointer, _id_getFmgMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgMode = _class.instanceMethodId(
    r'setFmgMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;)V',
  );

  static final _setFmgMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgMode(com.arashivision.fmg.response.model.FmgModel$PtzMode ptzMode)`
  void setFmgMode(_$jni.JObject ptzMode, ){
    
    _setFmgMode(reference.pointer, _id_setFmgMode as _$jni.JMethodIDPtr, ptzMode.reference.pointer).check();
  }

  static final _id_isFmgSportMode = _class.instanceMethodId(
    r'isFmgSportMode',
    r'()Z',
  );

  static final _isFmgSportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgSportMode()`
  bool isFmgSportMode(){
    
    return _isFmgSportMode(reference.pointer, _id_isFmgSportMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgImbalance = _class.instanceMethodId(
    r'isFmgImbalance',
    r'()Z',
  );

  static final _isFmgImbalance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgImbalance()`
  bool isFmgImbalance(){
    
    return _isFmgImbalance(reference.pointer, _id_isFmgImbalance as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getFmgFollowSpeed = _class.instanceMethodId(
    r'getFmgFollowSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;',
  );

  static final _getFmgFollowSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzFollowSpeed getFmgFollowSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgFollowSpeed(){
    
    return _getFmgFollowSpeed(reference.pointer, _id_getFmgFollowSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgFollowSpeed = _class.instanceMethodId(
    r'setFmgFollowSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;)V',
  );

  static final _setFmgFollowSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgFollowSpeed(com.arashivision.fmg.response.model.FmgModel$PtzFollowSpeed ptzFollowSpeed)`
  void setFmgFollowSpeed(_$jni.JObject ptzFollowSpeed, ){
    
    _setFmgFollowSpeed(reference.pointer, _id_setFmgFollowSpeed as _$jni.JMethodIDPtr, ptzFollowSpeed.reference.pointer).check();
  }

  static final _id_getFmgRcSpeed = _class.instanceMethodId(
    r'getFmgRcSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;',
  );

  static final _getFmgRcSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcSpeed getFmgRcSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgRcSpeed(){
    
    return _getFmgRcSpeed(reference.pointer, _id_getFmgRcSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgRcSpeed = _class.instanceMethodId(
    r'setFmgRcSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;)V',
  );

  static final _setFmgRcSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgRcSpeed(com.arashivision.fmg.response.model.FmgModel$PtzRcSpeed ptzRcSpeed)`
  void setFmgRcSpeed(_$jni.JObject ptzRcSpeed, ){
    
    _setFmgRcSpeed(reference.pointer, _id_setFmgRcSpeed as _$jni.JMethodIDPtr, ptzRcSpeed.reference.pointer).check();
  }

  static final _id_getFmgZoomSpeed = _class.instanceMethodId(
    r'getFmgZoomSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;',
  );

  static final _getFmgZoomSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzZoomSpeed getFmgZoomSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgZoomSpeed(){
    
    return _getFmgZoomSpeed(reference.pointer, _id_getFmgZoomSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgZoomSpeed = _class.instanceMethodId(
    r'setFmgZoomSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;)V',
  );

  static final _setFmgZoomSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgZoomSpeed(com.arashivision.fmg.response.model.FmgModel$PtzZoomSpeed ptzZoomSpeed)`
  void setFmgZoomSpeed(_$jni.JObject ptzZoomSpeed, ){
    
    _setFmgZoomSpeed(reference.pointer, _id_setFmgZoomSpeed as _$jni.JMethodIDPtr, ptzZoomSpeed.reference.pointer).check();
  }

  static final _id_getFmgHorizontalDir = _class.instanceMethodId(
    r'getFmgHorizontalDir',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;',
  );

  static final _getFmgHorizontalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcHorizontalDir getFmgHorizontalDir()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgHorizontalDir(){
    
    return _getFmgHorizontalDir(reference.pointer, _id_getFmgHorizontalDir as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgHorizontalDir = _class.instanceMethodId(
    r'setFmgHorizontalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;)V',
  );

  static final _setFmgHorizontalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHorizontalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcHorizontalDir ptzRcHorizontalDir)`
  void setFmgHorizontalDir(_$jni.JObject ptzRcHorizontalDir, ){
    
    _setFmgHorizontalDir(reference.pointer, _id_setFmgHorizontalDir as _$jni.JMethodIDPtr, ptzRcHorizontalDir.reference.pointer).check();
  }

  static final _id_getFmgVerticalDir = _class.instanceMethodId(
    r'getFmgVerticalDir',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;',
  );

  static final _getFmgVerticalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcVerticalDir getFmgVerticalDir()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgVerticalDir(){
    
    return _getFmgVerticalDir(reference.pointer, _id_getFmgVerticalDir as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgVerticalDir = _class.instanceMethodId(
    r'setFmgVerticalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;)V',
  );

  static final _setFmgVerticalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgVerticalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcVerticalDir ptzRcVerticalDir)`
  void setFmgVerticalDir(_$jni.JObject ptzRcVerticalDir, ){
    
    _setFmgVerticalDir(reference.pointer, _id_setFmgVerticalDir as _$jni.JMethodIDPtr, ptzRcVerticalDir.reference.pointer).check();
  }

  static final _id_getFmgVerticalTrimDegree = _class.instanceMethodId(
    r'getFmgVerticalTrimDegree',
    r'()F',
  );

  static final _getFmgVerticalTrimDegree = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFmgVerticalTrimDegree()`
  double getFmgVerticalTrimDegree(){
    
    return _getFmgVerticalTrimDegree(reference.pointer, _id_getFmgVerticalTrimDegree as _$jni.JMethodIDPtr).float;
  }

  static final _id_getFmgSoundEnable = _class.instanceMethodId(
    r'getFmgSoundEnable',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;',
  );

  static final _getFmgSoundEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzSoundMode getFmgSoundEnable()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgSoundEnable(){
    
    return _getFmgSoundEnable(reference.pointer, _id_getFmgSoundEnable as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgSoundEnable = _class.instanceMethodId(
    r'setFmgSoundEnable',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;)V',
  );

  static final _setFmgSoundEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSoundEnable(com.arashivision.fmg.response.model.FmgModel$PtzSoundMode ptzSoundMode)`
  void setFmgSoundEnable(_$jni.JObject ptzSoundMode, ){
    
    _setFmgSoundEnable(reference.pointer, _id_setFmgSoundEnable as _$jni.JMethodIDPtr, ptzSoundMode.reference.pointer).check();
  }

  static final _id_getFmgHvMode = _class.instanceMethodId(
    r'getFmgHvMode',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;',
  );

  static final _getFmgHvMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzHvMode getFmgHvMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgHvMode(){
    
    return _getFmgHvMode(reference.pointer, _id_getFmgHvMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgHvMode = _class.instanceMethodId(
    r'setFmgHvMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;)V',
  );

  static final _setFmgHvMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHvMode(com.arashivision.fmg.response.model.FmgModel$PtzHvMode ptzHvMode)`
  void setFmgHvMode(_$jni.JObject ptzHvMode, ){
    
    _setFmgHvMode(reference.pointer, _id_setFmgHvMode as _$jni.JMethodIDPtr, ptzHvMode.reference.pointer).check();
  }

  static final _id_getFmgSwitchModeWay = _class.instanceMethodId(
    r'getFmgSwitchModeWay',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;',
  );

  static final _getFmgSwitchModeWay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzSwitchModeWay getFmgSwitchModeWay()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgSwitchModeWay(){
    
    return _getFmgSwitchModeWay(reference.pointer, _id_getFmgSwitchModeWay as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgSwitchModeWay = _class.instanceMethodId(
    r'setFmgSwitchModeWay',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;)V',
  );

  static final _setFmgSwitchModeWay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSwitchModeWay(com.arashivision.fmg.response.model.FmgModel$PtzSwitchModeWay ptzSwitchModeWay)`
  void setFmgSwitchModeWay(_$jni.JObject ptzSwitchModeWay, ){
    
    _setFmgSwitchModeWay(reference.pointer, _id_setFmgSwitchModeWay as _$jni.JMethodIDPtr, ptzSwitchModeWay.reference.pointer).check();
  }

  static final _id_setFmgVerticalTrimDegree = _class.instanceMethodId(
    r'setFmgVerticalTrimDegree',
    r'(F)V',
  );

  static final _setFmgVerticalTrimDegree = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setFmgVerticalTrimDegree(float f)`
  void setFmgVerticalTrimDegree(double f, ){
    
    _setFmgVerticalTrimDegree(reference.pointer, _id_setFmgVerticalTrimDegree as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_startOrUpdateFmgTargetFollow = _class.instanceMethodId(
    r'startOrUpdateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _startOrUpdateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startOrUpdateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void startOrUpdateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _startOrUpdateFmgTargetFollow(reference.pointer, _id_startOrUpdateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_lostFmgTargetFollow = _class.instanceMethodId(
    r'lostFmgTargetFollow',
    r'()V',
  );

  static final _lostFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void lostFmgTargetFollow()`
  void lostFmgTargetFollow(){
    
    _lostFmgTargetFollow(reference.pointer, _id_lostFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_exitFmgTargetFollow = _class.instanceMethodId(
    r'exitFmgTargetFollow',
    r'()V',
  );

  static final _exitFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void exitFmgTargetFollow()`
  void exitFmgTargetFollow(){
    
    _exitFmgTargetFollow(reference.pointer, _id_exitFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_speculateFmgTargetFollow = _class.instanceMethodId(
    r'speculateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _speculateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void speculateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void speculateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _speculateFmgTargetFollow(reference.pointer, _id_speculateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_setFmgZoomScale = _class.instanceMethodId(
    r'setFmgZoomScale',
    r'(S)V',
  );

  static final _setFmgZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgZoomScale(short s)`
  void setFmgZoomScale(int s, ){
    
    _setFmgZoomScale(reference.pointer, _id_setFmgZoomScale as _$jni.JMethodIDPtr, s).check();
  }

  static final _id_getFmgAngle = _class.instanceMethodId(
    r'getFmgAngle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;)V',
  );

  static final _getFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAngle(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo0 oooo0)`
  void getFmgAngle(ICameraController_Oooo0 oooo0, ){
    
    _getFmgAngle(reference.pointer, _id_getFmgAngle as _$jni.JMethodIDPtr, oooo0.reference.pointer).check();
  }

  static final _id_getFmgSpeed = _class.instanceMethodId(
    r'getFmgSpeed',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;)V',
  );

  static final _getFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgSpeed(com.arashivision.insta360.basecamera.camera.ICameraController$o00O0O o00O0O)`
  void getFmgSpeed(ICameraController_o00O0O o00O0O, ){
    
    _getFmgSpeed(reference.pointer, _id_getFmgSpeed as _$jni.JMethodIDPtr, o00O0O.reference.pointer).check();
  }

  static final _id_setFmgAngle = _class.instanceMethodId(
    r'setFmgAngle',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;)V',
  );

  static final _setFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngle(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0ooOOo o0ooOOo)`
  void setFmgAngle(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo, ){
    
    _setFmgAngle(reference.pointer, _id_setFmgAngle as _$jni.JMethodIDPtr, f, f1, f2, o0ooOOo.reference.pointer).check();
  }

  static final _id_setFmgSpeed = _class.instanceMethodId(
    r'setFmgSpeed',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;)V',
  );

  static final _setFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSpeed(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0O0O00 o0O0O00)`
  void setFmgSpeed(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00, ){
    
    _setFmgSpeed(reference.pointer, _id_setFmgSpeed as _$jni.JMethodIDPtr, f, f1, f2, o0O0O00.reference.pointer).check();
  }

  static final _id_setFmgIdle = _class.instanceMethodId(
    r'setFmgIdle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;)V',
  );

  static final _setFmgIdle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgIdle(com.arashivision.insta360.basecamera.camera.ICameraController$o0Oo0oo o0Oo0oo)`
  void setFmgIdle(ICameraController_o0Oo0oo o0Oo0oo, ){
    
    _setFmgIdle(reference.pointer, _id_setFmgIdle as _$jni.JMethodIDPtr, o0Oo0oo.reference.pointer).check();
  }

  static final _id_setFmgTimeElapse = _class.instanceMethodId(
    r'setFmgTimeElapse',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTemMode;Lcom/arashivision/fmg/response/model/FmgModel$PtzTemState;ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;)V',
  );

  static final _setFmgTimeElapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTimeElapse(com.arashivision.fmg.response.model.FmgModel$PtzTemMode ptzTemMode, com.arashivision.fmg.response.model.FmgModel$PtzTemState ptzTemState, int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo o000OOo)`
  void setFmgTimeElapse(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo, ){
    
    _setFmgTimeElapse(reference.pointer, _id_setFmgTimeElapse as _$jni.JMethodIDPtr, ptzTemMode.reference.pointer, ptzTemState.reference.pointer, i, o000OOo.reference.pointer).check();
  }

  static final _id_setFmgPano = _class.instanceMethodId(
    r'setFmgPano',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzPanoMode;)V',
  );

  static final _setFmgPano = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgPano(com.arashivision.fmg.response.model.FmgModel$PtzPanoMode ptzPanoMode)`
  void setFmgPano(_$jni.JObject ptzPanoMode, ){
    
    _setFmgPano(reference.pointer, _id_setFmgPano as _$jni.JMethodIDPtr, ptzPanoMode.reference.pointer).check();
  }

  static final _id_resetFmgDefaultSettings = _class.instanceMethodId(
    r'resetFmgDefaultSettings',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;)V',
  );

  static final _resetFmgDefaultSettings = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetFmgDefaultSettings(com.arashivision.insta360.basecamera.camera.ICameraController$o0OO00O o0OO00O)`
  void resetFmgDefaultSettings(ICameraController_o0OO00O o0OO00O, ){
    
    _resetFmgDefaultSettings(reference.pointer, _id_resetFmgDefaultSettings as _$jni.JMethodIDPtr, o0OO00O.reference.pointer).check();
  }

  static final _id_getFmgTrackSensitivityMode = _class.instanceMethodId(
    r'getFmgTrackSensitivityMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;)V',
  );

  static final _getFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgTrackSensitivityMode(com.arashivision.insta360.basecamera.camera.ICameraController$o00Oo0 o00Oo0)`
  void getFmgTrackSensitivityMode(ICameraController_o00Oo0 o00Oo0, ){
    
    _getFmgTrackSensitivityMode(reference.pointer, _id_getFmgTrackSensitivityMode as _$jni.JMethodIDPtr, o00Oo0.reference.pointer).check();
  }

  static final _id_setFmgTrackSensitivityMode = _class.instanceMethodId(
    r'setFmgTrackSensitivityMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;)V',
  );

  static final _setFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTrackSensitivityMode(com.arashivision.fmg.response.model.FmgModel$PtzTrackSensitivityMode ptzTrackSensitivityMode, com.arashivision.insta360.basecamera.camera.ICameraController$o000000 o000000)`
  void setFmgTrackSensitivityMode(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000, ){
    
    _setFmgTrackSensitivityMode(reference.pointer, _id_setFmgTrackSensitivityMode as _$jni.JMethodIDPtr, ptzTrackSensitivityMode.reference.pointer, o000000.reference.pointer).check();
  }

  static final _id_startFmgRecMode = _class.instanceMethodId(
    r'startFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _startFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void startFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _startFmgRecMode(reference.pointer, _id_startFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_stopFmgRecMode = _class.instanceMethodId(
    r'stopFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _stopFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void stopFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _stopFmgRecMode(reference.pointer, _id_stopFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_initFmgRecMode = _class.instanceMethodId(
    r'initFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _initFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void initFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void initFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _initFmgRecMode(reference.pointer, _id_initFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_setFmgButtonDisabled = _class.instanceMethodId(
    r'setFmgButtonDisabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonDisabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonDisabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonDisabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonDisabled(reference.pointer, _id_setFmgButtonDisabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_setFmgButtonEnabled = _class.instanceMethodId(
    r'setFmgButtonEnabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonEnabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonEnabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonEnabled(reference.pointer, _id_setFmgButtonEnabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_fmgVibration = _class.instanceMethodId(
    r'fmgVibration',
    r'()V',
  );

  static final _fmgVibration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fmgVibration()`
  void fmgVibration(){
    
    _fmgVibration(reference.pointer, _id_fmgVibration as _$jni.JMethodIDPtr).check();
  }

  static final _id_enableFmgHandDrag = _class.instanceMethodId(
    r'enableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _enableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void enableFmgHandDrag(java.util.ArrayList arrayList)`
  void enableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _enableFmgHandDrag(reference.pointer, _id_enableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_disableFmgHandDrag = _class.instanceMethodId(
    r'disableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _disableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disableFmgHandDrag(java.util.ArrayList arrayList)`
  void disableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _disableFmgHandDrag(reference.pointer, _id_disableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_setFmgCameraFacing = _class.instanceMethodId(
    r'setFmgCameraFacing',
    r'(Z)V',
  );

  static final _setFmgCameraFacing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgCameraFacing(boolean z)`
  void setFmgCameraFacing(bool z, ){
    
    _setFmgCameraFacing(reference.pointer, _id_setFmgCameraFacing as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_updateFmgPhoneImu = _class.instanceMethodId(
    r'updateFmgPhoneImu',
    r'([F)V',
  );

  static final _updateFmgPhoneImu = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void updateFmgPhoneImu(float[] fs)`
  void updateFmgPhoneImu(_$jni.JArray<_$jni.jfloat> fs, ){
    
    _updateFmgPhoneImu(reference.pointer, _id_updateFmgPhoneImu as _$jni.JMethodIDPtr, fs.reference.pointer).check();
  }

  static final _id_getFmgAnalyticsData = _class.instanceMethodId(
    r'getFmgAnalyticsData',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;)V',
  );

  static final _getFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAnalyticsData(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo000 oooo000)`
  void getFmgAnalyticsData(ICameraController_Oooo000 oooo000, ){
    
    _getFmgAnalyticsData(reference.pointer, _id_getFmgAnalyticsData as _$jni.JMethodIDPtr, oooo000.reference.pointer).check();
  }

  static final _id_setFmgAngleSeq = _class.instanceMethodId(
    r'setFmgAngleSeq',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;)V',
  );

  static final _setFmgAngleSeq = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngleSeq(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0OOO0o o0OOO0o)`
  void setFmgAngleSeq(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o, ){
    
    _setFmgAngleSeq(reference.pointer, _id_setFmgAngleSeq as _$jni.JMethodIDPtr, list.reference.pointer, o0OOO0o.reference.pointer).check();
  }

  static final _id_clearFmgAnalyticsData = _class.instanceMethodId(
    r'clearFmgAnalyticsData',
    r'()V',
  );

  static final _clearFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void clearFmgAnalyticsData()`
  void clearFmgAnalyticsData(){
    
    _clearFmgAnalyticsData(reference.pointer, _id_clearFmgAnalyticsData as _$jni.JMethodIDPtr).check();
  }

  static final _id_startFmgHeartBeat = _class.instanceMethodId(
    r'startFmgHeartBeat',
    r'()V',
  );

  static final _startFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFmgHeartBeat()`
  void startFmgHeartBeat(){
    
    _startFmgHeartBeat(reference.pointer, _id_startFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopFmgHeartBeat = _class.instanceMethodId(
    r'stopFmgHeartBeat',
    r'()V',
  );

  static final _stopFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopFmgHeartBeat()`
  void stopFmgHeartBeat(){
    
    _stopFmgHeartBeat(reference.pointer, _id_stopFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  static final _id_getCameraProductType = _class.instanceMethodId(
    r'getCameraProductType',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$OooOOO0;',
  );

  static final _getCameraProductType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$OooOOO0 getCameraProductType()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_OooOOO0 getCameraProductType(){
    
    return _getCameraProductType(reference.pointer, _id_getCameraProductType as _$jni.JMethodIDPtr).object(const $BaseCamera_OooOOO0$Type());
  }

  static final _id_getLensType = _class.instanceMethodId(
    r'getLensType',
    r'()I',
  );

  static final _getLensType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getLensType()`
  int getLensType(){
    
    return _getLensType(reference.pointer, _id_getLensType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_onlySupportBleConnect = _class.instanceMethodId(
    r'onlySupportBleConnect',
    r'()Z',
  );

  static final _onlySupportBleConnect = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean onlySupportBleConnect()`
  bool onlySupportBleConnect(){
    
    return _onlySupportBleConnect(reference.pointer, _id_onlySupportBleConnect as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCaptureByUser = _class.instanceMethodId(
    r'isCaptureByUser',
    r'()Z',
  );

  static final _isCaptureByUser = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCaptureByUser()`
  bool isCaptureByUser(){
    
    return _isCaptureByUser(reference.pointer, _id_isCaptureByUser as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraLensNameForAnalytics = _class.instanceMethodId(
    r'getCameraLensNameForAnalytics',
    r'()Ljava/lang/String;',
  );

  static final _getCameraLensNameForAnalytics = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraLensNameForAnalytics()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraLensNameForAnalytics(){
    
    return _getCameraLensNameForAnalytics(reference.pointer, _id_getCameraLensNameForAnalytics as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_OooO0O0$2 = _class.instanceMethodId(
    r'OooO0O0',
    r'()V',
  );

  static final _OooO0O0$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO0O0()`
  void OooO0O0$2(){
    
    _OooO0O0$2(reference.pointer, _id_OooO0O0$2 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$6 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/clj/fastble/data/BleDevice;Z)V',
  );

  static final _OooO00o$6 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO00o(com.clj.fastble.data.BleDevice bleDevice, boolean z)`
  void OooO00o$6(_$jni.JObject bleDevice, bool z, ){
    
    _OooO00o$6(reference.pointer, _id_OooO00o$6 as _$jni.JMethodIDPtr, bleDevice.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO00o$7 = _class.instanceMethodId(
    r'OooO00o',
    r'(Z)V',
  );

  static final _OooO00o$7 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final void OooO00o(boolean z)`
  void OooO00o$7(bool z, ){
    
    _OooO00o$7(reference.pointer, _id_OooO00o$7 as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_OooO00o$8 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/clj/fastble/data/BleDevice;Ljava/lang/String;)Z',
  );

  static final _OooO00o$8 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final boolean OooO00o(com.clj.fastble.data.BleDevice bleDevice, java.lang.String string)`
  bool OooO00o$8(_$jni.JObject bleDevice, _$jni.JString string, ){
    
    return _OooO00o$8(reference.pointer, _id_OooO00o$8 as _$jni.JMethodIDPtr, bleDevice.reference.pointer, string.reference.pointer).boolean;
  }

  static final _id_OooO00o$9 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;)V',
  );

  static final _OooO00o$9 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(java.lang.String string)`
  void OooO00o$9(_$jni.JString string, ){
    
    _OooO00o$9(reference.pointer, _id_OooO00o$9 as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_OooO0O0$3 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Z)V',
  );

  static final _OooO0O0$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final void OooO0O0(boolean z)`
  void OooO0O0$3(bool z, ){
    
    _OooO0O0$3(reference.pointer, _id_OooO0O0$3 as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_OooO00o$10 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;I)V',
  );

  static final _OooO00o$10 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus cameraStatus, int i)`
  void OooO00o$10(BaseCamera_CameraStatus cameraStatus, int i, ){
    
    _OooO00o$10(reference.pointer, _id_OooO00o$10 as _$jni.JMethodIDPtr, cameraStatus.reference.pointer, i).check();
  }

}
final class $BaseCamera$Type extends _$jni.JObjType<BaseCamera> {
  

  @_$jni.internal
  const $BaseCamera$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera;';

  @_$jni.internal
  @_$core.override
  BaseCamera fromReference(_$jni.JReference reference) => BaseCamera.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCamera$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCamera$Type) &&
        other is $BaseCamera$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.BaseCameraController`
class BaseCameraController extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<BaseCameraController> $type;

  

  @_$jni.internal
  BaseCameraController.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/BaseCameraController');

      /// The type which includes information such as the signature of this class.
static const type = $BaseCameraController$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.log.CameraLogger OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static CameraLogger get OooO00o => _id_OooO00o.get(_class, const $CameraLogger$Type());

  /// from: `static public final int VERSION_VALID_LENGTH_CAMERA`
  static const VERSION_VALID_LENGTH_CAMERA = 3;
  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Ljava/util/List;',
      );
  /// from: `static public final java.util.List OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JList<_$jni.JString> get OooO0O0 => _id_OooO0O0.get(_class, const _$jni.JListType(_$jni.JStringType()));

  static final _id_OooO0OO =
      _class.instanceFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera get OooO0OO => _id_OooO0OO.get(this, const $BaseCamera$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0OO(BaseCamera value) => _id_OooO0OO.set(this, const $BaseCamera$Type(), value);

  static final _id_OooO0Oo =
      _class.instanceFieldId(
        r'OooO0Oo',
        r'Lcom/arashivision/camera/InstaCamera;',
      );
  /// from: `public com.arashivision.camera.InstaCamera OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooO0Oo => _id_OooO0Oo.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.InstaCamera OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0Oo(_$jni.JObject value) => _id_OooO0Oo.set(this, const _$jni.JObjectType(), value);

  static final _id_OooO0o0 =
      _class.instanceFieldId(
        r'OooO0o0',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus OooO0o0`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CameraSyncStatus get OooO0o0 => _id_OooO0o0.get(this, const $BaseCamera_CameraSyncStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus OooO0o0`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0o0(BaseCamera_CameraSyncStatus value) => _id_OooO0o0.set(this, const $BaseCamera_CameraSyncStatus$Type(), value);

  static final _id_OooO0o =
      _class.instanceFieldId(
        r'OooO0o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus OooO0o`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CameraSyncStatus get OooO0o => _id_OooO0o.get(this, const $BaseCamera_CameraSyncStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus OooO0o`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0o(BaseCamera_CameraSyncStatus value) => _id_OooO0o.set(this, const $BaseCamera_CameraSyncStatus$Type(), value);

  static final _id_OooO0oO =
      _class.instanceFieldId(
        r'OooO0oO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType OooO0oO`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_ConnectType get OooO0oO => _id_OooO0oO.get(this, const $BaseCamera_ConnectType$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType OooO0oO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0oO(BaseCamera_ConnectType value) => _id_OooO0oO.set(this, const $BaseCamera_ConnectType$Type(), value);

  static final _id_OooO0oo =
      _class.instanceFieldId(
        r'OooO0oo',
        r'LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooO;',
      );
  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooO OooO0oo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooO0oo => _id_OooO0oo.get(this, const _$jni.JObjectType());

  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooO OooO0oo`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0oo(_$jni.JObject value) => _id_OooO0oo.set(this, const _$jni.JObjectType(), value);

  static final _id_OooO =
      _class.instanceFieldId(
        r'OooO',
        r'Z',
      );
  /// from: `public boolean OooO`
bool get OooO => _id_OooO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooO`
set OooO(bool value) => _id_OooO.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOO0 =
      _class.instanceFieldId(
        r'OooOO0',
        r'Z',
      );
  /// from: `public boolean OooOO0`
bool get OooOO0 => _id_OooOO0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOO0`
set OooOO0(bool value) => _id_OooOO0.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOO0O =
      _class.instanceFieldId(
        r'OooOO0O',
        r'Lcom/arashivision/camera/listener/ICameraRecordListener;',
      );
  /// from: `public com.arashivision.camera.listener.ICameraRecordListener OooOO0O`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOO0O => _id_OooOO0O.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.listener.ICameraRecordListener OooOO0O`
  /// The returned object must be released after use, by calling the [release] method.
set OooOO0O(_$jni.JObject value) => _id_OooOO0O.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOO0o =
      _class.instanceFieldId(
        r'OooOO0o',
        r'Lcom/arashivision/camera/listener/OnStillImageListener;',
      );
  /// from: `public com.arashivision.camera.listener.OnStillImageListener OooOO0o`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOO0o => _id_OooOO0o.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.listener.OnStillImageListener OooOO0o`
  /// The returned object must be released after use, by calling the [release] method.
set OooOO0o(_$jni.JObject value) => _id_OooOO0o.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOO0 =
      _class.instanceFieldId(
        r'OooOOO0',
        r'Lcom/arashivision/camera/listener/ITimelapseListener;',
      );
  /// from: `public com.arashivision.camera.listener.ITimelapseListener OooOOO0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOO0 => _id_OooOOO0.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.listener.ITimelapseListener OooOOO0`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOO0(_$jni.JObject value) => _id_OooOOO0.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOO =
      _class.instanceFieldId(
        r'OooOOO',
        r'Lcom/arashivision/camera/listener/ICameraPreviewListener;',
      );
  /// from: `public com.arashivision.camera.listener.ICameraPreviewListener OooOOO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOO => _id_OooOOO.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.listener.ICameraPreviewListener OooOOO`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOO(_$jni.JObject value) => _id_OooOOO.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOOO =
      _class.instanceFieldId(
        r'OooOOOO',
        r'Lcom/arashivision/camera/listener/ICameraLiveStateListener;',
      );
  /// from: `public com.arashivision.camera.listener.ICameraLiveStateListener OooOOOO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOOO => _id_OooOOOO.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.camera.listener.ICameraLiveStateListener OooOOOO`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOOO(_$jni.JObject value) => _id_OooOOOO.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOOo =
      _class.instanceFieldId(
        r'OooOOOo',
        r'Lcom/arashivision/onecamera/InfoUpdateListener;',
      );
  /// from: `public com.arashivision.onecamera.InfoUpdateListener OooOOOo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOOo => _id_OooOOOo.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.onecamera.InfoUpdateListener OooOOOo`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOOo(_$jni.JObject value) => _id_OooOOOo.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOOo0 =
      _class.instanceFieldId(
        r'OooOOo0',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO OooOOo0`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_OooO get OooOOo0 => _id_OooOOo0.get(this, const $ICameraController_OooO$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO OooOOo0`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOo0(ICameraController_OooO value) => _id_OooOOo0.set(this, const $ICameraController_OooO$Type(), value);

  static final _id_OooOOo =
      _class.instanceFieldId(
        r'OooOOo',
        r'Ljava/util/Map;',
      );
  /// from: `public final java.util.Map OooOOo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JMap<_$jni.JLong, ICameraController_OooO0O0> get OooOOo => _id_OooOOo.get(this, const _$jni.JMapType(_$jni.JLongType(), $ICameraController_OooO0O0$Type()));

  static final _id_OooOOoo =
      _class.instanceFieldId(
        r'OooOOoo',
        r'LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooO0o$OooO0O0;',
      );
  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooO0o$OooO0O0 OooOOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOOoo => _id_OooOOoo.get(this, const _$jni.JObjectType());

  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooO0o$OooO0O0 OooOOoo`
  /// The returned object must be released after use, by calling the [release] method.
set OooOOoo(_$jni.JObject value) => _id_OooOOoo.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOo00 =
      _class.instanceFieldId(
        r'OooOo00',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String OooOo00`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get OooOo00 => _id_OooOo00.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String OooOo00`
  /// The returned object must be released after use, by calling the [release] method.
set OooOo00(_$jni.JString value) => _id_OooOo00.set(this, const _$jni.JStringType(), value);

  static final _id_OooOo0 =
      _class.instanceFieldId(
        r'OooOo0',
        r'I',
      );
  /// from: `public int OooOo0`
int get OooOo0 => _id_OooOo0.get(this, const _$jni.jintType());

  /// from: `public int OooOo0`
set OooOo0(int value) => _id_OooOo0.set(this, const _$jni.jintType(), value);

  static final _id_OooOo0O =
      _class.instanceFieldId(
        r'OooOo0O',
        r'Landroid/os/Handler;',
      );
  /// from: `public final android.os.Handler OooOo0O`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOo0O => _id_OooOo0O.get(this, const _$jni.JObjectType());

  static final _id_OooOo0o =
      _class.instanceFieldId(
        r'OooOo0o',
        r'Z',
      );
  /// from: `public boolean OooOo0o`
bool get OooOo0o => _id_OooOo0o.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOo0o`
set OooOo0o(bool value) => _id_OooOo0o.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOo =
      _class.instanceFieldId(
        r'OooOo',
        r'Z',
      );
  /// from: `public boolean OooOo`
bool get OooOo => _id_OooOo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOo`
set OooOo(bool value) => _id_OooOo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOoO0 =
      _class.instanceFieldId(
        r'OooOoO0',
        r'Ljava/util/List;',
      );
  /// from: `public java.util.List OooOoO0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JList<ICameraCheck> get OooOoO0 => _id_OooOoO0.get(this, const _$jni.JListType($ICameraCheck$Type()));

  /// from: `public java.util.List OooOoO0`
  /// The returned object must be released after use, by calling the [release] method.
set OooOoO0(_$jni.JList<ICameraCheck> value) => _id_OooOoO0.set(this, const _$jni.JListType($ICameraCheck$Type()), value);

  static final _id_OooOoO =
      _class.instanceFieldId(
        r'OooOoO',
        r'LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoO/OooO00o;',
      );
  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooOoO.OooO00o OooOoO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooOoO => _id_OooOoO.get(this, const _$jni.JObjectType());

  /// from: `public OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooOoO.OooO00o OooOoO`
  /// The returned object must be released after use, by calling the [release] method.
set OooOoO(_$jni.JObject value) => _id_OooOoO.set(this, const _$jni.JObjectType(), value);

  static final _id_OooOoOO =
      _class.instanceFieldId(
        r'OooOoOO',
        r'Z',
      );
  /// from: `public boolean OooOoOO`
bool get OooOoOO => _id_OooOoOO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OooOoOO`
set OooOoOO(bool value) => _id_OooOoOO.set(this, const _$jni.jbooleanType(), value);

  static final _id_OooOoo0 =
      _class.instanceFieldId(
        r'OooOoo0',
        r'I',
      );
  /// from: `public int OooOoo0`
int get OooOoo0 => _id_OooOoo0.get(this, const _$jni.jintType());

  /// from: `public int OooOoo0`
set OooOoo0(int value) => _id_OooOoo0.set(this, const _$jni.jintType(), value);

  static final _id_OooOoo =
      _class.instanceFieldId(
        r'OooOoo',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus OooOoo`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_PreviewStatus get OooOoo => _id_OooOoo.get(this, const $BaseCamera_PreviewStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus OooOoo`
  /// The returned object must be released after use, by calling the [release] method.
set OooOoo(BaseCamera_PreviewStatus value) => _id_OooOoo.set(this, const $BaseCamera_PreviewStatus$Type(), value);

  static final _id_OooOooO =
      _class.instanceFieldId(
        r'OooOooO',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution OooOooO`
  /// The returned object must be released after use, by calling the [release] method.
StreamResolution get OooOooO => _id_OooOooO.get(this, const $StreamResolution$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution OooOooO`
  /// The returned object must be released after use, by calling the [release] method.
set OooOooO(StreamResolution value) => _id_OooOooO.set(this, const $StreamResolution$Type(), value);

  static final _id_OooOooo =
      _class.instanceFieldId(
        r'OooOooo',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution OooOooo`
  /// The returned object must be released after use, by calling the [release] method.
StreamResolution get OooOooo => _id_OooOooo.get(this, const $StreamResolution$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution OooOooo`
  /// The returned object must be released after use, by calling the [release] method.
set OooOooo(StreamResolution value) => _id_OooOooo.set(this, const $StreamResolution$Type(), value);

  static final _id_Oooo000 =
      _class.instanceFieldId(
        r'Oooo000',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution Oooo000`
  /// The returned object must be released after use, by calling the [release] method.
VideoResolution get Oooo000 => _id_Oooo000.get(this, const $VideoResolution$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution Oooo000`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo000(VideoResolution value) => _id_Oooo000.set(this, const $VideoResolution$Type(), value);

  static final _id_Oooo00O =
      _class.instanceFieldId(
        r'Oooo00O',
        r'I',
      );
  /// from: `public int Oooo00O`
int get Oooo00O => _id_Oooo00O.get(this, const _$jni.jintType());

  /// from: `public int Oooo00O`
set Oooo00O(int value) => _id_Oooo00O.set(this, const _$jni.jintType(), value);

  static final _id_Oooo00o =
      _class.instanceFieldId(
        r'Oooo00o',
        r'I',
      );
  /// from: `public int Oooo00o`
int get Oooo00o => _id_Oooo00o.get(this, const _$jni.jintType());

  /// from: `public int Oooo00o`
set Oooo00o(int value) => _id_Oooo00o.set(this, const _$jni.jintType(), value);

  static final _id_Oooo0 =
      _class.instanceFieldId(
        r'Oooo0',
        r'Lcom/arashivision/onecamera/render/RenderMode;',
      );
  /// from: `public com.arashivision.onecamera.render.RenderMode Oooo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oooo0 => _id_Oooo0.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.onecamera.render.RenderMode Oooo0`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0(_$jni.JObject value) => _id_Oooo0.set(this, const _$jni.JObjectType(), value);

  static final _id_Oooo0O0 =
      _class.instanceFieldId(
        r'Oooo0O0',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable Oooo0O0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oooo0O0 => _id_Oooo0O0.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable Oooo0O0`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0O0(_$jni.JObject value) => _id_Oooo0O0.set(this, const _$jni.JObjectType(), value);

  static final _id_Oooo0OO =
      _class.instanceFieldId(
        r'Oooo0OO',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable Oooo0OO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oooo0OO => _id_Oooo0OO.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable Oooo0OO`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0OO(_$jni.JObject value) => _id_Oooo0OO.set(this, const _$jni.JObjectType(), value);

  static final _id_Oooo0o0 =
      _class.instanceFieldId(
        r'Oooo0o0',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable Oooo0o0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oooo0o0 => _id_Oooo0o0.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable Oooo0o0`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0o0(_$jni.JObject value) => _id_Oooo0o0.set(this, const _$jni.JObjectType(), value);

  static final _id_Oooo0o =
      _class.instanceFieldId(
        r'Oooo0o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType Oooo0o`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CaptureType get Oooo0o => _id_Oooo0o.get(this, const $BaseCamera_CaptureType$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType Oooo0o`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0o(BaseCamera_CaptureType value) => _id_Oooo0o.set(this, const $BaseCamera_CaptureType$Type(), value);

  static final _id_Oooo0oO =
      _class.instanceFieldId(
        r'Oooo0oO',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus Oooo0oO`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CaptureStatus get Oooo0oO => _id_Oooo0oO.get(this, const $BaseCamera_CaptureStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus Oooo0oO`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0oO(BaseCamera_CaptureStatus value) => _id_Oooo0oO.set(this, const $BaseCamera_CaptureStatus$Type(), value);

  static final _id_Oooo0oo =
      _class.instanceFieldId(
        r'Oooo0oo',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus Oooo0oo`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera_CaptureSubStatus get Oooo0oo => _id_Oooo0oo.get(this, const $BaseCamera_CaptureSubStatus$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus Oooo0oo`
  /// The returned object must be released after use, by calling the [release] method.
set Oooo0oo(BaseCamera_CaptureSubStatus value) => _id_Oooo0oo.set(this, const $BaseCamera_CaptureSubStatus$Type(), value);

  static final _id_Oooo =
      _class.instanceFieldId(
        r'Oooo',
        r'Z',
      );
  /// from: `public boolean Oooo`
bool get Oooo => _id_Oooo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oooo`
set Oooo(bool value) => _id_Oooo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OoooO00 =
      _class.instanceFieldId(
        r'OoooO00',
        r'[Ljava/lang/String;',
      );
  /// from: `public java.lang.String[] OoooO00`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.JString> get OoooO00 => _id_OoooO00.get(this, const _$jni.JArrayType(_$jni.JStringType()));

  /// from: `public java.lang.String[] OoooO00`
  /// The returned object must be released after use, by calling the [release] method.
set OoooO00(_$jni.JArray<_$jni.JString> value) => _id_OoooO00.set(this, const _$jni.JArrayType(_$jni.JStringType()), value);

  static final _id_OoooO0 =
      _class.instanceFieldId(
        r'OoooO0',
        r'Ljava/lang/Integer;',
      );
  /// from: `public java.lang.Integer OoooO0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JInteger get OoooO0 => _id_OoooO0.get(this, const _$jni.JIntegerType());

  /// from: `public java.lang.Integer OoooO0`
  /// The returned object must be released after use, by calling the [release] method.
set OoooO0(_$jni.JInteger value) => _id_OoooO0.set(this, const _$jni.JIntegerType(), value);

  static final _id_OoooO0O =
      _class.instanceFieldId(
        r'OoooO0O',
        r'I',
      );
  /// from: `public int OoooO0O`
int get OoooO0O => _id_OoooO0O.get(this, const _$jni.jintType());

  /// from: `public int OoooO0O`
set OoooO0O(int value) => _id_OoooO0O.set(this, const _$jni.jintType(), value);

  static final _id_OoooO =
      _class.instanceFieldId(
        r'OoooO',
        r'J',
      );
  /// from: `public long OoooO`
int get OoooO => _id_OoooO.get(this, const _$jni.jlongType());

  /// from: `public long OoooO`
set OoooO(int value) => _id_OoooO.set(this, const _$jni.jlongType(), value);

  static final _id_OoooOO0 =
      _class.instanceFieldId(
        r'OoooOO0',
        r'J',
      );
  /// from: `public long OoooOO0`
int get OoooOO0 => _id_OoooOO0.get(this, const _$jni.jlongType());

  /// from: `public long OoooOO0`
set OoooOO0(int value) => _id_OoooOO0.set(this, const _$jni.jlongType(), value);

  static final _id_o000oOoO =
      _class.instanceFieldId(
        r'o000oOoO',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String o000oOoO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get o000oOoO => _id_o000oOoO.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String o000oOoO`
  /// The returned object must be released after use, by calling the [release] method.
set o000oOoO(_$jni.JString value) => _id_o000oOoO.set(this, const _$jni.JStringType(), value);

  static final _id_OoooOOO =
      _class.instanceFieldId(
        r'OoooOOO',
        r'Z',
      );
  /// from: `public boolean OoooOOO`
bool get OoooOOO => _id_OoooOOO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OoooOOO`
set OoooOOO(bool value) => _id_OoooOOO.set(this, const _$jni.jbooleanType(), value);

  static final _id_OoooOOo =
      _class.instanceFieldId(
        r'OoooOOo',
        r'Ljava/util/HashMap;',
      );
  /// from: `public final java.util.HashMap OoooOOo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OoooOOo => _id_OoooOOo.get(this, const _$jni.JObjectType());

  static final _id_OoooOo0 =
      _class.instanceFieldId(
        r'OoooOo0',
        r'Ljava/util/HashMap;',
      );
  /// from: `public final java.util.HashMap OoooOo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OoooOo0 => _id_OoooOo0.get(this, const _$jni.JObjectType());

  static final _id_OoooOoO =
      _class.instanceFieldId(
        r'OoooOoO',
        r'Ljava/util/HashMap;',
      );
  /// from: `public final java.util.HashMap OoooOoO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OoooOoO => _id_OoooOoO.get(this, const _$jni.JObjectType());

  static final _id_OoooOoo =
      _class.instanceFieldId(
        r'OoooOoo',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo OoooOoo`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_o00oOoo get OoooOoo => _id_OoooOoo.get(this, const $ICameraController_o00oOoo$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo OoooOoo`
  /// The returned object must be released after use, by calling the [release] method.
set OoooOoo(ICameraController_o00oOoo value) => _id_OoooOoo.set(this, const $ICameraController_o00oOoo$Type(), value);

  static final _id_Ooooo00 =
      _class.instanceFieldId(
        r'Ooooo00',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener Ooooo00`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_ICaptureStatusChangedListener get Ooooo00 => _id_Ooooo00.get(this, const $ICameraController_ICaptureStatusChangedListener$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener Ooooo00`
  /// The returned object must be released after use, by calling the [release] method.
set Ooooo00(ICameraController_ICaptureStatusChangedListener value) => _id_Ooooo00.set(this, const $ICameraController_ICaptureStatusChangedListener$Type(), value);

  static final _id_Ooooo0o =
      _class.instanceFieldId(
        r'Ooooo0o',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener Ooooo0o`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_IPreviewStatusChangedListener get Ooooo0o => _id_Ooooo0o.get(this, const $ICameraController_IPreviewStatusChangedListener$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener Ooooo0o`
  /// The returned object must be released after use, by calling the [release] method.
set Ooooo0o(ICameraController_IPreviewStatusChangedListener value) => _id_Ooooo0o.set(this, const $ICameraController_IPreviewStatusChangedListener$Type(), value);

  static final _id_OooooO0 =
      _class.instanceFieldId(
        r'OooooO0',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO OooooO0`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_OooO0OO get OooooO0 => _id_OooooO0.get(this, const $ICameraController_OooO0OO$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO OooooO0`
  /// The returned object must be released after use, by calling the [release] method.
set OooooO0(ICameraController_OooO0OO value) => _id_OooooO0.set(this, const $ICameraController_OooO0OO$Type(), value);

  static final _id_OooooOO =
      _class.instanceFieldId(
        r'OooooOO',
        r'Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback OooooOO`
  /// The returned object must be released after use, by calling the [release] method.
IBaseCameraChangedCallback get OooooOO => _id_OooooOO.get(this, const $IBaseCameraChangedCallback$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback OooooOO`
  /// The returned object must be released after use, by calling the [release] method.
set OooooOO(IBaseCameraChangedCallback value) => _id_OooooOO.set(this, const $IBaseCameraChangedCallback$Type(), value);

  static final _id_OooooOo =
      _class.instanceFieldId(
        r'OooooOo',
        r'Ljava/util/HashMap;',
      );
  /// from: `public java.util.HashMap OooooOo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooooOo => _id_OooooOo.get(this, const _$jni.JObjectType());

  /// from: `public java.util.HashMap OooooOo`
  /// The returned object must be released after use, by calling the [release] method.
set OooooOo(_$jni.JObject value) => _id_OooooOo.set(this, const _$jni.JObjectType(), value);

  static final _id_Oooooo0 =
      _class.instanceFieldId(
        r'Oooooo0',
        r'J',
      );
  /// from: `public long Oooooo0`
int get Oooooo0 => _id_Oooooo0.get(this, const _$jni.jlongType());

  /// from: `public long Oooooo0`
set Oooooo0(int value) => _id_Oooooo0.set(this, const _$jni.jlongType(), value);

  static final _id_Oooooo =
      _class.instanceFieldId(
        r'Oooooo',
        r'J',
      );
  /// from: `public long Oooooo`
int get Oooooo => _id_Oooooo.get(this, const _$jni.jlongType());

  /// from: `public long Oooooo`
set Oooooo(int value) => _id_Oooooo.set(this, const _$jni.jlongType(), value);

  static final _id_OoooooO =
      _class.instanceFieldId(
        r'OoooooO',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public final java.lang.Runnable OoooooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OoooooO => _id_OoooooO.get(this, const _$jni.JObjectType());

  static final _id_Ooooooo =
      _class.instanceFieldId(
        r'Ooooooo',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 Ooooooo`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_o000O000 get Ooooooo => _id_Ooooooo.get(this, const $ICameraController_o000O000$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 Ooooooo`
  /// The returned object must be released after use, by calling the [release] method.
set Ooooooo(ICameraController_o000O000 value) => _id_Ooooooo.set(this, const $ICameraController_o000O000$Type(), value);

  static final _id_o0OoOo0 =
      _class.instanceFieldId(
        r'o0OoOo0',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o o0OoOo0`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_OooO00o get o0OoOo0 => _id_o0OoOo0.get(this, const $ICameraController_OooO00o$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o o0OoOo0`
  /// The returned object must be released after use, by calling the [release] method.
set o0OoOo0(ICameraController_OooO00o value) => _id_o0OoOo0.set(this, const $ICameraController_OooO00o$Type(), value);

  static final _id_ooOO =
      _class.instanceFieldId(
        r'ooOO',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 ooOO`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_o000O000 get ooOO => _id_ooOO.get(this, const $ICameraController_o000O000$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 ooOO`
  /// The returned object must be released after use, by calling the [release] method.
set ooOO(ICameraController_o000O000 value) => _id_ooOO.set(this, const $ICameraController_o000O000$Type(), value);

  static final _id_o00O0O =
      _class.instanceFieldId(
        r'o00O0O',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o00O0O`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_o000O000 get o00O0O => _id_o00O0O.get(this, const $ICameraController_o000O000$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o00O0O`
  /// The returned object must be released after use, by calling the [release] method.
set o00O0O(ICameraController_o000O000 value) => _id_o00O0O.set(this, const $ICameraController_o000O000$Type(), value);

  static final _id_o00Oo0 =
      _class.instanceFieldId(
        r'o00Oo0',
        r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o00Oo0`
  /// The returned object must be released after use, by calling the [release] method.
ICameraController_o000O000 get o00Oo0 => _id_o00Oo0.get(this, const $ICameraController_o000O000$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o00Oo0`
  /// The returned object must be released after use, by calling the [release] method.
set o00Oo0(ICameraController_o000O000 value) => _id_o00Oo0.set(this, const $ICameraController_o000O000$Type(), value);

  static final _id_o00Ooo =
      _class.instanceFieldId(
        r'o00Ooo',
        r'Z',
      );
  /// from: `public boolean o00Ooo`
bool get o00Ooo => _id_o00Ooo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean o00Ooo`
set o00Ooo(bool value) => _id_o00Ooo.set(this, const _$jni.jbooleanType(), value);

  static final _id_o00o0O =
      _class.instanceFieldId(
        r'o00o0O',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public final java.lang.Runnable o00o0O`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get o00o0O => _id_o00o0O.get(this, const _$jni.JObjectType());

  static final _id_o00ooo =
      _class.instanceFieldId(
        r'o00ooo',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable o00ooo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get o00ooo => _id_o00ooo.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable o00ooo`
  /// The returned object must be released after use, by calling the [release] method.
set o00ooo(_$jni.JObject value) => _id_o00ooo.set(this, const _$jni.JObjectType(), value);

  static final _id_oo000o =
      _class.instanceFieldId(
        r'oo000o',
        r'Ljava/lang/Runnable;',
      );
  /// from: `public java.lang.Runnable oo000o`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oo000o => _id_oo000o.get(this, const _$jni.JObjectType());

  /// from: `public java.lang.Runnable oo000o`
  /// The returned object must be released after use, by calling the [release] method.
set oo000o(_$jni.JObject value) => _id_oo000o.set(this, const _$jni.JObjectType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory BaseCameraController() {
    
    return BaseCameraController.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_OooO0oO$1 = _class.staticMethodId(
    r'OooO0oO',
    r'(I)V',
  );

  static final _OooO0oO$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `synthetic static public void OooO0oO(int i)`
  static void OooO0oO$1(int i, ){
    
    _OooO0oO$1(_class.reference.pointer, _id_OooO0oO$1 as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO00o$1 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;ILcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus$DarkEisStatus;)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo o0000oo, int i, com.arashivision.onecamera.cameranotification.NotifyDarkEisStatus$DarkEisStatus darkEisStatus)`
  static void OooO00o$1(ICameraController_o0000oo o0000oo, int i, _$jni.JObject darkEisStatus, ){
    
    _OooO00o$1(_class.reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, o0000oo.reference.pointer, i, darkEisStatus.reference.pointer).check();
  }

  static final _id_OooO00o$2 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;I)V',
  );

  static final _OooO00o$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `synthetic static public void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000 o00O0000, int i)`
  static void OooO00o$2(ICameraController_o00O0000 o00O0000, int i, ){
    
    _OooO00o$2(_class.reference.pointer, _id_OooO00o$2 as _$jni.JMethodIDPtr, o00O0000.reference.pointer, i).check();
  }

  static final _id_OooO00o$3 = _class.staticMethodId(
    r'OooO00o',
    r'(ILjava/lang/Integer;)Z',
  );

  static final _OooO00o$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public boolean OooO00o(int i, java.lang.Integer integer)`
  static bool OooO00o$3(int i, _$jni.JInteger integer, ){
    
    return _OooO00o$3(_class.reference.pointer, _id_OooO00o$3 as _$jni.JMethodIDPtr, i, integer.reference.pointer).boolean;
  }

  static final _id_OooO00o$4 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;ILcom/arashivision/onecamera/PhotoOptions;)V',
  );

  static final _OooO00o$4 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener, int i, com.arashivision.onecamera.PhotoOptions photoOptions)`
  static void OooO00o$4(ICameraController_IFetchOptionsListener iFetchOptionsListener, int i, _$jni.JObject photoOptions, ){
    
    _OooO00o$4(_class.reference.pointer, _id_OooO00o$4 as _$jni.JMethodIDPtr, iFetchOptionsListener.reference.pointer, i, photoOptions.reference.pointer).check();
  }

  static final _id_OooO00o$5 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;ILcom/arashivision/onecamera/Options;)V',
  );

  static final _OooO00o$5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener, int i, com.arashivision.onecamera.Options options)`
  static void OooO00o$5(ICameraController_IFetchOptionsListener iFetchOptionsListener, int i, _$jni.JObject options, ){
    
    _OooO00o$5(_class.reference.pointer, _id_OooO00o$5 as _$jni.JMethodIDPtr, iFetchOptionsListener.reference.pointer, i, options.reference.pointer).check();
  }

  static final _id_OooO0O0$1 = _class.staticMethodId(
    r'OooO0O0',
    r'(ILjava/lang/Integer;)Z',
  );

  static final _OooO0O0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public boolean OooO0O0(int i, java.lang.Integer integer)`
  static bool OooO0O0$1(int i, _$jni.JInteger integer, ){
    
    return _OooO0O0$1(_class.reference.pointer, _id_OooO0O0$1 as _$jni.JMethodIDPtr, i, integer.reference.pointer).boolean;
  }

  static final _id_OooO00o$6 = _class.staticMethodId(
    r'OooO00o',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;Ljava/lang/Integer;)V',
  );

  static final _OooO00o$6 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0 o000O0, java.lang.Integer integer)`
  static void OooO00o$6(int i, int i1, ICameraController_o000O0 o000O0, _$jni.JInteger integer, ){
    
    _OooO00o$6(_class.reference.pointer, _id_OooO00o$6 as _$jni.JMethodIDPtr, i, i1, o000O0.reference.pointer, integer.reference.pointer).check();
  }

  static final _id_OooO00o$7 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCameraController;[Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;)[Ljava/lang/String;',
  );

  static final _OooO00o$7 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public java.lang.String[] OooO00o(com.arashivision.insta360.basecamera.camera.BaseCameraController baseCameraController, java.lang.String[] strings, com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType captureType)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<_$jni.JString> OooO00o$7(BaseCameraController baseCameraController, _$jni.JArray<_$jni.JString> strings, BaseCamera_CaptureType captureType, ){
    
    return _OooO00o$7(_class.reference.pointer, _id_OooO00o$7 as _$jni.JMethodIDPtr, baseCameraController.reference.pointer, strings.reference.pointer, captureType.reference.pointer).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_OooO00o$8 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCameraController;Z)Z',
  );

  static final _OooO00o$8 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `synthetic static public boolean OooO00o(com.arashivision.insta360.basecamera.camera.BaseCameraController baseCameraController, boolean z)`
  static bool OooO00o$8(BaseCameraController baseCameraController, bool z, ){
    
    return _OooO00o$8(_class.reference.pointer, _id_OooO00o$8 as _$jni.JMethodIDPtr, baseCameraController.reference.pointer, z ? 1 : 0).boolean;
  }


  static final _id_OooO00o$9 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/Long;Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0O0;)V',
  );

  static final _OooO00o$9 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(java.lang.Long long, com.arashivision.insta360.basecamera.camera.ICameraController$OooO0O0 oooO0O0)`
  void OooO00o$9(_$jni.JLong long, ICameraController_OooO0O0 oooO0O0, ){
    
    _OooO00o$9(reference.pointer, _id_OooO00o$9 as _$jni.JMethodIDPtr, long.reference.pointer, oooO0O0.reference.pointer).check();
  }

  static final _id_OooO0O0$2 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Ljava/lang/String;)[Ljava/lang/String;',
  );

  static final _OooO0O0$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final java.lang.String[] OooO0O0(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> OooO0O0$2(_$jni.JString string, ){
    
    return _OooO0O0$2(reference.pointer, _id_OooO0O0$2 as _$jni.JMethodIDPtr, string.reference.pointer).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_OooOO0o$1 = _class.instanceMethodId(
    r'OooOO0o',
    r'()V',
  );

  static final _OooOO0o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOO0o()`
  void OooOO0o$1(){
    
    _OooOO0o$1(reference.pointer, _id_OooOO0o$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0O0$3 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;Z)V',
  );

  static final _OooO0O0$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO0O0(com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o000O000, boolean z)`
  void OooO0O0$3(ICameraController_o000O000 o000O000, bool z, ){
    
    _OooO0O0$3(reference.pointer, _id_OooO0O0$3 as _$jni.JMethodIDPtr, o000O000.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooOO0O$1 = _class.instanceMethodId(
    r'OooOO0O',
    r'()V',
  );

  static final _OooOO0O$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOO0O()`
  void OooOO0O$1(){
    
    _OooOO0O$1(reference.pointer, _id_OooOO0O$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$10 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;Z)V',
  );

  static final _OooO00o$10 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o000O000, boolean z)`
  void OooO00o$10(ICameraController_o000O000 o000O000, bool z, ){
    
    _OooO00o$10(reference.pointer, _id_OooO00o$10 as _$jni.JMethodIDPtr, o000O000.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooOOOO$1 = _class.instanceMethodId(
    r'OooOOOO',
    r'(II)V',
  );

  static final _OooOOOO$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public final void OooOOOO(int i, int i1)`
  void OooOOOO$1(int i, int i1, ){
    
    _OooOOOO$1(reference.pointer, _id_OooOOOO$1 as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_OooOOO0$1 = _class.instanceMethodId(
    r'OooOOO0',
    r'()V',
  );

  static final _OooOOO0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOOO0()`
  void OooOOO0$1(){
    
    _OooOOO0$1(reference.pointer, _id_OooOOO0$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0OO$1 = _class.instanceMethodId(
    r'OooO0OO',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;Z)V',
  );

  static final _OooO0OO$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO0OO(com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o000O000, boolean z)`
  void OooO0OO$1(ICameraController_o000O000 o000O000, bool z, ){
    
    _OooO0OO$1(reference.pointer, _id_OooO0OO$1 as _$jni.JMethodIDPtr, o000O000.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO00o$11 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;)V',
  );

  static final _OooO00o$11 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o000O000)`
  void OooO00o$11(ICameraController_o000O000 o000O000, ){
    
    _OooO00o$11(reference.pointer, _id_OooO00o$11 as _$jni.JMethodIDPtr, o000O000.reference.pointer).check();
  }

  static final _id_OooO00o$12 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O;)V',
  );

  static final _OooO00o$12 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O o0000O)`
  void OooO00o$12(_$jni.JList<_$jni.JString> list, ICameraController_o0000O o0000O, ){
    
    _OooO00o$12(reference.pointer, _id_OooO00o$12 as _$jni.JMethodIDPtr, list.reference.pointer, o0000O.reference.pointer).check();
  }

  static final _id_OooO00o$13 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O;Lcom/arashivision/camera/RequestOptions;)V',
  );

  static final _OooO00o$13 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O o0000O, com.arashivision.camera.RequestOptions requestOptions)`
  void OooO00o$13(_$jni.JList<_$jni.JString> list, ICameraController_o0000O o0000O, _$jni.JObject requestOptions, ){
    
    _OooO00o$13(reference.pointer, _id_OooO00o$13 as _$jni.JMethodIDPtr, list.reference.pointer, o0000O.reference.pointer, requestOptions.reference.pointer).check();
  }

  static final _id_OooO00o$14 = _class.instanceMethodId(
    r'OooO00o',
    r'(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000OO0;)V',
  );

  static final _OooO00o$14 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(int i, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0000OO0 o0000OO0)`
  void OooO00o$14(int i, _$jni.JList<_$jni.JString> list, ICameraController_o0000OO0 o0000OO0, ){
    
    _OooO00o$14(reference.pointer, _id_OooO00o$14 as _$jni.JMethodIDPtr, i, list.reference.pointer, o0000OO0.reference.pointer).check();
  }

  static final _id_OooO00o$15 = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000;)V',
  );

  static final _OooO00o$15 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000 o000)`
  void OooO00o$15(int i, ICameraController_o000 o000, ){
    
    _OooO00o$15(reference.pointer, _id_OooO00o$15 as _$jni.JMethodIDPtr, i, o000.reference.pointer).check();
  }

  static final _id_OooO00o$16 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/onecamera/cameraresponse/CameraCaptureStatus;)V',
  );

  static final _OooO00o$16 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.onecamera.cameraresponse.CameraCaptureStatus cameraCaptureStatus)`
  void OooO00o$16(_$jni.JObject cameraCaptureStatus, ){
    
    _OooO00o$16(reference.pointer, _id_OooO00o$16 as _$jni.JMethodIDPtr, cameraCaptureStatus.reference.pointer).check();
  }

  static final _id_OooOOOO$2 = _class.instanceMethodId(
    r'OooOOOO',
    r'()V',
  );

  static final _OooOOOO$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOOOO()`
  void OooOOOO$2(){
    
    _OooOOOO$2(reference.pointer, _id_OooOOOO$2 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooOOO$1 = _class.instanceMethodId(
    r'OooOOO',
    r'()V',
  );

  static final _OooOOO$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOOO()`
  void OooOOO$1(){
    
    _OooOOO$1(reference.pointer, _id_OooOOO$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0OO$2 = _class.instanceMethodId(
    r'OooO0OO',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;)V',
  );

  static final _OooO0OO$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO0OO(com.arashivision.insta360.basecamera.camera.ICameraController$o000O000 o000O000)`
  void OooO0OO$2(ICameraController_o000O000 o000O000, ){
    
    _OooO0OO$2(reference.pointer, _id_OooO0OO$2 as _$jni.JMethodIDPtr, o000O000.reference.pointer).check();
  }

  static final _id_OooO0O0$4 = _class.instanceMethodId(
    r'OooO0O0',
    r'(I)Z',
  );

  static final _OooO0O0$4 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final boolean OooO0O0(int i)`
  bool OooO0O0$4(int i, ){
    
    return _OooO0O0$4(reference.pointer, _id_OooO0O0$4 as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_OooO00o$17 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;)Lcom/arashivision/onecamera/camerarequest/VideoParam;',
  );

  static final _OooO00o$17 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final com.arashivision.onecamera.camerarequest.VideoParam OooO00o(com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject OooO00o$17(StreamResolution streamResolution, ){
    
    return _OooO00o$17(reference.pointer, _id_OooO00o$17 as _$jni.JMethodIDPtr, streamResolution.reference.pointer).object(const _$jni.JObjectType());
  }

  static final _id_OooO00o$18 = _class.instanceMethodId(
    r'OooO00o',
    r'(IIIILjava/lang/String;IJZZZ)V',
  );

  static final _OooO00o$18 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int64, _$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, int, _$jni.Pointer<_$jni.Void>, int, int, int, int, int)>();
  /// from: `public final void OooO00o(int i, int i1, int i2, int i3, java.lang.String string, int i4, long j, boolean z, boolean z1, boolean z2)`
  void OooO00o$18(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1, bool z2, ){
    
    _OooO00o$18(reference.pointer, _id_OooO00o$18 as _$jni.JMethodIDPtr, i, i1, i2, i3, string.reference.pointer, i4, j, z ? 1 : 0, z1 ? 1 : 0, z2 ? 1 : 0).check();
  }

  static final _id_OooO00o$19 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;)V',
  );

  static final _OooO00o$19 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType captureType)`
  void OooO00o$19(BaseCamera_CaptureType captureType, ){
    
    _OooO00o$19(reference.pointer, _id_OooO00o$19 as _$jni.JMethodIDPtr, captureType.reference.pointer).check();
  }

  static final _id_OooO00o$20 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;Ljava/lang/Integer;Ljava/lang/Integer;)V',
  );

  static final _OooO00o$20 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType captureType, java.lang.Integer integer, java.lang.Integer integer1)`
  void OooO00o$20(BaseCamera_CaptureType captureType, _$jni.JInteger integer, _$jni.JInteger integer1, ){
    
    _OooO00o$20(reference.pointer, _id_OooO00o$20 as _$jni.JMethodIDPtr, captureType.reference.pointer, integer.reference.pointer, integer1.reference.pointer).check();
  }

  static final _id_OooO0oO$2 = _class.instanceMethodId(
    r'OooO0oO',
    r'()V',
  );

  static final _OooO0oO$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO0oO()`
  void OooO0oO$2(){
    
    _OooO0oO$2(reference.pointer, _id_OooO0oO$2 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0o$1 = _class.instanceMethodId(
    r'OooO0o',
    r'()V',
  );

  static final _OooO0o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO0o()`
  void OooO0o$1(){
    
    _OooO0o$1(reference.pointer, _id_OooO0o$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooOOOo$1 = _class.instanceMethodId(
    r'OooOOOo',
    r'()V',
  );

  static final _OooOOOo$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOOOo()`
  void OooOOOo$1(){
    
    _OooOOOo$1(reference.pointer, _id_OooOOOo$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$21 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;IJJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _OooO00o$21 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int64, _$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(java.lang.String string, int i, long j, long j1, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void OooO00o$21(_$jni.JString string, int i, int j, int j1, ICameraController_o0000O0 o0000O0, ){
    
    _OooO00o$21(reference.pointer, _id_OooO00o$21 as _$jni.JMethodIDPtr, string.reference.pointer, i, j, j1, o0000O0.reference.pointer).check();
  }

  static final _id_OooO00o$22 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;)Ljava/lang/String;',
  );

  static final _OooO00o$22 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final java.lang.String OooO00o(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString OooO00o$22(_$jni.JString string, ){
    
    return _OooO00o$22(reference.pointer, _id_OooO00o$22 as _$jni.JMethodIDPtr, string.reference.pointer).object(const _$jni.JStringType());
  }

  static final _id_OooO0OO$3 = _class.instanceMethodId(
    r'OooO0OO',
    r'(I)I',
  );

  static final _OooO0OO$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final int OooO0OO(int i)`
  int OooO0OO$3(int i, ){
    
    return _OooO0OO$3(reference.pointer, _id_OooO0OO$3 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_OooO00o$23 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;)V',
  );

  static final _OooO00o$23 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.onecamera.camerarequest.ButtonFollowOptions buttonFollowOptions)`
  void OooO00o$23(_$jni.JObject buttonFollowOptions, ){
    
    _OooO00o$23(reference.pointer, _id_OooO00o$23 as _$jni.JMethodIDPtr, buttonFollowOptions.reference.pointer).check();
  }

  static final _id_OooO00o$24 = _class.instanceMethodId(
    r'OooO00o',
    r'(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;',
  );

  static final _OooO00o$24 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final T OooO00o(java.lang.String string, T object)`
  /// The returned object must be released after use, by calling the [release] method.
  $T OooO00o$24<$T extends _$jni.JObject>(_$jni.JString string, $T object, {_$jni.JObjType<$T>? T, }){
    T ??= _$jni.lowestCommonSuperType([object.$type, ]) as _$jni.JObjType<$T>;
    return _OooO00o$24(reference.pointer, _id_OooO00o$24 as _$jni.JMethodIDPtr, string.reference.pointer, object.reference.pointer).object(T);
  }

  static final _id_OooO00o$25 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;[ZZ)V',
  );

  static final _OooO00o$25 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o o000O0o, boolean[] zs, boolean z)`
  void OooO00o$25(ICameraController_o000O0o o000O0o, _$jni.JArray<_$jni.jboolean> zs, bool z, ){
    
    _OooO00o$25(reference.pointer, _id_OooO00o$25 as _$jni.JMethodIDPtr, o000O0o.reference.pointer, zs.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_OooO0Oo$1 = _class.instanceMethodId(
    r'OooO0Oo',
    r'(I)Lcom/arashivision/onecamera/PhotoOptions;',
  );

  static final _OooO0Oo$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final com.arashivision.onecamera.PhotoOptions OooO0Oo(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject OooO0Oo$1(int i, ){
    
    return _OooO0Oo$1(reference.pointer, _id_OooO0Oo$1 as _$jni.JMethodIDPtr, i).object(const _$jni.JObjectType());
  }

  static final _id_OooO0o0$1 = _class.instanceMethodId(
    r'OooO0o0',
    r'(I)Lcom/arashivision/onecamera/MultiPhotoOptions;',
  );

  static final _OooO0o0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final com.arashivision.onecamera.MultiPhotoOptions OooO0o0(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject OooO0o0$1(int i, ){
    
    return _OooO0o0$1(reference.pointer, _id_OooO0o0$1 as _$jni.JMethodIDPtr, i).object(const _$jni.JObjectType());
  }

  static final _id_OooO00o$26 = _class.instanceMethodId(
    r'OooO00o',
    r'(I)Z',
  );

  static final _OooO00o$26 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public final boolean OooO00o(int i)`
  bool OooO00o$26(int i, ){
    
    return _OooO00o$26(reference.pointer, _id_OooO00o$26 as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_OooOO0$1 = _class.instanceMethodId(
    r'OooOO0',
    r'()V',
  );

  static final _OooOO0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooOO0()`
  void OooOO0$1(){
    
    _OooOO0$1(reference.pointer, _id_OooOO0$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO$1 = _class.instanceMethodId(
    r'OooO',
    r'()V',
  );

  static final _OooO$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO()`
  void OooO$1(){
    
    _OooO$1(reference.pointer, _id_OooO$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0oo$1 = _class.instanceMethodId(
    r'OooO0oo',
    r'()V',
  );

  static final _OooO0oo$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO0oo()`
  void OooO0oo$1(){
    
    _OooO0oo$1(reference.pointer, _id_OooO0oo$1 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO0o0$2 = _class.instanceMethodId(
    r'OooO0o0',
    r'()V',
  );

  static final _OooO0o0$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public final void OooO0o0()`
  void OooO0o0$2(){
    
    _OooO0o0$2(reference.pointer, _id_OooO0o0$2 as _$jni.JMethodIDPtr).check();
  }

  static final _id_OooO00o$27 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/onecamera/cameranotification/ChargeboxConnectedStatus;)V',
  );

  static final _OooO00o$27 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void OooO00o(com.arashivision.onecamera.cameranotification.ChargeboxConnectedStatus chargeboxConnectedStatus)`
  void OooO00o$27(_$jni.JObject chargeboxConnectedStatus, ){
    
    _OooO00o$27(reference.pointer, _id_OooO00o$27 as _$jni.JMethodIDPtr, chargeboxConnectedStatus.reference.pointer).check();
  }

  static final _id_OooO00o$28 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V',
  );

  static final _OooO00o$28 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public final void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus, int i)`
  void OooO00o$28(BaseCamera_CameraSyncStatus cameraSyncStatus, int i, ){
    
    _OooO00o$28(reference.pointer, _id_OooO00o$28 as _$jni.JMethodIDPtr, cameraSyncStatus.reference.pointer, i).check();
  }

  static final _id_setInstaCamera = _class.instanceMethodId(
    r'setInstaCamera',
    r'(Lcom/arashivision/camera/InstaCamera;)V',
  );

  static final _setInstaCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setInstaCamera(com.arashivision.camera.InstaCamera instaCamera)`
  void setInstaCamera(_$jni.JObject instaCamera, ){
    
    _setInstaCamera(reference.pointer, _id_setInstaCamera as _$jni.JMethodIDPtr, instaCamera.reference.pointer).check();
  }

  static final _id_setBaseCamera = _class.instanceMethodId(
    r'setBaseCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _setBaseCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBaseCamera(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void setBaseCamera(BaseCamera baseCamera, ){
    
    _setBaseCamera(reference.pointer, _id_setBaseCamera as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_setSyncStatusChangeListener = _class.instanceMethodId(
    r'setSyncStatusChangeListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;)V',
  );

  static final _setSyncStatusChangeListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSyncStatusChangeListener(com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo o00oOoo)`
  void setSyncStatusChangeListener(ICameraController_o00oOoo o00oOoo, ){
    
    _setSyncStatusChangeListener(reference.pointer, _id_setSyncStatusChangeListener as _$jni.JMethodIDPtr, o00oOoo.reference.pointer).check();
  }

  static final _id_setCaptureStatusChangeListener = _class.instanceMethodId(
    r'setCaptureStatusChangeListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;)V',
  );

  static final _setCaptureStatusChangeListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCaptureStatusChangeListener(com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener iCaptureStatusChangedListener)`
  void setCaptureStatusChangeListener(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener, ){
    
    _setCaptureStatusChangeListener(reference.pointer, _id_setCaptureStatusChangeListener as _$jni.JMethodIDPtr, iCaptureStatusChangedListener.reference.pointer).check();
  }

  static final _id_setPreviewStatusChangedListener = _class.instanceMethodId(
    r'setPreviewStatusChangedListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;)V',
  );

  static final _setPreviewStatusChangedListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewStatusChangedListener(com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener iPreviewStatusChangedListener)`
  void setPreviewStatusChangedListener(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener, ){
    
    _setPreviewStatusChangedListener(reference.pointer, _id_setPreviewStatusChangedListener as _$jni.JMethodIDPtr, iPreviewStatusChangedListener.reference.pointer).check();
  }

  static final _id_setDeveloperConfigProvider = _class.instanceMethodId(
    r'setDeveloperConfigProvider',
    r'(LOooO00o/OooO00o/OooO00o/OooO00o/OooO00o;)V',
  );

  static final _setDeveloperConfigProvider = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setDeveloperConfigProvider(OooO00o.OooO00o.OooO00o.OooO00o.OooO00o oooO00o)`
  void setDeveloperConfigProvider(_$jni.JObject oooO00o, ){
    
    _setDeveloperConfigProvider(reference.pointer, _id_setDeveloperConfigProvider as _$jni.JMethodIDPtr, oooO00o.reference.pointer).check();
  }

  static final _id_setBaseCameraChangedCallback = _class.instanceMethodId(
    r'setBaseCameraChangedCallback',
    r'(Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;)V',
  );

  static final _setBaseCameraChangedCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBaseCameraChangedCallback(com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback iBaseCameraChangedCallback)`
  void setBaseCameraChangedCallback(IBaseCameraChangedCallback iBaseCameraChangedCallback, ){
    
    _setBaseCameraChangedCallback(reference.pointer, _id_setBaseCameraChangedCallback as _$jni.JMethodIDPtr, iBaseCameraChangedCallback.reference.pointer).check();
  }

  static final _id_setCameraLiveListener = _class.instanceMethodId(
    r'setCameraLiveListener',
    r'(Lcom/arashivision/camera/listener/ICameraLiveStateListener;Lcom/arashivision/onecamera/InfoUpdateListener;)V',
  );

  static final _setCameraLiveListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraLiveListener(com.arashivision.camera.listener.ICameraLiveStateListener iCameraLiveStateListener, com.arashivision.onecamera.InfoUpdateListener infoUpdateListener)`
  void setCameraLiveListener(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener, ){
    
    _setCameraLiveListener(reference.pointer, _id_setCameraLiveListener as _$jni.JMethodIDPtr, iCameraLiveStateListener.reference.pointer, infoUpdateListener.reference.pointer).check();
  }

  static final _id_init = _class.instanceMethodId(
    r'init',
    r'()V',
  );

  static final _init = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void init()`
  void init(){
    
    _init(reference.pointer, _id_init as _$jni.JMethodIDPtr).check();
  }

  static final _id_destroy = _class.instanceMethodId(
    r'destroy',
    r'()V',
  );

  static final _destroy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void destroy()`
  void destroy(){
    
    _destroy(reference.pointer, _id_destroy as _$jni.JMethodIDPtr).check();
  }

  static final _id_onCameraInfoNotify = _class.instanceMethodId(
    r'onCameraInfoNotify',
    r'(IILjava/lang/Object;)V',
  );

  static final _onCameraInfoNotify = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void onCameraInfoNotify(int i, int i1, java.lang.Object object)`
  void onCameraInfoNotify(int i, int i1, _$jni.JObject object, ){
    
    _onCameraInfoNotify(reference.pointer, _id_onCameraInfoNotify as _$jni.JMethodIDPtr, i, i1, object.reference.pointer).check();
  }

  static final _id_fetchCameraType = _class.instanceMethodId(
    r'fetchCameraType',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO;)V',
  );

  static final _fetchCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchCameraType(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOOO oooOOOO)`
  void fetchCameraType(ICameraController_OooOOOO oooOOOO, ){
    
    _fetchCameraType(reference.pointer, _id_fetchCameraType as _$jni.JMethodIDPtr, oooOOOO.reference.pointer).check();
  }

  static final _id_startSync = _class.instanceMethodId(
    r'startSync',
    r'()V',
  );

  static final _startSync = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSync()`
  void startSync(){
    
    _startSync(reference.pointer, _id_startSync as _$jni.JMethodIDPtr).check();
  }

  static final _id_setAuthorizationChecker = _class.instanceMethodId(
    r'setAuthorizationChecker',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;)V',
  );

  static final _setAuthorizationChecker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAuthorizationChecker(com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o oooO00o)`
  void setAuthorizationChecker(ICameraController_OooO00o oooO00o, ){
    
    _setAuthorizationChecker(reference.pointer, _id_setAuthorizationChecker as _$jni.JMethodIDPtr, oooO00o.reference.pointer).check();
  }

  static final _id_fetchAllOptions = _class.instanceMethodId(
    r'fetchAllOptions',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchAllOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchAllOptions(com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchAllOptions(ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchAllOptions(reference.pointer, _id_fetchAllOptions as _$jni.JMethodIDPtr, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchOptions = _class.instanceMethodId(
    r'fetchOptions',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchOptions(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchOptions(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchOptions(reference.pointer, _id_fetchOptions as _$jni.JMethodIDPtr, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchPhotoOptions = _class.instanceMethodId(
    r'fetchPhotoOptions',
    r'(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchPhotoOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchPhotoOptions(int i, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchPhotoOptions(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchPhotoOptions(reference.pointer, _id_fetchPhotoOptions as _$jni.JMethodIDPtr, i, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_setCheckActivationList = _class.instanceMethodId(
    r'setCheckActivationList',
    r'(Ljava/util/List;)V',
  );

  static final _setCheckActivationList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCheckActivationList(java.util.List list)`
  void setCheckActivationList(_$jni.JList<ICameraCheck> list, ){
    
    _setCheckActivationList(reference.pointer, _id_setCheckActivationList as _$jni.JMethodIDPtr, list.reference.pointer).check();
  }

  static final _id_startCameraCheck = _class.instanceMethodId(
    r'startCameraCheck',
    r'()V',
  );

  static final _startCameraCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startCameraCheck()`
  void startCameraCheck(){
    
    _startCameraCheck(reference.pointer, _id_startCameraCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_continueCameraCheck = _class.instanceMethodId(
    r'continueCameraCheck',
    r'()V',
  );

  static final _continueCameraCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void continueCameraCheck()`
  void continueCameraCheck(){
    
    _continueCameraCheck(reference.pointer, _id_continueCameraCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_syncCameraSensorMode = _class.instanceMethodId(
    r'syncCameraSensorMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;)V',
  );

  static final _syncCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void syncCameraSensorMode(com.arashivision.insta360.basecamera.camera.ICameraController$o0000Ooo o0000Ooo)`
  void syncCameraSensorMode(ICameraController_o0000Ooo o0000Ooo, ){
    
    _syncCameraSensorMode(reference.pointer, _id_syncCameraSensorMode as _$jni.JMethodIDPtr, o0000Ooo.reference.pointer).check();
  }

  static final _id_getCameraSensorMode = _class.instanceMethodId(
    r'getCameraSensorMode',
    r'()I',
  );

  static final _getCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraSensorMode()`
  int getCameraSensorMode(){
    
    return _getCameraSensorMode(reference.pointer, _id_getCameraSensorMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setCameraSensorMode = _class.instanceMethodId(
    r'setCameraSensorMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;)V',
  );

  static final _setCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSensorMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO0O o000OO0O)`
  void setCameraSensorMode(int i, ICameraController_o000OO0O o000OO0O, ){
    
    _setCameraSensorMode(reference.pointer, _id_setCameraSensorMode as _$jni.JMethodIDPtr, i, o000OO0O.reference.pointer).check();
  }

  static final _id_supportSwitchCameraSensorMode = _class.instanceMethodId(
    r'supportSwitchCameraSensorMode',
    r'()Z',
  );

  static final _supportSwitchCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportSwitchCameraSensorMode()`
  bool supportSwitchCameraSensorMode(){
    
    return _supportSwitchCameraSensorMode(reference.pointer, _id_supportSwitchCameraSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraSingleSensorMode = _class.instanceMethodId(
    r'isCameraSingleSensorMode',
    r'()Z',
  );

  static final _isCameraSingleSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraSingleSensorMode()`
  bool isCameraSingleSensorMode(){
    
    return _isCameraSingleSensorMode(reference.pointer, _id_isCameraSingleSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraPowerPanoMode = _class.instanceMethodId(
    r'isCameraPowerPanoMode',
    r'()Z',
  );

  static final _isCameraPowerPanoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraPowerPanoMode()`
  bool isCameraPowerPanoMode(){
    
    return _isCameraPowerPanoMode(reference.pointer, _id_isCameraPowerPanoMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_syncSingleSensorOptions = _class.instanceMethodId(
    r'syncSingleSensorOptions',
    r'(IILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000;)V',
  );

  static final _syncSingleSensorOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void syncSingleSensorOptions(int i, int i1, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0000 o0000)`
  void syncSingleSensorOptions(int i, int i1, _$jni.JList<_$jni.JString> list, ICameraController_o0000 o0000, ){
    
    _syncSingleSensorOptions(reference.pointer, _id_syncSingleSensorOptions as _$jni.JMethodIDPtr, i, i1, list.reference.pointer, o0000.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorResolutionId = _class.instanceMethodId(
    r'getCameraSingleSensorResolutionId',
    r'(I)I',
  );

  static final _getCameraSingleSensorResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorResolutionId(int i)`
  int getCameraSingleSensorResolutionId(int i, ){
    
    return _getCameraSingleSensorResolutionId(reference.pointer, _id_getCameraSingleSensorResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorResolution = _class.instanceMethodId(
    r'setCameraSingleSensorResolution',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorResolution(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorResolution(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorResolution(reference.pointer, _id_setCameraSingleSensorResolution as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorFlowstateEnable = _class.instanceMethodId(
    r'getCameraSingleSensorFlowstateEnable',
    r'(I)Z',
  );

  static final _getCameraSingleSensorFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCameraSingleSensorFlowstateEnable(int i)`
  bool getCameraSingleSensorFlowstateEnable(int i, ){
    
    return _getCameraSingleSensorFlowstateEnable(reference.pointer, _id_getCameraSingleSensorFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCameraSingleSensorFlowstate = _class.instanceMethodId(
    r'setCameraSingleSensorFlowstate',
    r'(IIZLcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorFlowstate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorFlowstate(int i, int i1, boolean z, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorFlowstate(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorFlowstate(reference.pointer, _id_setCameraSingleSensorFlowstate as _$jni.JMethodIDPtr, i, i1, z ? 1 : 0, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'getCameraSingleSensorDimensionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorDimensionType(int i)`
  int getCameraSingleSensorDimensionType(int i, ){
    
    return _getCameraSingleSensorDimensionType(reference.pointer, _id_getCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'setCameraSingleSensorDimensionType',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorDimensionType(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorDimensionType(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorDimensionType(reference.pointer, _id_setCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorVisionType = _class.instanceMethodId(
    r'getCameraSingleSensorVisionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorVisionType(int i)`
  int getCameraSingleSensorVisionType(int i, ){
    
    return _getCameraSingleSensorVisionType(reference.pointer, _id_getCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorVisionType = _class.instanceMethodId(
    r'setCameraSingleSensorVisionType',
    r'(III)V',
  );

  static final _setCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void setCameraSingleSensorVisionType(int i, int i1, int i2)`
  void setCameraSingleSensorVisionType(int i, int i1, int i2, ){
    
    _setCameraSingleSensorVisionType(reference.pointer, _id_setCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i, i1, i2).check();
  }

  static final _id_fetchCameraSingleSensorOptions = _class.instanceMethodId(
    r'fetchCameraSingleSensorOptions',
    r'([ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchCameraSingleSensorOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchCameraSingleSensorOptions(java.lang.Object[] is, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchCameraSingleSensorOptions(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchCameraSingleSensorOptions(reference.pointer, _id_fetchCameraSingleSensorOptions as _$jni.JMethodIDPtr, is$.reference.pointer, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_openPreviewStream = _class.instanceMethodId(
    r'openPreviewStream',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;ILcom/arashivision/onecamera/render/RenderMode;ZIZLjava/lang/String;Z)V',
  );

  static final _openPreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void openPreviewStream(com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution, com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution1, int i, com.arashivision.onecamera.render.RenderMode renderMode, boolean z, int i1, boolean z1, java.lang.String string, boolean z2)`
  void openPreviewStream(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2, ){
    
    _openPreviewStream(reference.pointer, _id_openPreviewStream as _$jni.JMethodIDPtr, streamResolution.reference.pointer, streamResolution1.reference.pointer, i, renderMode.reference.pointer, z ? 1 : 0, i1, z1 ? 1 : 0, string.reference.pointer, z2 ? 1 : 0).check();
  }

  static final _id_closePreviewStream = _class.instanceMethodId(
    r'closePreviewStream',
    r'()V',
  );

  static final _closePreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void closePreviewStream()`
  void closePreviewStream(){
    
    _closePreviewStream(reference.pointer, _id_closePreviewStream as _$jni.JMethodIDPtr).check();
  }

  static final _id_setPipeline = _class.instanceMethodId(
    r'setPipeline',
    r'(Lcom/arashivision/onestream/pipeline/ICameraPreviewPipeline;)V',
  );

  static final _setPipeline = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPipeline(com.arashivision.onestream.pipeline.ICameraPreviewPipeline iCameraPreviewPipeline)`
  void setPipeline(_$jni.JObject iCameraPreviewPipeline, ){
    
    _setPipeline(reference.pointer, _id_setPipeline as _$jni.JMethodIDPtr, iCameraPreviewPipeline.reference.pointer).check();
  }

  static final _id_setPreviewImageNotify = _class.instanceMethodId(
    r'setPreviewImageNotify',
    r'(Lcom/arashivision/camera/stream/PreviewImageNotify;Landroid/os/Handler;)V',
  );

  static final _setPreviewImageNotify = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewImageNotify(com.arashivision.camera.stream.PreviewImageNotify previewImageNotify, android.os.Handler handler)`
  void setPreviewImageNotify(_$jni.JObject previewImageNotify, _$jni.JObject handler, ){
    
    _setPreviewImageNotify(reference.pointer, _id_setPreviewImageNotify as _$jni.JMethodIDPtr, previewImageNotify.reference.pointer, handler.reference.pointer).check();
  }

  static final _id_forcePutPreviewImage = _class.instanceMethodId(
    r'forcePutPreviewImage',
    r'([Lcom/arashivision/onestream/ImageData;)V',
  );

  static final _forcePutPreviewImage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void forcePutPreviewImage(com.arashivision.onestream.ImageData[] imageDatas)`
  void forcePutPreviewImage(_$jni.JArray<_$jni.JObject> imageDatas, ){
    
    _forcePutPreviewImage(reference.pointer, _id_forcePutPreviewImage as _$jni.JMethodIDPtr, imageDatas.reference.pointer).check();
  }

  static final _id_isStreamProcessing = _class.instanceMethodId(
    r'isStreamProcessing',
    r'()Z',
  );

  static final _isStreamProcessing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStreamProcessing()`
  bool isStreamProcessing(){
    
    return _isStreamProcessing(reference.pointer, _id_isStreamProcessing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isH265StreamEncode = _class.instanceMethodId(
    r'isH265StreamEncode',
    r'()Z',
  );

  static final _isH265StreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isH265StreamEncode()`
  bool isH265StreamEncode(){
    
    return _isH265StreamEncode(reference.pointer, _id_isH265StreamEncode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStreamEncode = _class.instanceMethodId(
    r'setStreamEncode',
    r'(Z)V',
  );

  static final _setStreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setStreamEncode(boolean z)`
  void setStreamEncode(bool z, ){
    
    _setStreamEncode(reference.pointer, _id_setStreamEncode as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_requestStreamIframe = _class.instanceMethodId(
    r'requestStreamIframe',
    r'()V',
  );

  static final _requestStreamIframe = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void requestStreamIframe()`
  void requestStreamIframe(){
    
    _requestStreamIframe(reference.pointer, _id_requestStreamIframe as _$jni.JMethodIDPtr).check();
  }

  static final _id_getPreviewStats = _class.instanceMethodId(
    r'getPreviewStats',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
  );

  static final _getPreviewStats = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus getPreviewStats()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_PreviewStatus getPreviewStats(){
    
    return _getPreviewStats(reference.pointer, _id_getPreviewStats as _$jni.JMethodIDPtr).object(const $BaseCamera_PreviewStatus$Type());
  }

  static final _id_getCurFirstStreamResolution = _class.instanceMethodId(
    r'getCurFirstStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurFirstStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurFirstStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurFirstStreamResolution(){
    
    return _getCurFirstStreamResolution(reference.pointer, _id_getCurFirstStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurSecondStreamResolution = _class.instanceMethodId(
    r'getCurSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurSecondStreamResolution(){
    
    return _getCurSecondStreamResolution(reference.pointer, _id_getCurSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurRealCameraStreamResolution = _class.instanceMethodId(
    r'getCurRealCameraStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getCurRealCameraStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getCurRealCameraStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getCurRealCameraStreamResolution(){
    
    return _getCurRealCameraStreamResolution(reference.pointer, _id_getCurRealCameraStreamResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_getAudioCodec = _class.instanceMethodId(
    r'getAudioCodec',
    r'()I',
  );

  static final _getAudioCodec = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getAudioCodec()`
  int getAudioCodec(){
    
    return _getAudioCodec(reference.pointer, _id_getAudioCodec as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getPreviewNum = _class.instanceMethodId(
    r'getPreviewNum',
    r'()I',
  );

  static final _getPreviewNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPreviewNum()`
  int getPreviewNum(){
    
    return _getPreviewNum(reference.pointer, _id_getPreviewNum as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getRenderMode = _class.instanceMethodId(
    r'getRenderMode',
    r'()Lcom/arashivision/onecamera/render/RenderMode;',
  );

  static final _getRenderMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.render.RenderMode getRenderMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getRenderMode(){
    
    return _getRenderMode(reference.pointer, _id_getRenderMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getSecondStreamResolution = _class.instanceMethodId(
    r'getSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getSecondStreamResolution(){
    
    return _getSecondStreamResolution(reference.pointer, _id_getSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_startNormalCapture = _class.instanceMethodId(
    r'startNormalCapture',
    r'(I[BI)V',
  );

  static final _startNormalCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalCapture(int i, byte[] bs, int i1)`
  void startNormalCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNormalCapture(reference.pointer, _id_startNormalCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_startCaptureWhileRecording = _class.instanceMethodId(
    r'startCaptureWhileRecording',
    r'(I[BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;)V',
  );

  static final _startCaptureWhileRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startCaptureWhileRecording(int i, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooO oooO)`
  void startCaptureWhileRecording(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO, ){
    
    _startCaptureWhileRecording(reference.pointer, _id_startCaptureWhileRecording as _$jni.JMethodIDPtr, i, bs.reference.pointer, oooO.reference.pointer).check();
  }

  static final _id_isNormalCapturing = _class.instanceMethodId(
    r'isNormalCapturing',
    r'()Z',
  );

  static final _isNormalCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalCapturing()`
  bool isNormalCapturing(){
    
    return _isNormalCapturing(reference.pointer, _id_isNormalCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalPanoCapture = _class.instanceMethodId(
    r'startNormalPanoCapture',
    r'(II[BI)V',
  );

  static final _startNormalPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalPanoCapture(int i, int i1, byte[] bs, int i2)`
  void startNormalPanoCapture(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startNormalPanoCapture(reference.pointer, _id_startNormalPanoCapture as _$jni.JMethodIDPtr, i, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isNormalPanoCapturing = _class.instanceMethodId(
    r'isNormalPanoCapturing',
    r'()Z',
  );

  static final _isNormalPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalPanoCapturing()`
  bool isNormalPanoCapturing(){
    
    return _isNormalPanoCapturing(reference.pointer, _id_isNormalPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRCapture = _class.instanceMethodId(
    r'startHDRCapture',
    r'([II[BI)V',
  );

  static final _startHDRCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRCapture(int[] is, int i, byte[] bs, int i1)`
  void startHDRCapture(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startHDRCapture(reference.pointer, _id_startHDRCapture as _$jni.JMethodIDPtr, is$.reference.pointer, i, bs.reference.pointer, i1).check();
  }

  static final _id_isHDRCapturing = _class.instanceMethodId(
    r'isHDRCapturing',
    r'()Z',
  );

  static final _isHDRCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRCapturing()`
  bool isHDRCapturing(){
    
    return _isHDRCapturing(reference.pointer, _id_isHDRCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRPanoCapture = _class.instanceMethodId(
    r'startHDRPanoCapture',
    r'(I[II[BI)V',
  );

  static final _startHDRPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRPanoCapture(int i, int[] is, int i1, byte[] bs, int i2)`
  void startHDRPanoCapture(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startHDRPanoCapture(reference.pointer, _id_startHDRPanoCapture as _$jni.JMethodIDPtr, i, is$.reference.pointer, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isHDRPanoCapturing = _class.instanceMethodId(
    r'isHDRPanoCapturing',
    r'()Z',
  );

  static final _isHDRPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRPanoCapturing()`
  bool isHDRPanoCapturing(){
    
    return _isHDRPanoCapturing(reference.pointer, _id_isHDRPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNightScene = _class.instanceMethodId(
    r'startNightScene',
    r'(I[BI)V',
  );

  static final _startNightScene = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNightScene(int i, byte[] bs, int i1)`
  void startNightScene(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNightScene(reference.pointer, _id_startNightScene as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isNightSceneCapturing = _class.instanceMethodId(
    r'isNightSceneCapturing',
    r'()Z',
  );

  static final _isNightSceneCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNightSceneCapturing()`
  bool isNightSceneCapturing(){
    
    return _isNightSceneCapturing(reference.pointer, _id_isNightSceneCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalShooting = _class.instanceMethodId(
    r'startIntervalShooting',
    r'([B)V',
  );

  static final _startIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalShooting(byte[] bs)`
  void startIntervalShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalShooting(reference.pointer, _id_startIntervalShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalShooting = _class.instanceMethodId(
    r'stopIntervalShooting',
    r'()V',
  );

  static final _stopIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalShooting()`
  void stopIntervalShooting(){
    
    _stopIntervalShooting(reference.pointer, _id_stopIntervalShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalShooting = _class.instanceMethodId(
    r'isIntervalShooting',
    r'()Z',
  );

  static final _isIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalShooting()`
  bool isIntervalShooting(){
    
    return _isIntervalShooting(reference.pointer, _id_isIntervalShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStarLapseShooting = _class.instanceMethodId(
    r'startStarLapseShooting',
    r'([B)V',
  );

  static final _startStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startStarLapseShooting(byte[] bs)`
  void startStarLapseShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startStarLapseShooting(reference.pointer, _id_startStarLapseShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopStarLapseShooting = _class.instanceMethodId(
    r'stopStarLapseShooting',
    r'()V',
  );

  static final _stopStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopStarLapseShooting()`
  void stopStarLapseShooting(){
    
    _stopStarLapseShooting(reference.pointer, _id_stopStarLapseShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isStarLapseShooting = _class.instanceMethodId(
    r'isStarLapseShooting',
    r'()Z',
  );

  static final _isStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStarLapseShooting()`
  bool isStarLapseShooting(){
    
    return _isStarLapseShooting(reference.pointer, _id_isStarLapseShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBurstCapture = _class.instanceMethodId(
    r'startBurstCapture',
    r'(I[BI)V',
  );

  static final _startBurstCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startBurstCapture(int i, byte[] bs, int i1)`
  void startBurstCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startBurstCapture(reference.pointer, _id_startBurstCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isBurstCapturing = _class.instanceMethodId(
    r'isBurstCapturing',
    r'()Z',
  );

  static final _isBurstCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBurstCapturing()`
  bool isBurstCapturing(){
    
    return _isBurstCapturing(reference.pointer, _id_isBurstCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalRecord = _class.instanceMethodId(
    r'startNormalRecord',
    r'()V',
  );

  static final _startNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startNormalRecord()`
  void startNormalRecord(){
    
    _startNormalRecord(reference.pointer, _id_startNormalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopNormalRecord = _class.instanceMethodId(
    r'stopNormalRecord',
    r'([B)V',
  );

  static final _stopNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopNormalRecord(byte[] bs)`
  void stopNormalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopNormalRecord(reference.pointer, _id_stopNormalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isNormalRecording = _class.instanceMethodId(
    r'isNormalRecording',
    r'()Z',
  );

  static final _isNormalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalRecording()`
  bool isNormalRecording(){
    
    return _isNormalRecording(reference.pointer, _id_isNormalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSuperRecord = _class.instanceMethodId(
    r'startSuperRecord',
    r'()V',
  );

  static final _startSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSuperRecord()`
  void startSuperRecord(){
    
    _startSuperRecord(reference.pointer, _id_startSuperRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSuperRecord = _class.instanceMethodId(
    r'stopSuperRecord',
    r'([B)V',
  );

  static final _stopSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSuperRecord(byte[] bs)`
  void stopSuperRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSuperRecord(reference.pointer, _id_stopSuperRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSuperRecording = _class.instanceMethodId(
    r'isSuperRecording',
    r'()Z',
  );

  static final _isSuperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSuperRecording()`
  bool isSuperRecording(){
    
    return _isSuperRecording(reference.pointer, _id_isSuperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRRecord = _class.instanceMethodId(
    r'startHDRRecord',
    r'()V',
  );

  static final _startHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startHDRRecord()`
  void startHDRRecord(){
    
    _startHDRRecord(reference.pointer, _id_startHDRRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopHDRRecord = _class.instanceMethodId(
    r'stopHDRRecord',
    r'([B)V',
  );

  static final _stopHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopHDRRecord(byte[] bs)`
  void stopHDRRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopHDRRecord(reference.pointer, _id_stopHDRRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isHDRRecording = _class.instanceMethodId(
    r'isHDRRecording',
    r'()Z',
  );

  static final _isHDRRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRRecording()`
  bool isHDRRecording(){
    
    return _isHDRRecording(reference.pointer, _id_isHDRRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBulletTime = _class.instanceMethodId(
    r'startBulletTime',
    r'()V',
  );

  static final _startBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startBulletTime()`
  void startBulletTime(){
    
    _startBulletTime(reference.pointer, _id_startBulletTime as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopBulletTime = _class.instanceMethodId(
    r'stopBulletTime',
    r'([B)V',
  );

  static final _stopBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopBulletTime(byte[] bs)`
  void stopBulletTime(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopBulletTime(reference.pointer, _id_stopBulletTime as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isBulletTimeRecording = _class.instanceMethodId(
    r'isBulletTimeRecording',
    r'()Z',
  );

  static final _isBulletTimeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBulletTimeRecording()`
  bool isBulletTimeRecording(){
    
    return _isBulletTimeRecording(reference.pointer, _id_isBulletTimeRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimeShift = _class.instanceMethodId(
    r'startTimeShift',
    r'()V',
  );

  static final _startTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimeShift()`
  void startTimeShift(){
    
    _startTimeShift(reference.pointer, _id_startTimeShift as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimeShift = _class.instanceMethodId(
    r'stopTimeShift',
    r'([B)V',
  );

  static final _stopTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimeShift(byte[] bs)`
  void stopTimeShift(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimeShift(reference.pointer, _id_stopTimeShift as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimeShiftRecording = _class.instanceMethodId(
    r'isTimeShiftRecording',
    r'()Z',
  );

  static final _isTimeShiftRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimeShiftRecording()`
  bool isTimeShiftRecording(){
    
    return _isTimeShiftRecording(reference.pointer, _id_isTimeShiftRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startLooperRecording = _class.instanceMethodId(
    r'startLooperRecording',
    r'()V',
  );

  static final _startLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startLooperRecording()`
  void startLooperRecording(){
    
    _startLooperRecording(reference.pointer, _id_startLooperRecording as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopLooperRecording = _class.instanceMethodId(
    r'stopLooperRecording',
    r'([B)V',
  );

  static final _stopLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopLooperRecording(byte[] bs)`
  void stopLooperRecording(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopLooperRecording(reference.pointer, _id_stopLooperRecording as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isLooperRecording = _class.instanceMethodId(
    r'isLooperRecording',
    r'()Z',
  );

  static final _isLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLooperRecording()`
  bool isLooperRecording(){
    
    return _isLooperRecording(reference.pointer, _id_isLooperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startFpvRecord = _class.instanceMethodId(
    r'startFpvRecord',
    r'()V',
  );

  static final _startFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFpvRecord()`
  void startFpvRecord(){
    
    _startFpvRecord(reference.pointer, _id_startFpvRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopFpvRecord = _class.instanceMethodId(
    r'stopFpvRecord',
    r'([B)V',
  );

  static final _stopFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFpvRecord(byte[] bs)`
  void stopFpvRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopFpvRecord(reference.pointer, _id_stopFpvRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isFpvRecording = _class.instanceMethodId(
    r'isFpvRecording',
    r'()Z',
  );

  static final _isFpvRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFpvRecording()`
  bool isFpvRecording(){
    
    return _isFpvRecording(reference.pointer, _id_isFpvRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startMovieRecord = _class.instanceMethodId(
    r'startMovieRecord',
    r'()V',
  );

  static final _startMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startMovieRecord()`
  void startMovieRecord(){
    
    _startMovieRecord(reference.pointer, _id_startMovieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopMovieRecord = _class.instanceMethodId(
    r'stopMovieRecord',
    r'([B)V',
  );

  static final _stopMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopMovieRecord(byte[] bs)`
  void stopMovieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopMovieRecord(reference.pointer, _id_stopMovieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isMovieRecording = _class.instanceMethodId(
    r'isMovieRecording',
    r'()Z',
  );

  static final _isMovieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMovieRecording()`
  bool isMovieRecording(){
    
    return _isMovieRecording(reference.pointer, _id_isMovieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSlowMotionRecord = _class.instanceMethodId(
    r'startSlowMotionRecord',
    r'()V',
  );

  static final _startSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSlowMotionRecord()`
  void startSlowMotionRecord(){
    
    _startSlowMotionRecord(reference.pointer, _id_startSlowMotionRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSlowMotionRecord = _class.instanceMethodId(
    r'stopSlowMotionRecord',
    r'([B)V',
  );

  static final _stopSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSlowMotionRecord(byte[] bs)`
  void stopSlowMotionRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSlowMotionRecord(reference.pointer, _id_stopSlowMotionRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSlowMotionRecording = _class.instanceMethodId(
    r'isSlowMotionRecording',
    r'()Z',
  );

  static final _isSlowMotionRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSlowMotionRecording()`
  bool isSlowMotionRecording(){
    
    return _isSlowMotionRecording(reference.pointer, _id_isSlowMotionRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSelfieRecord = _class.instanceMethodId(
    r'startSelfieRecord',
    r'()V',
  );

  static final _startSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSelfieRecord()`
  void startSelfieRecord(){
    
    _startSelfieRecord(reference.pointer, _id_startSelfieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSelfieRecord = _class.instanceMethodId(
    r'stopSelfieRecord',
    r'([B)V',
  );

  static final _stopSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSelfieRecord(byte[] bs)`
  void stopSelfieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSelfieRecord(reference.pointer, _id_stopSelfieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSelfieRecording = _class.instanceMethodId(
    r'isSelfieRecording',
    r'()Z',
  );

  static final _isSelfieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfieRecording()`
  bool isSelfieRecording(){
    
    return _isSelfieRecording(reference.pointer, _id_isSelfieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startPureRecord = _class.instanceMethodId(
    r'startPureRecord',
    r'()V',
  );

  static final _startPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startPureRecord()`
  void startPureRecord(){
    
    _startPureRecord(reference.pointer, _id_startPureRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopPureRecord = _class.instanceMethodId(
    r'stopPureRecord',
    r'([B)V',
  );

  static final _stopPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopPureRecord(byte[] bs)`
  void stopPureRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopPureRecord(reference.pointer, _id_stopPureRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isPureRecording = _class.instanceMethodId(
    r'isPureRecording',
    r'()Z',
  );

  static final _isPureRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPureRecording()`
  bool isPureRecording(){
    
    return _isPureRecording(reference.pointer, _id_isPureRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalRecord = _class.instanceMethodId(
    r'startIntervalRecord',
    r'([B)V',
  );

  static final _startIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalRecord(byte[] bs)`
  void startIntervalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalRecord(reference.pointer, _id_startIntervalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalRecord = _class.instanceMethodId(
    r'stopIntervalRecord',
    r'()V',
  );

  static final _stopIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalRecord()`
  void stopIntervalRecord(){
    
    _stopIntervalRecord(reference.pointer, _id_stopIntervalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalRecording = _class.instanceMethodId(
    r'isIntervalRecording',
    r'()Z',
  );

  static final _isIntervalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalRecording()`
  bool isIntervalRecording(){
    
    return _isIntervalRecording(reference.pointer, _id_isIntervalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimelapse = _class.instanceMethodId(
    r'startTimelapse',
    r'()V',
  );

  static final _startTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimelapse()`
  void startTimelapse(){
    
    _startTimelapse(reference.pointer, _id_startTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimelapse = _class.instanceMethodId(
    r'stopTimelapse',
    r'([B)V',
  );

  static final _stopTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimelapse(byte[] bs)`
  void stopTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimelapse(reference.pointer, _id_stopTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimelapseRecording = _class.instanceMethodId(
    r'isTimelapseRecording',
    r'()Z',
  );

  static final _isTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimelapseRecording()`
  bool isTimelapseRecording(){
    
    return _isTimelapseRecording(reference.pointer, _id_isTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStaticTimelapse = _class.instanceMethodId(
    r'startStaticTimelapse',
    r'()V',
  );

  static final _startStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startStaticTimelapse()`
  void startStaticTimelapse(){
    
    _startStaticTimelapse(reference.pointer, _id_startStaticTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopStaticTimelapse = _class.instanceMethodId(
    r'stopStaticTimelapse',
    r'([B)V',
  );

  static final _stopStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopStaticTimelapse(byte[] bs)`
  void stopStaticTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopStaticTimelapse(reference.pointer, _id_stopStaticTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isStaticTimelapseRecording = _class.instanceMethodId(
    r'isStaticTimelapseRecording',
    r'()Z',
  );

  static final _isStaticTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStaticTimelapseRecording()`
  bool isStaticTimelapseRecording(){
    
    return _isStaticTimelapseRecording(reference.pointer, _id_isStaticTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_pauseRecord = _class.instanceMethodId(
    r'pauseRecord',
    r'()V',
  );

  static final _pauseRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void pauseRecord()`
  void pauseRecord(){
    
    _pauseRecord(reference.pointer, _id_pauseRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_startLive = _class.instanceMethodId(
    r'startLive',
    r'(IIIILjava/lang/String;IJZZ)V',
  );

  static final _startLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int64, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, int, _$jni.Pointer<_$jni.Void>, int, int, int, int)>();
  /// from: `public void startLive(int i, int i1, int i2, int i3, java.lang.String string, int i4, long j, boolean z, boolean z1)`
  void startLive(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1, ){
    
    _startLive(reference.pointer, _id_startLive as _$jni.JMethodIDPtr, i, i1, i2, i3, string.reference.pointer, i4, j, z ? 1 : 0, z1 ? 1 : 0).check();
  }

  static final _id_stopLive = _class.instanceMethodId(
    r'stopLive',
    r'()V',
  );

  static final _stopLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopLive()`
  void stopLive(){
    
    _stopLive(reference.pointer, _id_stopLive as _$jni.JMethodIDPtr).check();
  }

  static final _id_resetRecord = _class.instanceMethodId(
    r'resetRecord',
    r'()V',
  );

  static final _resetRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void resetRecord()`
  void resetRecord(){
    
    _resetRecord(reference.pointer, _id_resetRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_getBatteryLevel = _class.instanceMethodId(
    r'getBatteryLevel',
    r'()I',
  );

  static final _getBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryLevel()`
  int getBatteryLevel(){
    
    return _getBatteryLevel(reference.pointer, _id_getBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isCharging = _class.instanceMethodId(
    r'isCharging',
    r'()Z',
  );

  static final _isCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCharging()`
  bool isCharging(){
    
    return _isCharging(reference.pointer, _id_isCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getBatteryType = _class.instanceMethodId(
    r'getBatteryType',
    r'()I',
  );

  static final _getBatteryType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryType()`
  int getBatteryType(){
    
    return _getBatteryType(reference.pointer, _id_getBatteryType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxConnected = _class.instanceMethodId(
    r'isChargeBoxConnected',
    r'()Z',
  );

  static final _isChargeBoxConnected = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnected()`
  bool isChargeBoxConnected(){
    
    return _isChargeBoxConnected(reference.pointer, _id_isChargeBoxConnected as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxUsbConnectedState = _class.instanceMethodId(
    r'getChargeBoxUsbConnectedState',
    r'()I',
  );

  static final _getChargeBoxUsbConnectedState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxUsbConnectedState()`
  int getChargeBoxUsbConnectedState(){
    
    return _getChargeBoxUsbConnectedState(reference.pointer, _id_getChargeBoxUsbConnectedState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxConnectedWhenCaptureStart = _class.instanceMethodId(
    r'isChargeBoxConnectedWhenCaptureStart',
    r'()Z',
  );

  static final _isChargeBoxConnectedWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnectedWhenCaptureStart()`
  bool isChargeBoxConnectedWhenCaptureStart(){
    
    return _isChargeBoxConnectedWhenCaptureStart(reference.pointer, _id_isChargeBoxConnectedWhenCaptureStart as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxBatteryLevel = _class.instanceMethodId(
    r'getChargeBoxBatteryLevel',
    r'()I',
  );

  static final _getChargeBoxBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxBatteryLevel()`
  int getChargeBoxBatteryLevel(){
    
    return _getChargeBoxBatteryLevel(reference.pointer, _id_getChargeBoxBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxCharging = _class.instanceMethodId(
    r'isChargeBoxCharging',
    r'()Z',
  );

  static final _isChargeBoxCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxCharging()`
  bool isChargeBoxCharging(){
    
    return _isChargeBoxCharging(reference.pointer, _id_isChargeBoxCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_calibrateGyro = _class.instanceMethodId(
    r'calibrateGyro',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;)V',
  );

  static final _calibrateGyro = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void calibrateGyro(com.arashivision.insta360.basecamera.camera.ICameraController$ICalibrateGyroCallback iCalibrateGyroCallback)`
  void calibrateGyro(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback, ){
    
    _calibrateGyro(reference.pointer, _id_calibrateGyro as _$jni.JMethodIDPtr, iCalibrateGyroCallback.reference.pointer).check();
  }

  static final _id_setBleRemoteControllerListener = _class.instanceMethodId(
    r'setBleRemoteControllerListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;)V',
  );

  static final _setBleRemoteControllerListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteControllerListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO oooO0OO)`
  void setBleRemoteControllerListener(ICameraController_OooO0OO oooO0OO, ){
    
    _setBleRemoteControllerListener(reference.pointer, _id_setBleRemoteControllerListener as _$jni.JMethodIDPtr, oooO0OO.reference.pointer).check();
  }

  static final _id_scanBleRemoteController = _class.instanceMethodId(
    r'scanBleRemoteController',
    r'()V',
  );

  static final _scanBleRemoteController = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void scanBleRemoteController()`
  void scanBleRemoteController(){
    
    _scanBleRemoteController(reference.pointer, _id_scanBleRemoteController as _$jni.JMethodIDPtr).check();
  }

  static final _id_connectBleRemoteControl = _class.instanceMethodId(
    r'connectBleRemoteControl',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _connectBleRemoteControl = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void connectBleRemoteControl(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void connectBleRemoteControl(_$jni.JObject bTPeripheral, ){
    
    _connectBleRemoteControl(reference.pointer, _id_connectBleRemoteControl as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_disconnectBle = _class.instanceMethodId(
    r'disconnectBle',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _disconnectBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disconnectBle(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void disconnectBle(_$jni.JObject bTPeripheral, ){
    
    _disconnectBle(reference.pointer, _id_disconnectBle as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_getBleRemoteVersion = _class.instanceMethodId(
    r'getBleRemoteVersion',
    r'()Ljava/lang/String;',
  );

  static final _getBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getBleRemoteVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getBleRemoteVersion(){
    
    return _getBleRemoteVersion(reference.pointer, _id_getBleRemoteVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setBleRemoteVersion = _class.instanceMethodId(
    r'setBleRemoteVersion',
    r'(Ljava/lang/String;)V',
  );

  static final _setBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteVersion(java.lang.String string)`
  void setBleRemoteVersion(_$jni.JString string, ){
    
    _setBleRemoteVersion(reference.pointer, _id_setBleRemoteVersion as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getBleRemoteType = _class.instanceMethodId(
    r'getBleRemoteType',
    r'()I',
  );

  static final _getBleRemoteType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBleRemoteType()`
  int getBleRemoteType(){
    
    return _getBleRemoteType(reference.pointer, _id_getBleRemoteType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageCardState = _class.instanceMethodId(
    r'getStorageCardState',
    r'()I',
  );

  static final _getStorageCardState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardState()`
  int getStorageCardState(){
    
    return _getStorageCardState(reference.pointer, _id_getStorageCardState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageCardLocation = _class.instanceMethodId(
    r'getStorageCardLocation',
    r'()I',
  );

  static final _getStorageCardLocation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardLocation()`
  int getStorageCardLocation(){
    
    return _getStorageCardLocation(reference.pointer, _id_getStorageCardLocation as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageTotalSpace = _class.instanceMethodId(
    r'getStorageTotalSpace',
    r'()J',
  );

  static final _getStorageTotalSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageTotalSpace()`
  int getStorageTotalSpace(){
    
    return _getStorageTotalSpace(reference.pointer, _id_getStorageTotalSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_getStorageFreeSpace = _class.instanceMethodId(
    r'getStorageFreeSpace',
    r'()J',
  );

  static final _getStorageFreeSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageFreeSpace()`
  int getStorageFreeSpace(){
    
    return _getStorageFreeSpace(reference.pointer, _id_getStorageFreeSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_formatStorage = _class.instanceMethodId(
    r'formatStorage',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;)V',
  );

  static final _formatStorage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void formatStorage(com.arashivision.insta360.basecamera.camera.ICameraController$o00000O o00000O)`
  void formatStorage(ICameraController_o00000O o00000O, ){
    
    _formatStorage(reference.pointer, _id_formatStorage as _$jni.JMethodIDPtr, o00000O.reference.pointer).check();
  }

  static final _id_setAccessCameraFileState = _class.instanceMethodId(
    r'setAccessCameraFileState',
    r'(I)V',
  );

  static final _setAccessCameraFileState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAccessCameraFileState(int i)`
  void setAccessCameraFileState(int i, ){
    
    _setAccessCameraFileState(reference.pointer, _id_setAccessCameraFileState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getCameraFile = _class.instanceMethodId(
    r'getCameraFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _getCameraFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getCameraFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void getCameraFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _getCameraFile(reference.pointer, _id_getCameraFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_packLogFile = _class.instanceMethodId(
    r'packLogFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _packLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void packLogFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void packLogFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _packLogFile(reference.pointer, _id_packLogFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_setLogFileTransferState = _class.instanceMethodId(
    r'setLogFileTransferState',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;)V',
  );

  static final _setLogFileTransferState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLogFileTransferState(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo0 o000OOo0)`
  void setLogFileTransferState(int i, int i1, ICameraController_o000OOo0 o000OOo0, ){
    
    _setLogFileTransferState(reference.pointer, _id_setLogFileTransferState as _$jni.JMethodIDPtr, i, i1, o000OOo0.reference.pointer).check();
  }

  static final _id_deleteLogFile = _class.instanceMethodId(
    r'deleteLogFile',
    r'(I)V',
  );

  static final _deleteLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void deleteLogFile(int i)`
  void deleteLogFile(int i, ){
    
    _deleteLogFile(reference.pointer, _id_deleteLogFile as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFileList = _class.instanceMethodId(
    r'getFileList',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileList(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileList(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileList(reference.pointer, _id_getFileList as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileListIncludeRecording = _class.instanceMethodId(
    r'getFileListIncludeRecording',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileListIncludeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileListIncludeRecording(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileListIncludeRecording(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileListIncludeRecording(reference.pointer, _id_getFileListIncludeRecording as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileInfoList = _class.instanceMethodId(
    r'getFileInfoList',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;)V',
  );

  static final _getFileInfoList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileInfoList(com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0O o0000O0O)`
  void getFileInfoList(ICameraController_o0000O0O o0000O0O, ){
    
    _getFileInfoList(reference.pointer, _id_getFileInfoList as _$jni.JMethodIDPtr, o0000O0O.reference.pointer).check();
  }

  static final _id_deleteFileList = _class.instanceMethodId(
    r'deleteFileList',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;Ljava/util/List;)V',
  );

  static final _deleteFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void deleteFileList(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO0 oooOOO0, java.util.List list)`
  void deleteFileList(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list, ){
    
    _deleteFileList(reference.pointer, _id_deleteFileList as _$jni.JMethodIDPtr, oooOOO0.reference.pointer, list.reference.pointer).check();
  }

  static final _id_getFileGps = _class.instanceMethodId(
    r'getFileGps',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGps(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGps(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGps(reference.pointer, _id_getFileGps as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnail = _class.instanceMethodId(
    r'getFileThumbnail',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnail(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnail(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnail(reference.pointer, _id_getFileThumbnail as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnailExt = _class.instanceMethodId(
    r'getFileThumbnailExt',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnailExt = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnailExt(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnailExt(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnailExt(reference.pointer, _id_getFileThumbnailExt as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExposureTimeData = _class.instanceMethodId(
    r'getFileExposureTimeData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExposureTimeData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExposureTimeData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExposureTimeData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExposureTimeData(reference.pointer, _id_getFileExposureTimeData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileGyroData = _class.instanceMethodId(
    r'getFileGyroData',
    r'(Ljava/lang/String;JJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGyroData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int64, _$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGyroData(java.lang.String string, long j, long j1, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGyroData(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGyroData(reference.pointer, _id_getFileGyroData as _$jni.JMethodIDPtr, string.reference.pointer, j, j1, o0000O0.reference.pointer).check();
  }

  static final _id_getFileTimelapseTimestamp = _class.instanceMethodId(
    r'getFileTimelapseTimestamp',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileTimelapseTimestamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileTimelapseTimestamp(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileTimelapseTimestamp(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileTimelapseTimestamp(reference.pointer, _id_getFileTimelapseTimestamp as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraMetaData = _class.instanceMethodId(
    r'getFileExtraMetaData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraMetaData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraMetaData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraMetaData(reference.pointer, _id_getFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraHighlight = _class.instanceMethodId(
    r'getFileExtraHighlight',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraHighlight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraHighlight(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraHighlight(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraHighlight(reference.pointer, _id_getFileExtraHighlight as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraAutoEditor = _class.instanceMethodId(
    r'getFileExtraAutoEditor',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraAutoEditor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraAutoEditor(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraAutoEditor(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraAutoEditor(reference.pointer, _id_getFileExtraAutoEditor as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_setFileExtraMetaData = _class.instanceMethodId(
    r'setFileExtraMetaData',
    r'(Ljava/lang/String;[BLcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;)V',
  );

  static final _setFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFileExtraMetaData(java.lang.String string, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO00 o000OO00)`
  void setFileExtraMetaData(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00, ){
    
    _setFileExtraMetaData(reference.pointer, _id_setFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, bs.reference.pointer, o000OO00.reference.pointer).check();
  }

  static final _id_cancelAuthorization = _class.instanceMethodId(
    r'cancelAuthorization',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelAuthorization(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelAuthorization(ICameraController_OooO0o oooO0o, ){
    
    _cancelAuthorization(reference.pointer, _id_cancelAuthorization as _$jni.JMethodIDPtr, oooO0o.reference.pointer).check();
  }

  static final _id_requestAuthorization = _class.instanceMethodId(
    r'requestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;)V',
  );

  static final _requestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void requestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0 o000O0)`
  void requestAuthorization(int i, ICameraController_o000O0 o000O0, ){
    
    _requestAuthorization(reference.pointer, _id_requestAuthorization as _$jni.JMethodIDPtr, i, o000O0.reference.pointer).check();
  }

  static final _id_cancelRequestAuthorization = _class.instanceMethodId(
    r'cancelRequestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelRequestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelRequestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelRequestAuthorization(int i, ICameraController_OooO0o oooO0o, ){
    
    _cancelRequestAuthorization(reference.pointer, _id_cancelRequestAuthorization as _$jni.JMethodIDPtr, i, oooO0o.reference.pointer).check();
  }

  static final _id_setGpsData = _class.instanceMethodId(
    r'setGpsData',
    r'([B)V',
  );

  static final _setGpsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGpsData(byte[] bs)`
  void setGpsData(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _setGpsData(reference.pointer, _id_setGpsData as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_setKeyTimePoint = _class.instanceMethodId(
    r'setKeyTimePoint',
    r'(JILjava/lang/String;)V',
  );

  static final _setKeyTimePoint = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setKeyTimePoint(long j, int i, java.lang.String string)`
  void setKeyTimePoint(int j, int i, _$jni.JString string, ){
    
    _setKeyTimePoint(reference.pointer, _id_setKeyTimePoint as _$jni.JMethodIDPtr, j, i, string.reference.pointer).check();
  }

  static final _id_getSerial = _class.instanceMethodId(
    r'getSerial',
    r'()Ljava/lang/String;',
  );

  static final _getSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getSerial(){
    
    return _getSerial(reference.pointer, _id_getSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setSerial = _class.instanceMethodId(
    r'setSerial',
    r'(Ljava/lang/String;)V',
  );

  static final _setSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSerial(java.lang.String string)`
  void setSerial(_$jni.JString string, ){
    
    _setSerial(reference.pointer, _id_setSerial as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getUUID = _class.instanceMethodId(
    r'getUUID',
    r'()Ljava/lang/String;',
  );

  static final _getUUID = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getUUID()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getUUID(){
    
    return _getUUID(reference.pointer, _id_getUUID as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor0Serial = _class.instanceMethodId(
    r'getVR360Senor0Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor0Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor0Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor0Serial(){
    
    return _getVR360Senor0Serial(reference.pointer, _id_getVR360Senor0Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor1Serial = _class.instanceMethodId(
    r'getVR360Senor1Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor1Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor1Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor1Serial(){
    
    return _getVR360Senor1Serial(reference.pointer, _id_getVR360Senor1Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR180SenorSerial = _class.instanceMethodId(
    r'getVR180SenorSerial',
    r'()Ljava/lang/String;',
  );

  static final _getVR180SenorSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR180SenorSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR180SenorSerial(){
    
    return _getVR180SenorSerial(reference.pointer, _id_getVR180SenorSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getSensorSerials = _class.instanceMethodId(
    r'getSensorSerials',
    r'()[Ljava/lang/String;',
  );

  static final _getSensorSerials = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String[] getSensorSerials()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> getSensorSerials(){
    
    return _getSensorSerials(reference.pointer, _id_getSensorSerials as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getFWVersion = _class.instanceMethodId(
    r'getFWVersion',
    r'()Ljava/lang/String;',
  );

  static final _getFWVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFWVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFWVersion(){
    
    return _getFWVersion(reference.pointer, _id_getFWVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFwVersion = _class.instanceMethodId(
    r'getCameraFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFwVersion(){
    
    return _getCameraFwVersion(reference.pointer, _id_getCameraFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraBleVersion = _class.instanceMethodId(
    r'getCameraBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraBleVersion(){
    
    return _getCameraBleVersion(reference.pointer, _id_getCameraBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxFwVersion = _class.instanceMethodId(
    r'getChargeBoxFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxFwVersion(){
    
    return _getChargeBoxFwVersion(reference.pointer, _id_getChargeBoxFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxBleVersion = _class.instanceMethodId(
    r'getChargeBoxBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxBleVersion(){
    
    return _getChargeBoxBleVersion(reference.pointer, _id_getChargeBoxBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffset = _class.instanceMethodId(
    r'setMediaOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setMediaOffset(java.lang.String string)`
  void setMediaOffset(_$jni.JString string, ){
    
    _setMediaOffset(reference.pointer, _id_setMediaOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getMediaOffset = _class.instanceMethodId(
    r'getMediaOffset',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffset(){
    
    return _getMediaOffset(reference.pointer, _id_getMediaOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV2 = _class.instanceMethodId(
    r'getMediaOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV2(){
    
    return _getMediaOffsetV2(reference.pointer, _id_getMediaOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV3 = _class.instanceMethodId(
    r'getMediaOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV3(){
    
    return _getMediaOffsetV3(reference.pointer, _id_getMediaOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setOriginalOffset = _class.instanceMethodId(
    r'setOriginalOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setOriginalOffset(java.lang.String string)`
  void setOriginalOffset(_$jni.JString string, ){
    
    _setOriginalOffset(reference.pointer, _id_setOriginalOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getOriginalOffset = _class.instanceMethodId(
    r'getOriginalOffset',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffset(){
    
    return _getOriginalOffset(reference.pointer, _id_getOriginalOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV2 = _class.instanceMethodId(
    r'getOriginalOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV2(){
    
    return _getOriginalOffsetV2(reference.pointer, _id_getOriginalOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV3 = _class.instanceMethodId(
    r'getOriginalOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV3(){
    
    return _getOriginalOffsetV3(reference.pointer, _id_getOriginalOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setAllOffset = _class.instanceMethodId(
    r'setAllOffset',
    r'(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V',
  );

  static final _setAllOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAllOffset(java.lang.String string, java.lang.String string1, java.lang.String string2, java.lang.String string3, java.lang.String string4, java.lang.String string5)`
  void setAllOffset(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5, ){
    
    _setAllOffset(reference.pointer, _id_setAllOffset as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, string2.reference.pointer, string3.reference.pointer, string4.reference.pointer, string5.reference.pointer).check();
  }

  static final _id_getOffsetState = _class.instanceMethodId(
    r'getOffsetState',
    r'()I',
  );

  static final _getOffsetState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getOffsetState()`
  int getOffsetState(){
    
    return _getOffsetState(reference.pointer, _id_getOffsetState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setLocalTime = _class.instanceMethodId(
    r'setLocalTime',
    r'(JLjava/util/TimeZone;)V',
  );

  static final _setLocalTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLocalTime(long j, java.util.TimeZone timeZone)`
  void setLocalTime(int j, _$jni.JObject timeZone, ){
    
    _setLocalTime(reference.pointer, _id_setLocalTime as _$jni.JMethodIDPtr, j, timeZone.reference.pointer).check();
  }

  static final _id_getActiveTime = _class.instanceMethodId(
    r'getActiveTime',
    r'()J',
  );

  static final _getActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getActiveTime()`
  int getActiveTime(){
    
    return _getActiveTime(reference.pointer, _id_getActiveTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_setActiveTime = _class.instanceMethodId(
    r'setActiveTime',
    r'(JLcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setActiveTime(long j, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setActiveTime(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setActiveTime(reference.pointer, _id_setActiveTime as _$jni.JMethodIDPtr, j, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getVideoEncodeType = _class.instanceMethodId(
    r'getVideoEncodeType',
    r'()I',
  );

  static final _getVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoEncodeType()`
  int getVideoEncodeType(){
    
    return _getVideoEncodeType(reference.pointer, _id_getVideoEncodeType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setVideoEncodeType = _class.instanceMethodId(
    r'setVideoEncodeType',
    r'(I)V',
  );

  static final _setVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setVideoEncodeType(int i)`
  void setVideoEncodeType(int i, ){
    
    _setVideoEncodeType(reference.pointer, _id_setVideoEncodeType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isSelfie = _class.instanceMethodId(
    r'isSelfie',
    r'()Z',
  );

  static final _isSelfie = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfie()`
  bool isSelfie(){
    
    return _isSelfie(reference.pointer, _id_isSelfie as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraPosture = _class.instanceMethodId(
    r'getCameraPosture',
    r'()I',
  );

  static final _getCameraPosture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPosture()`
  int getCameraPosture(){
    
    return _getCameraPosture(reference.pointer, _id_getCameraPosture as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCameraPostureWhenCaptureStart = _class.instanceMethodId(
    r'getCameraPostureWhenCaptureStart',
    r'()I',
  );

  static final _getCameraPostureWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPostureWhenCaptureStart()`
  int getCameraPostureWhenCaptureStart(){
    
    return _getCameraPostureWhenCaptureStart(reference.pointer, _id_getCameraPostureWhenCaptureStart as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getBtWakeupSwState = _class.instanceMethodId(
    r'getBtWakeupSwState',
    r'()I',
  );

  static final _getBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtWakeupSwState()`
  int getBtWakeupSwState(){
    
    return _getBtWakeupSwState(reference.pointer, _id_getBtWakeupSwState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtWakeupSwState = _class.instanceMethodId(
    r'setBtWakeupSwState',
    r'(I)V',
  );

  static final _setBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtWakeupSwState(int i)`
  void setBtWakeupSwState(int i, ){
    
    _setBtWakeupSwState(reference.pointer, _id_setBtWakeupSwState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getGyroTimeStamp = _class.instanceMethodId(
    r'getGyroTimeStamp',
    r'()D',
  );

  static final _getGyroTimeStamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getGyroTimeStamp()`
  double getGyroTimeStamp(){
    
    return _getGyroTimeStamp(reference.pointer, _id_getGyroTimeStamp as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_getWindowCropInfo = _class.instanceMethodId(
    r'getWindowCropInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WindowCropInfo;',
  );

  static final _getWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WindowCropInfo getWindowCropInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWindowCropInfo(){
    
    return _getWindowCropInfo(reference.pointer, _id_getWindowCropInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getImageFlicker = _class.instanceMethodId(
    r'getImageFlicker',
    r'()I',
  );

  static final _getImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getImageFlicker()`
  int getImageFlicker(){
    
    return _getImageFlicker(reference.pointer, _id_getImageFlicker as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setImageFlicker = _class.instanceMethodId(
    r'setImageFlicker',
    r'(I)V',
  );

  static final _setImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setImageFlicker(int i)`
  void setImageFlicker(int i, ){
    
    _setImageFlicker(reference.pointer, _id_setImageFlicker as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_setAdoptionSystem = _class.instanceMethodId(
    r'setAdoptionSystem',
    r'(I)V',
  );

  static final _setAdoptionSystem = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAdoptionSystem(int i)`
  void setAdoptionSystem(int i, ){
    
    _setAdoptionSystem(reference.pointer, _id_setAdoptionSystem as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_setStandByMode = _class.instanceMethodId(
    r'setStandByMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;)V',
  );

  static final _setStandByMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setStandByMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000 o00O0000)`
  void setStandByMode(int i, ICameraController_o00O0000 o00O0000, ){
    
    _setStandByMode(reference.pointer, _id_setStandByMode as _$jni.JMethodIDPtr, i, o00O0000.reference.pointer).check();
  }

  static final _id_getQuickCaptureEnable = _class.instanceMethodId(
    r'getQuickCaptureEnable',
    r'()Z',
  );

  static final _getQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getQuickCaptureEnable()`
  bool getQuickCaptureEnable(){
    
    return _getQuickCaptureEnable(reference.pointer, _id_getQuickCaptureEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setQuickCaptureEnable = _class.instanceMethodId(
    r'setQuickCaptureEnable',
    r'(Z)V',
  );

  static final _setQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setQuickCaptureEnable(boolean z)`
  void setQuickCaptureEnable(bool z, ){
    
    _setQuickCaptureEnable(reference.pointer, _id_setQuickCaptureEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getBtnShutdownClickMode = _class.instanceMethodId(
    r'getBtnShutdownClickMode',
    r'()I',
  );

  static final _getBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownClickMode()`
  int getBtnShutdownClickMode(){
    
    return _getBtnShutdownClickMode(reference.pointer, _id_getBtnShutdownClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownClickMode = _class.instanceMethodId(
    r'setBtnShutdownClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownClickMode(int i)`
  void setBtnShutdownClickMode(int i, ){
    
    _setBtnShutdownClickMode(reference.pointer, _id_setBtnShutdownClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'getBtnShutdownDoubleClickMode',
    r'()I',
  );

  static final _getBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownDoubleClickMode()`
  int getBtnShutdownDoubleClickMode(){
    
    return _getBtnShutdownDoubleClickMode(reference.pointer, _id_getBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'setBtnShutdownDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownDoubleClickMode(int i)`
  void setBtnShutdownDoubleClickMode(int i, ){
    
    _setBtnShutdownDoubleClickMode(reference.pointer, _id_setBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'getBtnShutdownTripleClickMode',
    r'()I',
  );

  static final _getBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownTripleClickMode()`
  int getBtnShutdownTripleClickMode(){
    
    return _getBtnShutdownTripleClickMode(reference.pointer, _id_getBtnShutdownTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'setBtnShutdownTripleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownTripleClickMode(int i)`
  void setBtnShutdownTripleClickMode(int i, ){
    
    _setBtnShutdownTripleClickMode(reference.pointer, _id_setBtnShutdownTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownLongPressMode = _class.instanceMethodId(
    r'getBtnShutdownLongPressMode',
    r'()I',
  );

  static final _getBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownLongPressMode()`
  int getBtnShutdownLongPressMode(){
    
    return _getBtnShutdownLongPressMode(reference.pointer, _id_getBtnShutdownLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownLongPressMode = _class.instanceMethodId(
    r'setBtnShutdownLongPressMode',
    r'(I)V',
  );

  static final _setBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownLongPressMode(int i)`
  void setBtnShutdownLongPressMode(int i, ){
    
    _setBtnShutdownLongPressMode(reference.pointer, _id_setBtnShutdownLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnClickMode = _class.instanceMethodId(
    r'getBtnClickMode',
    r'()I',
  );

  static final _getBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnClickMode()`
  int getBtnClickMode(){
    
    return _getBtnClickMode(reference.pointer, _id_getBtnClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnClickMode = _class.instanceMethodId(
    r'setBtnClickMode',
    r'(I)V',
  );

  static final _setBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnClickMode(int i)`
  void setBtnClickMode(int i, ){
    
    _setBtnClickMode(reference.pointer, _id_setBtnClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnDoubleClickMode = _class.instanceMethodId(
    r'getBtnDoubleClickMode',
    r'()I',
  );

  static final _getBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnDoubleClickMode()`
  int getBtnDoubleClickMode(){
    
    return _getBtnDoubleClickMode(reference.pointer, _id_getBtnDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnDoubleClickMode = _class.instanceMethodId(
    r'setBtnDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnDoubleClickMode(int i)`
  void setBtnDoubleClickMode(int i, ){
    
    _setBtnDoubleClickMode(reference.pointer, _id_setBtnDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnTripleClickMode = _class.instanceMethodId(
    r'getBtnTripleClickMode',
    r'()I',
  );

  static final _getBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnTripleClickMode()`
  int getBtnTripleClickMode(){
    
    return _getBtnTripleClickMode(reference.pointer, _id_getBtnTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnTripleClickMode = _class.instanceMethodId(
    r'setBtnTripleClickMode',
    r'(I)V',
  );

  static final _setBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnTripleClickMode(int i)`
  void setBtnTripleClickMode(int i, ){
    
    _setBtnTripleClickMode(reference.pointer, _id_setBtnTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnLongPressMode = _class.instanceMethodId(
    r'getBtnLongPressMode',
    r'()I',
  );

  static final _getBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnLongPressMode()`
  int getBtnLongPressMode(){
    
    return _getBtnLongPressMode(reference.pointer, _id_getBtnLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnLongPressMode = _class.instanceMethodId(
    r'setBtnLongPressMode',
    r'(I)V',
  );

  static final _setBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnLongPressMode(int i)`
  void setBtnLongPressMode(int i, ){
    
    _setBtnLongPressMode(reference.pointer, _id_setBtnLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isMute = _class.instanceMethodId(
    r'isMute',
    r'()Z',
  );

  static final _isMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMute()`
  bool isMute(){
    
    return _isMute(reference.pointer, _id_isMute as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMute = _class.instanceMethodId(
    r'setMute',
    r'(Z)V',
  );

  static final _setMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMute(boolean z)`
  void setMute(bool z, ){
    
    _setMute(reference.pointer, _id_setMute as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_setAuthorizationID = _class.instanceMethodId(
    r'setAuthorizationID',
    r'(Ljava/lang/String;)V',
  );

  static final _setAuthorizationID = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAuthorizationID(java.lang.String string)`
  void setAuthorizationID(_$jni.JString string, ){
    
    _setAuthorizationID(reference.pointer, _id_setAuthorizationID as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getWifiInfo = _class.instanceMethodId(
    r'getWifiInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WifiInfo;',
  );

  static final _getWifiInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WifiInfo getWifiInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWifiInfo(){
    
    return _getWifiInfo(reference.pointer, _id_getWifiInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setWifiPwd = _class.instanceMethodId(
    r'setWifiPwd',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiPwd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiPwd(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiPwd(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiPwd(reference.pointer, _id_setWifiPwd as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getButtonFollowOptions = _class.instanceMethodId(
    r'getButtonFollowOptions',
    r'()Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;',
  );

  static final _getButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.ButtonFollowOptions getButtonFollowOptions()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getButtonFollowOptions(){
    
    return _getButtonFollowOptions(reference.pointer, _id_getButtonFollowOptions as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setButtonFollowOptions = _class.instanceMethodId(
    r'setButtonFollowOptions',
    r'(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setButtonFollowOptions(com.arashivision.onecamera.camerarequest.ButtonFollowOptions buttonFollowOptions, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setButtonFollowOptions(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setButtonFollowOptions(reference.pointer, _id_setButtonFollowOptions as _$jni.JMethodIDPtr, buttonFollowOptions.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getWifiChannelCountry = _class.instanceMethodId(
    r'getWifiChannelCountry',
    r'()Ljava/lang/String;',
  );

  static final _getWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getWifiChannelCountry()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getWifiChannelCountry(){
    
    return _getWifiChannelCountry(reference.pointer, _id_getWifiChannelCountry as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setWifiChannelCountry = _class.instanceMethodId(
    r'setWifiChannelCountry',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiChannelCountry(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiChannelCountry(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiChannelCountry(reference.pointer, _id_setWifiChannelCountry as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_setCameraLanguage = _class.instanceMethodId(
    r'setCameraLanguage',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;Lcom/arashivision/camera/RequestOptions;)V',
  );

  static final _setCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraLanguage(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback, com.arashivision.camera.RequestOptions requestOptions)`
  void setCameraLanguage(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions, ){
    
    _setCameraLanguage(reference.pointer, _id_setCameraLanguage as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer, requestOptions.reference.pointer).check();
  }

  static final _id_getCameraLanguage = _class.instanceMethodId(
    r'getCameraLanguage',
    r'()I',
  );

  static final _getCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraLanguage()`
  int getCameraLanguage(){
    
    return _getCameraLanguage(reference.pointer, _id_getCameraLanguage as _$jni.JMethodIDPtr).integer;
  }

  static final _id_openCameraWifi = _class.instanceMethodId(
    r'openCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;)V',
  );

  static final _openCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void openCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00O o000O00O)`
  void openCameraWifi(ICameraController_o000O00O o000O00O, ){
    
    _openCameraWifi(reference.pointer, _id_openCameraWifi as _$jni.JMethodIDPtr, o000O00O.reference.pointer).check();
  }

  static final _id_closeCameraWifi = _class.instanceMethodId(
    r'closeCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;)V',
  );

  static final _closeCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void closeCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0O oooOO0O)`
  void closeCameraWifi(ICameraController_OooOO0O oooOO0O, ){
    
    _closeCameraWifi(reference.pointer, _id_closeCameraWifi as _$jni.JMethodIDPtr, oooOO0O.reference.pointer).check();
  }

  static final _id_resetCameraWifi = _class.instanceMethodId(
    r'resetCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;)V',
  );

  static final _resetCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo o000O0Oo)`
  void resetCameraWifi(ICameraController_o000O0Oo o000O0Oo, ){
    
    _resetCameraWifi(reference.pointer, _id_resetCameraWifi as _$jni.JMethodIDPtr, o000O0Oo.reference.pointer).check();
  }

  static final _id_notifyOTAError = _class.instanceMethodId(
    r'notifyOTAError',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;)V',
  );

  static final _notifyOTAError = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void notifyOTAError(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00 o000O00)`
  void notifyOTAError(ICameraController_o000O00 o000O00, ){
    
    _notifyOTAError(reference.pointer, _id_notifyOTAError as _$jni.JMethodIDPtr, o000O00.reference.pointer).check();
  }

  static final _id_setCameraWifiSeizable = _class.instanceMethodId(
    r'setCameraWifiSeizable',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;)V',
  );

  static final _setCameraWifiSeizable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraWifiSeizable(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O o000O)`
  void setCameraWifiSeizable(int i, ICameraController_o000O o000O, ){
    
    _setCameraWifiSeizable(reference.pointer, _id_setCameraWifiSeizable as _$jni.JMethodIDPtr, i, o000O.reference.pointer).check();
  }

  static final _id_getVideoResolution = _class.instanceMethodId(
    r'getVideoResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getVideoResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getVideoResolution(){
    
    return _getVideoResolution(reference.pointer, _id_getVideoResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_setVideoResolution = _class.instanceMethodId(
    r'setVideoResolution',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolution(com.arashivision.insta360.basecamera.camera.setting.VideoResolution videoResolution, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setVideoResolution(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setVideoResolution(reference.pointer, _id_setVideoResolution as _$jni.JMethodIDPtr, videoResolution.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getVideoBitrate = _class.instanceMethodId(
    r'getVideoBitrate',
    r'()I',
  );

  static final _getVideoBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoBitrate()`
  int getVideoBitrate(){
    
    return _getVideoBitrate(reference.pointer, _id_getVideoBitrate as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getSubVideoMode = _class.instanceMethodId(
    r'getSubVideoMode',
    r'()I',
  );

  static final _getSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubVideoMode()`
  int getSubVideoMode(){
    
    return _getSubVideoMode(reference.pointer, _id_getSubVideoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubVideoMode = _class.instanceMethodId(
    r'setSubVideoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubVideoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubVideoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubVideoMode(reference.pointer, _id_setSubVideoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getSubPhotoMode = _class.instanceMethodId(
    r'getSubPhotoMode',
    r'()I',
  );

  static final _getSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubPhotoMode()`
  int getSubPhotoMode(){
    
    return _getSubPhotoMode(reference.pointer, _id_getSubPhotoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubPhotoMode = _class.instanceMethodId(
    r'setSubPhotoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubPhotoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubPhotoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubPhotoMode(reference.pointer, _id_setSubPhotoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getExpectOutputType = _class.instanceMethodId(
    r'getExpectOutputType',
    r'()I',
  );

  static final _getExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getExpectOutputType()`
  int getExpectOutputType(){
    
    return _getExpectOutputType(reference.pointer, _id_getExpectOutputType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setExpectOutputType = _class.instanceMethodId(
    r'setExpectOutputType',
    r'(I)V',
  );

  static final _setExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setExpectOutputType(int i)`
  void setExpectOutputType(int i, ){
    
    _setExpectOutputType(reference.pointer, _id_setExpectOutputType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFocusSensor = _class.instanceMethodId(
    r'getFocusSensor',
    r'()I',
  );

  static final _getFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFocusSensor()`
  int getFocusSensor(){
    
    return _getFocusSensor(reference.pointer, _id_getFocusSensor as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setFocusSensor = _class.instanceMethodId(
    r'setFocusSensor',
    r'(I)V',
  );

  static final _setFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFocusSensor(int i)`
  void setFocusSensor(int i, ){
    
    _setFocusSensor(reference.pointer, _id_setFocusSensor as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getSensorType = _class.instanceMethodId(
    r'getSensorType',
    r'()I',
  );

  static final _getSensorType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSensorType()`
  int getSensorType(){
    
    return _getSensorType(reference.pointer, _id_getSensorType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_beginOptionsTransaction = _class.instanceMethodId(
    r'beginOptionsTransaction',
    r'()V',
  );

  static final _beginOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void beginOptionsTransaction()`
  void beginOptionsTransaction(){
    
    _beginOptionsTransaction(reference.pointer, _id_beginOptionsTransaction as _$jni.JMethodIDPtr).check();
  }

  static final _id_commitOptionsTransaction = _class.instanceMethodId(
    r'commitOptionsTransaction',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;)V',
  );

  static final _commitOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void commitOptionsTransaction(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o o000O0o)`
  void commitOptionsTransaction(ICameraController_o000O0o o000O0o, ){
    
    _commitOptionsTransaction(reference.pointer, _id_commitOptionsTransaction as _$jni.JMethodIDPtr, o000O0o.reference.pointer).check();
  }

  static final _id_getTimelapseParams = _class.instanceMethodId(
    r'getTimelapseParams',
    r'(I)Lcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;',
  );

  static final _getTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.TimelapseParams getTimelapseParams(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  TimelapseParams getTimelapseParams(int i, ){
    
    return _getTimelapseParams(reference.pointer, _id_getTimelapseParams as _$jni.JMethodIDPtr, i).object(const $TimelapseParams$Type());
  }

  static final _id_setTimelapseParams = _class.instanceMethodId(
    r'setTimelapseParams',
    r'(ILcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;)V',
  );

  static final _setTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setTimelapseParams(int i, com.arashivision.insta360.basecamera.camera.setting.TimelapseParams timelapseParams)`
  void setTimelapseParams(int i, TimelapseParams timelapseParams, ){
    
    _setTimelapseParams(reference.pointer, _id_setTimelapseParams as _$jni.JMethodIDPtr, i, timelapseParams.reference.pointer).check();
  }

  static final _id_getExposureMode = _class.instanceMethodId(
    r'getExposureMode',
    r'(IZ)I',
  );

  static final _getExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getExposureMode(int i, boolean z)`
  int getExposureMode(int i, bool z, ){
    
    return _getExposureMode(reference.pointer, _id_getExposureMode as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getISO = _class.instanceMethodId(
    r'getISO',
    r'(IZ)I',
  );

  static final _getISO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getISO(int i, boolean z)`
  int getISO(int i, bool z, ){
    
    return _getISO(reference.pointer, _id_getISO as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getShutter = _class.instanceMethodId(
    r'getShutter',
    r'(IZ)D',
  );

  static final _getShutter = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public double getShutter(int i, boolean z)`
  double getShutter(int i, bool z, ){
    
    return _getShutter(reference.pointer, _id_getShutter as _$jni.JMethodIDPtr, i, z ? 1 : 0).doubleFloat;
  }

  static final _id_setExposureOptions = _class.instanceMethodId(
    r'setExposureOptions',
    r'(IIIDZ)V',
  );

  static final _setExposureOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, double, int)>();
  /// from: `public void setExposureOptions(int i, int i1, int i2, double d, boolean z)`
  void setExposureOptions(int i, int i1, int i2, double d, bool z, ){
    
    _setExposureOptions(reference.pointer, _id_setExposureOptions as _$jni.JMethodIDPtr, i, i1, i2, d, z ? 1 : 0).check();
  }

  static final _id_getExposureEV = _class.instanceMethodId(
    r'getExposureEV',
    r'(I)I',
  );

  static final _getExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getExposureEV(int i)`
  int getExposureEV(int i, ){
    
    return _getExposureEV(reference.pointer, _id_getExposureEV as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setExposureEV = _class.instanceMethodId(
    r'setExposureEV',
    r'(II)V',
  );

  static final _setExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setExposureEV(int i, int i1)`
  void setExposureEV(int i, int i1, ){
    
    _setExposureEV(reference.pointer, _id_setExposureEV as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFocalLengthValue = _class.instanceMethodId(
    r'getFocalLengthValue',
    r'(I)D',
  );

  static final _getFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getFocalLengthValue(int i)`
  double getFocalLengthValue(int i, ){
    
    return _getFocalLengthValue(reference.pointer, _id_getFocalLengthValue as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setFocalLengthValue = _class.instanceMethodId(
    r'setFocalLengthValue',
    r'(ID)V',
  );

  static final _setFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setFocalLengthValue(int i, double d)`
  void setFocalLengthValue(int i, double d, ){
    
    _setFocalLengthValue(reference.pointer, _id_setFocalLengthValue as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getVideoResolutionId = _class.instanceMethodId(
    r'getVideoResolutionId',
    r'(I)I',
  );

  static final _getVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoResolutionId(int i)`
  int getVideoResolutionId(int i, ){
    
    return _getVideoResolutionId(reference.pointer, _id_getVideoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoResolutionId = _class.instanceMethodId(
    r'setVideoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoResolutionId(reference.pointer, _id_setVideoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getResRecLimit = _class.instanceMethodId(
    r'getResRecLimit',
    r'(I)Ljava/util/List;',
  );

  static final _getResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public java.util.List getResRecLimit(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<_$jni.JObject> getResRecLimit(int i, ){
    
    return _getResRecLimit(reference.pointer, _id_getResRecLimit as _$jni.JMethodIDPtr, i).object(const _$jni.JListType(_$jni.JObjectType()));
  }

  static final _id_setResRecLimit = _class.instanceMethodId(
    r'setResRecLimit',
    r'(ILjava/util/List;)V',
  );

  static final _setResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setResRecLimit(int i, java.util.List list)`
  void setResRecLimit(int i, _$jni.JList<_$jni.JObject> list, ){
    
    _setResRecLimit(reference.pointer, _id_setResRecLimit as _$jni.JMethodIDPtr, i, list.reference.pointer).check();
  }

  static final _id_getRemainingTime = _class.instanceMethodId(
    r'getRemainingTime',
    r'(I)I',
  );

  static final _getRemainingTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRemainingTime(int i)`
  int getRemainingTime(int i, ){
    
    return _getRemainingTime(reference.pointer, _id_getRemainingTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getISOTopLimit = _class.instanceMethodId(
    r'getISOTopLimit',
    r'(I)I',
  );

  static final _getISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getISOTopLimit(int i)`
  int getISOTopLimit(int i, ){
    
    return _getISOTopLimit(reference.pointer, _id_getISOTopLimit as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setISOTopLimit = _class.instanceMethodId(
    r'setISOTopLimit',
    r'(II)V',
  );

  static final _setISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setISOTopLimit(int i, int i1)`
  void setISOTopLimit(int i, int i1, ){
    
    _setISOTopLimit(reference.pointer, _id_setISOTopLimit as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAEBCaptureNum = _class.instanceMethodId(
    r'getAEBCaptureNum',
    r'(I)I',
  );

  static final _getAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAEBCaptureNum(int i)`
  int getAEBCaptureNum(int i, ){
    
    return _getAEBCaptureNum(reference.pointer, _id_getAEBCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAEBCaptureNum = _class.instanceMethodId(
    r'setAEBCaptureNum',
    r'(II)V',
  );

  static final _setAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAEBCaptureNum(int i, int i1)`
  void setAEBCaptureNum(int i, int i1, ){
    
    _setAEBCaptureNum(reference.pointer, _id_setAEBCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSize = _class.instanceMethodId(
    r'getPhotoSize',
    r'(I)I',
  );

  static final _getPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSize(int i)`
  int getPhotoSize(int i, ){
    
    return _getPhotoSize(reference.pointer, _id_getPhotoSize as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSize = _class.instanceMethodId(
    r'setPhotoSize',
    r'(II)V',
  );

  static final _setPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSize(int i, int i1)`
  void setPhotoSize(int i, int i1, ){
    
    _setPhotoSize(reference.pointer, _id_setPhotoSize as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoResolutionId = _class.instanceMethodId(
    r'getPhotoResolutionId',
    r'(I)I',
  );

  static final _getPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoResolutionId(int i)`
  int getPhotoResolutionId(int i, ){
    
    return _getPhotoResolutionId(reference.pointer, _id_getPhotoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoResolutionId = _class.instanceMethodId(
    r'setPhotoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPhotoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setPhotoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setPhotoResolutionId(reference.pointer, _id_setPhotoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getWhiteBalanceId = _class.instanceMethodId(
    r'getWhiteBalanceId',
    r'(I)I',
  );

  static final _getWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceId(int i)`
  int getWhiteBalanceId(int i, ){
    
    return _getWhiteBalanceId(reference.pointer, _id_getWhiteBalanceId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceId = _class.instanceMethodId(
    r'setWhiteBalanceId',
    r'(II)V',
  );

  static final _setWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceId(int i, int i1)`
  void setWhiteBalanceId(int i, int i1, ){
    
    _setWhiteBalanceId(reference.pointer, _id_setWhiteBalanceId as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getWhiteBalanceValue = _class.instanceMethodId(
    r'getWhiteBalanceValue',
    r'(I)I',
  );

  static final _getWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceValue(int i)`
  int getWhiteBalanceValue(int i, ){
    
    return _getWhiteBalanceValue(reference.pointer, _id_getWhiteBalanceValue as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceValue = _class.instanceMethodId(
    r'setWhiteBalanceValue',
    r'(II)V',
  );

  static final _setWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceValue(int i, int i1)`
  void setWhiteBalanceValue(int i, int i1, ){
    
    _setWhiteBalanceValue(reference.pointer, _id_setWhiteBalanceValue as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getSportModeEnable = _class.instanceMethodId(
    r'getSportModeEnable',
    r'(I)Z',
  );

  static final _getSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getSportModeEnable(int i)`
  bool getSportModeEnable(int i, ){
    
    return _getSportModeEnable(reference.pointer, _id_getSportModeEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setSportModeEnable = _class.instanceMethodId(
    r'setSportModeEnable',
    r'(IZ)V',
  );

  static final _setSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeEnable(int i, boolean z)`
  void setSportModeEnable(int i, bool z, ){
    
    _setSportModeEnable(reference.pointer, _id_setSportModeEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getSportModeLevel = _class.instanceMethodId(
    r'getSportModeLevel',
    r'(I)I',
  );

  static final _getSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSportModeLevel(int i)`
  int getSportModeLevel(int i, ){
    
    return _getSportModeLevel(reference.pointer, _id_getSportModeLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSportModeLevel = _class.instanceMethodId(
    r'setSportModeLevel',
    r'(II)V',
  );

  static final _setSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeLevel(int i, int i1)`
  void setSportModeLevel(int i, int i1, ){
    
    _setSportModeLevel(reference.pointer, _id_setSportModeLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getGammaMode = _class.instanceMethodId(
    r'getGammaMode',
    r'(I)I',
  );

  static final _getGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getGammaMode(int i)`
  int getGammaMode(int i, ){
    
    return _getGammaMode(reference.pointer, _id_getGammaMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setGammaMode = _class.instanceMethodId(
    r'setGammaMode',
    r'(II)V',
  );

  static final _setGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setGammaMode(int i, int i1)`
  void setGammaMode(int i, int i1, ){
    
    _setGammaMode(reference.pointer, _id_setGammaMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRawType = _class.instanceMethodId(
    r'getRawType',
    r'(I)I',
  );

  static final _getRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRawType(int i)`
  int getRawType(int i, ){
    
    return _getRawType(reference.pointer, _id_getRawType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRawType = _class.instanceMethodId(
    r'setRawType',
    r'(II)V',
  );

  static final _setRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRawType(int i, int i1)`
  void setRawType(int i, int i1, ){
    
    _setRawType(reference.pointer, _id_setRawType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSelfTimer = _class.instanceMethodId(
    r'getPhotoSelfTimer',
    r'(I)I',
  );

  static final _getPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSelfTimer(int i)`
  int getPhotoSelfTimer(int i, ){
    
    return _getPhotoSelfTimer(reference.pointer, _id_getPhotoSelfTimer as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSelfTimer = _class.instanceMethodId(
    r'setPhotoSelfTimer',
    r'(II)V',
  );

  static final _setPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSelfTimer(int i, int i1)`
  void setPhotoSelfTimer(int i, int i1, ){
    
    _setPhotoSelfTimer(reference.pointer, _id_setPhotoSelfTimer as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAccelerateFrequency = _class.instanceMethodId(
    r'getAccelerateFrequency',
    r'(I)I',
  );

  static final _getAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAccelerateFrequency(int i)`
  int getAccelerateFrequency(int i, ){
    
    return _getAccelerateFrequency(reference.pointer, _id_getAccelerateFrequency as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAccelerateFrequency = _class.instanceMethodId(
    r'setAccelerateFrequency',
    r'(II)V',
  );

  static final _setAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAccelerateFrequency(int i, int i1)`
  void setAccelerateFrequency(int i, int i1, ){
    
    _setAccelerateFrequency(reference.pointer, _id_setAccelerateFrequency as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRecordDurationS = _class.instanceMethodId(
    r'getRecordDurationS',
    r'(I)I',
  );

  static final _getRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRecordDurationS(int i)`
  int getRecordDurationS(int i, ){
    
    return _getRecordDurationS(reference.pointer, _id_getRecordDurationS as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRecordDurationS = _class.instanceMethodId(
    r'setRecordDurationS',
    r'(II)V',
  );

  static final _setRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRecordDurationS(int i, int i1)`
  void setRecordDurationS(int i, int i1, ){
    
    _setRecordDurationS(reference.pointer, _id_setRecordDurationS as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlicker = _class.instanceMethodId(
    r'getFlicker',
    r'(I)I',
  );

  static final _getFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlicker(int i)`
  int getFlicker(int i, ){
    
    return _getFlicker(reference.pointer, _id_getFlicker as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlicker = _class.instanceMethodId(
    r'setFlicker',
    r'(II)V',
  );

  static final _setFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlicker(int i, int i1)`
  void setFlicker(int i, int i1, ){
    
    _setFlicker(reference.pointer, _id_setFlicker as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlowstateEnable = _class.instanceMethodId(
    r'getFlowstateEnable',
    r'(I)Z',
  );

  static final _getFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateEnable(int i)`
  bool getFlowstateEnable(int i, ){
    
    return _getFlowstateEnable(reference.pointer, _id_getFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateEnable = _class.instanceMethodId(
    r'setFlowstateEnable',
    r'(IZ)V',
  );

  static final _setFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateEnable(int i, boolean z)`
  void setFlowstateEnable(int i, bool z, ){
    
    _setFlowstateEnable(reference.pointer, _id_setFlowstateEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getUnDamageZoomEnable = _class.instanceMethodId(
    r'getUnDamageZoomEnable',
    r'(I)Z',
  );

  static final _getUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getUnDamageZoomEnable(int i)`
  bool getUnDamageZoomEnable(int i, ){
    
    return _getUnDamageZoomEnable(reference.pointer, _id_getUnDamageZoomEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setUnDamageZoomEnable = _class.instanceMethodId(
    r'setUnDamageZoomEnable',
    r'(IZ)V',
  );

  static final _setUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setUnDamageZoomEnable(int i, boolean z)`
  void setUnDamageZoomEnable(int i, bool z, ){
    
    _setUnDamageZoomEnable(reference.pointer, _id_setUnDamageZoomEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getFlowstateVideoEnable = _class.instanceMethodId(
    r'getFlowstateVideoEnable',
    r'(I)Z',
  );

  static final _getFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateVideoEnable(int i)`
  bool getFlowstateVideoEnable(int i, ){
    
    return _getFlowstateVideoEnable(reference.pointer, _id_getFlowstateVideoEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateVideoEnable = _class.instanceMethodId(
    r'setFlowstateVideoEnable',
    r'(IZ)V',
  );

  static final _setFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateVideoEnable(int i, boolean z)`
  void setFlowstateVideoEnable(int i, bool z, ){
    
    _setFlowstateVideoEnable(reference.pointer, _id_setFlowstateVideoEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getVideoBitrate$1 = _class.instanceMethodId(
    r'getVideoBitrate',
    r'(I)I',
  );

  static final _getVideoBitrate$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoBitrate(int i)`
  int getVideoBitrate$1(int i, ){
    
    return _getVideoBitrate$1(reference.pointer, _id_getVideoBitrate$1 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getFlowStateLevel = _class.instanceMethodId(
    r'getFlowStateLevel',
    r'(I)I',
  );

  static final _getFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevel(int i)`
  int getFlowStateLevel(int i, ){
    
    return _getFlowStateLevel(reference.pointer, _id_getFlowStateLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlowStateLevel = _class.instanceMethodId(
    r'setFlowStateLevel',
    r'(II)V',
  );

  static final _setFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevel(int i, int i1)`
  void setFlowStateLevel(int i, int i1, ){
    
    _setFlowStateLevel(reference.pointer, _id_setFlowStateLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlowStateLevelByCv5 = _class.instanceMethodId(
    r'getFlowStateLevelByCv5',
    r'(I)I',
  );

  static final _getFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevelByCv5(int i)`
  int getFlowStateLevelByCv5(int i, ){
    
    return _getFlowStateLevelByCv5(reference.pointer, _id_getFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlowStateLevelByCv5 = _class.instanceMethodId(
    r'setFlowStateLevelByCv5',
    r'(II)V',
  );

  static final _setFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevelByCv5(int i, int i1)`
  void setFlowStateLevelByCv5(int i, int i1, ){
    
    _setFlowStateLevelByCv5(reference.pointer, _id_setFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getHdrStatus = _class.instanceMethodId(
    r'getHdrStatus',
    r'(I)Z',
  );

  static final _getHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getHdrStatus(int i)`
  bool getHdrStatus(int i, ){
    
    return _getHdrStatus(reference.pointer, _id_getHdrStatus as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setHdrStatus = _class.instanceMethodId(
    r'setHdrStatus',
    r'(IZ)V',
  );

  static final _setHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setHdrStatus(int i, boolean z)`
  void setHdrStatus(int i, bool z, ){
    
    _setHdrStatus(reference.pointer, _id_setHdrStatus as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getSharpness = _class.instanceMethodId(
    r'getSharpness',
    r'(I)I',
  );

  static final _getSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSharpness(int i)`
  int getSharpness(int i, ){
    
    return _getSharpness(reference.pointer, _id_getSharpness as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSharpness = _class.instanceMethodId(
    r'setSharpness',
    r'(II)V',
  );

  static final _setSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSharpness(int i, int i1)`
  void setSharpness(int i, int i1, ){
    
    _setSharpness(reference.pointer, _id_setSharpness as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_setStarLapseExportType = _class.instanceMethodId(
    r'setStarLapseExportType',
    r'(II)V',
  );

  static final _setStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setStarLapseExportType(int i, int i1)`
  void setStarLapseExportType(int i, int i1, ){
    
    _setStarLapseExportType(reference.pointer, _id_setStarLapseExportType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getStarLapseExportType = _class.instanceMethodId(
    r'getStarLapseExportType',
    r'(I)I',
  );

  static final _getStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getStarLapseExportType(int i)`
  int getStarLapseExportType(int i, ){
    
    return _getStarLapseExportType(reference.pointer, _id_getStarLapseExportType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPanoExposureMode = _class.instanceMethodId(
    r'setPanoExposureMode',
    r'(II)V',
  );

  static final _setPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPanoExposureMode(int i, int i1)`
  void setPanoExposureMode(int i, int i1, ){
    
    _setPanoExposureMode(reference.pointer, _id_setPanoExposureMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPanoExposureMode = _class.instanceMethodId(
    r'getPanoExposureMode',
    r'(I)I',
  );

  static final _getPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPanoExposureMode(int i)`
  int getPanoExposureMode(int i, ){
    
    return _getPanoExposureMode(reference.pointer, _id_getPanoExposureMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getFovType = _class.instanceMethodId(
    r'getFovType',
    r'(I)I',
  );

  static final _getFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFovType(int i)`
  int getFovType(int i, ){
    
    return _getFovType(reference.pointer, _id_getFovType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFovType = _class.instanceMethodId(
    r'setFovType',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFovType(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setFovType(int i, int i1, ICameraController_o00 o00, ){
    
    _setFovType(reference.pointer, _id_setFovType as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getBurstCaptureNum = _class.instanceMethodId(
    r'getBurstCaptureNum',
    r'(I)I',
  );

  static final _getBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureNum(int i)`
  int getBurstCaptureNum(int i, ){
    
    return _getBurstCaptureNum(reference.pointer, _id_getBurstCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureNum = _class.instanceMethodId(
    r'setBurstCaptureNum',
    r'(II)V',
  );

  static final _setBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureNum(int i, int i1)`
  void setBurstCaptureNum(int i, int i1, ){
    
    _setBurstCaptureNum(reference.pointer, _id_setBurstCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getBurstCacheNum = _class.instanceMethodId(
    r'getBurstCacheNum',
    r'(I)I',
  );

  static final _getBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCacheNum(int i)`
  int getBurstCacheNum(int i, ){
    
    return _getBurstCacheNum(reference.pointer, _id_getBurstCacheNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCacheNum = _class.instanceMethodId(
    r'setBurstCacheNum',
    r'(II)V',
  );

  static final _setBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCacheNum(int i, int i1)`
  void setBurstCacheNum(int i, int i1, ){
    
    _setBurstCacheNum(reference.pointer, _id_setBurstCacheNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getBurstCaptureTime = _class.instanceMethodId(
    r'getBurstCaptureTime',
    r'(I)I',
  );

  static final _getBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureTime(int i)`
  int getBurstCaptureTime(int i, ){
    
    return _getBurstCaptureTime(reference.pointer, _id_getBurstCaptureTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureTime = _class.instanceMethodId(
    r'setBurstCaptureTime',
    r'(II)V',
  );

  static final _setBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureTime(int i, int i1)`
  void setBurstCaptureTime(int i, int i1, ){
    
    _setBurstCaptureTime(reference.pointer, _id_setBurstCaptureTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getCacheCaptureEnable = _class.instanceMethodId(
    r'getCacheCaptureEnable',
    r'(I)Z',
  );

  static final _getCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCacheCaptureEnable(int i)`
  bool getCacheCaptureEnable(int i, ){
    
    return _getCacheCaptureEnable(reference.pointer, _id_getCacheCaptureEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCacheCaptureEnable = _class.instanceMethodId(
    r'setCacheCaptureEnable',
    r'(IZ)V',
  );

  static final _setCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setCacheCaptureEnable(int i, boolean z)`
  void setCacheCaptureEnable(int i, bool z, ){
    
    _setCacheCaptureEnable(reference.pointer, _id_setCacheCaptureEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getZoomScale = _class.instanceMethodId(
    r'getZoomScale',
    r'(I)D',
  );

  static final _getZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getZoomScale(int i)`
  double getZoomScale(int i, ){
    
    return _getZoomScale(reference.pointer, _id_getZoomScale as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setZoomScale = _class.instanceMethodId(
    r'setZoomScale',
    r'(ID)V',
  );

  static final _setZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setZoomScale(int i, double d)`
  void setZoomScale(int i, double d, ){
    
    _setZoomScale(reference.pointer, _id_setZoomScale as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getMaxRecordTime = _class.instanceMethodId(
    r'getMaxRecordTime',
    r'(I)I',
  );

  static final _getMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getMaxRecordTime(int i)`
  int getMaxRecordTime(int i, ){
    
    return _getMaxRecordTime(reference.pointer, _id_getMaxRecordTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setMaxRecordTime = _class.instanceMethodId(
    r'setMaxRecordTime',
    r'(II)V',
  );

  static final _setMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMaxRecordTime(int i, int i1)`
  void setMaxRecordTime(int i, int i1, ){
    
    _setMaxRecordTime(reference.pointer, _id_setMaxRecordTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getDarkEisEnable = _class.instanceMethodId(
    r'getDarkEisEnable',
    r'(I)Z',
  );

  static final _getDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getDarkEisEnable(int i)`
  bool getDarkEisEnable(int i, ){
    
    return _getDarkEisEnable(reference.pointer, _id_getDarkEisEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setDarkEisEnable = _class.instanceMethodId(
    r'setDarkEisEnable',
    r'(IZ)V',
  );

  static final _setDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setDarkEisEnable(int i, boolean z)`
  void setDarkEisEnable(int i, bool z, ){
    
    _setDarkEisEnable(reference.pointer, _id_setDarkEisEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnable = _class.instanceMethodId(
    r'getMeteringEnable',
    r'(I)Z',
  );

  static final _getMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getMeteringEnable(int i)`
  bool getMeteringEnable(int i, ){
    
    return _getMeteringEnable(reference.pointer, _id_getMeteringEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setMeteringEnable = _class.instanceMethodId(
    r'setMeteringEnable',
    r'(IZ)V',
  );

  static final _setMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMeteringEnable(int i, boolean z)`
  void setMeteringEnable(int i, bool z, ){
    
    _setMeteringEnable(reference.pointer, _id_setMeteringEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getVideoSelfieMode = _class.instanceMethodId(
    r'getVideoSelfieMode',
    r'(I)I',
  );

  static final _getVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoSelfieMode(int i)`
  int getVideoSelfieMode(int i, ){
    
    return _getVideoSelfieMode(reference.pointer, _id_getVideoSelfieMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoSelfieMode = _class.instanceMethodId(
    r'setVideoSelfieMode',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoSelfieMode(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoSelfieMode(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoSelfieMode(reference.pointer, _id_setVideoSelfieMode as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getDarkEisStatus = _class.instanceMethodId(
    r'getDarkEisStatus',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;)V',
  );

  static final _getDarkEisStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getDarkEisStatus(com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo o0000oo)`
  void getDarkEisStatus(ICameraController_o0000oo o0000oo, ){
    
    _getDarkEisStatus(reference.pointer, _id_getDarkEisStatus as _$jni.JMethodIDPtr, o0000oo.reference.pointer).check();
  }

  static final _id_getDarkEisEnableGlobal = _class.instanceMethodId(
    r'getDarkEisEnableGlobal',
    r'()Z',
  );

  static final _getDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getDarkEisEnableGlobal()`
  bool getDarkEisEnableGlobal(){
    
    return _getDarkEisEnableGlobal(reference.pointer, _id_getDarkEisEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setDarkEisEnableGlobal = _class.instanceMethodId(
    r'setDarkEisEnableGlobal',
    r'(Z)V',
  );

  static final _setDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setDarkEisEnableGlobal(boolean z)`
  void setDarkEisEnableGlobal(bool z, ){
    
    _setDarkEisEnableGlobal(reference.pointer, _id_setDarkEisEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnableGlobal = _class.instanceMethodId(
    r'getMeteringEnableGlobal',
    r'()Z',
  );

  static final _getMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getMeteringEnableGlobal()`
  bool getMeteringEnableGlobal(){
    
    return _getMeteringEnableGlobal(reference.pointer, _id_getMeteringEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMeteringEnableGlobal = _class.instanceMethodId(
    r'setMeteringEnableGlobal',
    r'(Z)V',
  );

  static final _setMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMeteringEnableGlobal(boolean z)`
  void setMeteringEnableGlobal(bool z, ){
    
    _setMeteringEnableGlobal(reference.pointer, _id_setMeteringEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getInternalSplicingEnable = _class.instanceMethodId(
    r'getInternalSplicingEnable',
    r'()Z',
  );

  static final _getInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getInternalSplicingEnable()`
  bool getInternalSplicingEnable(){
    
    return _getInternalSplicingEnable(reference.pointer, _id_getInternalSplicingEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setInternalSplicingEnable = _class.instanceMethodId(
    r'setInternalSplicingEnable',
    r'(Z)V',
  );

  static final _setInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setInternalSplicingEnable(boolean z)`
  void setInternalSplicingEnable(bool z, ){
    
    _setInternalSplicingEnable(reference.pointer, _id_setInternalSplicingEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_setAppId = _class.instanceMethodId(
    r'setAppId',
    r'(Ljava/lang/String;)V',
  );

  static final _setAppId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAppId(java.lang.String string)`
  void setAppId(_$jni.JString string, ){
    
    _setAppId(reference.pointer, _id_setAppId as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_freeze = _class.instanceMethodId(
    r'freeze',
    r'()V',
  );

  static final _freeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void freeze()`
  void freeze(){
    
    _freeze(reference.pointer, _id_freeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_unfreeze = _class.instanceMethodId(
    r'unfreeze',
    r'()V',
  );

  static final _unfreeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void unfreeze()`
  void unfreeze(){
    
    _unfreeze(reference.pointer, _id_unfreeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_isFrozen = _class.instanceMethodId(
    r'isFrozen',
    r'()Z',
  );

  static final _isFrozen = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFrozen()`
  bool isFrozen(){
    
    return _isFrozen(reference.pointer, _id_isFrozen as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCurCameraSyncStatus = _class.instanceMethodId(
    r'getCurCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getCurCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getCurCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getCurCameraSyncStatus(){
    
    return _getCurCameraSyncStatus(reference.pointer, _id_getCurCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_getLastCameraSyncStatus = _class.instanceMethodId(
    r'getLastCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getLastCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getLastCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getLastCameraSyncStatus(){
    
    return _getLastCameraSyncStatus(reference.pointer, _id_getLastCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_isReady = _class.instanceMethodId(
    r'isReady',
    r'()Z',
  );

  static final _isReady = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isReady()`
  bool isReady(){
    
    return _isReady(reference.pointer, _id_isReady as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraWorking = _class.instanceMethodId(
    r'isCameraWorking',
    r'()Z',
  );

  static final _isCameraWorking = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraWorking()`
  bool isCameraWorking(){
    
    return _isCameraWorking(reference.pointer, _id_isCameraWorking as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraRecordOnPause = _class.instanceMethodId(
    r'isCameraRecordOnPause',
    r'()Z',
  );

  static final _isCameraRecordOnPause = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraRecordOnPause()`
  bool isCameraRecordOnPause(){
    
    return _isCameraRecordOnPause(reference.pointer, _id_isCameraRecordOnPause as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraBusy = _class.instanceMethodId(
    r'isCameraBusy',
    r'()Z',
  );

  static final _isCameraBusy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraBusy()`
  bool isCameraBusy(){
    
    return _isCameraBusy(reference.pointer, _id_isCameraBusy as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCaptureType = _class.instanceMethodId(
    r'getCaptureType',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
  );

  static final _getCaptureType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType getCaptureType()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureType getCaptureType(){
    
    return _getCaptureType(reference.pointer, _id_getCaptureType as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureType$Type());
  }

  static final _id_getCaptureStatus = _class.instanceMethodId(
    r'getCaptureStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
  );

  static final _getCaptureStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus getCaptureStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureStatus getCaptureStatus(){
    
    return _getCaptureStatus(reference.pointer, _id_getCaptureStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureStatus$Type());
  }

  static final _id_getCaptureSubStatus = _class.instanceMethodId(
    r'getCaptureSubStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
  );

  static final _getCaptureSubStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus getCaptureSubStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureSubStatus getCaptureSubStatus(){
    
    return _getCaptureSubStatus(reference.pointer, _id_getCaptureSubStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureSubStatus$Type());
  }

  static final _id_getCaptureTime = _class.instanceMethodId(
    r'getCaptureTime',
    r'()J',
  );

  static final _getCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getCaptureTime()`
  int getCaptureTime(){
    
    return _getCaptureTime(reference.pointer, _id_getCaptureTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getCaptureCount = _class.instanceMethodId(
    r'getCaptureCount',
    r'()I',
  );

  static final _getCaptureCount = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCaptureCount()`
  int getCaptureCount(){
    
    return _getCaptureCount(reference.pointer, _id_getCaptureCount as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCaptureKeyTimePointDetail = _class.instanceMethodId(
    r'getCaptureKeyTimePointDetail',
    r'()Ljava/lang/String;',
  );

  static final _getCaptureKeyTimePointDetail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCaptureKeyTimePointDetail()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCaptureKeyTimePointDetail(){
    
    return _getCaptureKeyTimePointDetail(reference.pointer, _id_getCaptureKeyTimePointDetail as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setConnectType = _class.instanceMethodId(
    r'setConnectType',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V',
  );

  static final _setConnectType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setConnectType(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  void setConnectType(BaseCamera_ConnectType connectType, ){
    
    _setConnectType(reference.pointer, _id_setConnectType as _$jni.JMethodIDPtr, connectType.reference.pointer).check();
  }

  static final _id_onlySupportBleConnect = _class.instanceMethodId(
    r'onlySupportBleConnect',
    r'()Z',
  );

  static final _onlySupportBleConnect = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean onlySupportBleConnect()`
  bool onlySupportBleConnect(){
    
    return _onlySupportBleConnect(reference.pointer, _id_onlySupportBleConnect as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCaptureByUser = _class.instanceMethodId(
    r'isCaptureByUser',
    r'()Z',
  );

  static final _isCaptureByUser = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCaptureByUser()`
  bool isCaptureByUser(){
    
    return _isCaptureByUser(reference.pointer, _id_isCaptureByUser as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraHost = _class.instanceMethodId(
    r'getCameraHost',
    r'()Ljava/lang/String;',
  );

  static final _getCameraHost = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraHost()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraHost(){
    
    return _getCameraHost(reference.pointer, _id_getCameraHost as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getPort = _class.instanceMethodId(
    r'getPort',
    r'()I',
  );

  static final _getPort = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPort()`
  int getPort(){
    
    return _getPort(reference.pointer, _id_getPort as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFirmwareUploadPath = _class.instanceMethodId(
    r'getFirmwareUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getFirmwareUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFirmwareUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFirmwareUploadPath(){
    
    return _getFirmwareUploadPath(reference.pointer, _id_getFirmwareUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFileUploadPath = _class.instanceMethodId(
    r'getCameraFileUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFileUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFileUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFileUploadPath(){
    
    return _getCameraFileUploadPath(reference.pointer, _id_getCameraFileUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_supportUploadFileToCamera = _class.instanceMethodId(
    r'supportUploadFileToCamera',
    r'()Z',
  );

  static final _supportUploadFileToCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportUploadFileToCamera()`
  bool supportUploadFileToCamera(){
    
    return _supportUploadFileToCamera(reference.pointer, _id_supportUploadFileToCamera as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getVersionValidLength = _class.instanceMethodId(
    r'getVersionValidLength',
    r'()I',
  );

  static final _getVersionValidLength = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVersionValidLength()`
  int getVersionValidLength(){
    
    return _getVersionValidLength(reference.pointer, _id_getVersionValidLength as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setAssistiveGridEnable = _class.instanceMethodId(
    r'setAssistiveGridEnable',
    r'(Z)V',
  );

  static final _setAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAssistiveGridEnable(boolean z)`
  void setAssistiveGridEnable(bool z, ){
    
    _setAssistiveGridEnable(reference.pointer, _id_setAssistiveGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getAssistiveGridEnable = _class.instanceMethodId(
    r'getAssistiveGridEnable',
    r'()Z',
  );

  static final _getAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getAssistiveGridEnable()`
  bool getAssistiveGridEnable(){
    
    return _getAssistiveGridEnable(reference.pointer, _id_getAssistiveGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setFreeFrameGridEnable = _class.instanceMethodId(
    r'setFreeFrameGridEnable',
    r'(Z)V',
  );

  static final _setFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFreeFrameGridEnable(boolean z)`
  void setFreeFrameGridEnable(bool z, ){
    
    _setFreeFrameGridEnable(reference.pointer, _id_setFreeFrameGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getFreeFrameGridEnable = _class.instanceMethodId(
    r'getFreeFrameGridEnable',
    r'()Z',
  );

  static final _getFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getFreeFrameGridEnable()`
  bool getFreeFrameGridEnable(){
    
    return _getFreeFrameGridEnable(reference.pointer, _id_getFreeFrameGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_fetchStorageState = _class.instanceMethodId(
    r'fetchStorageState',
    r'()V',
  );

  static final _fetchStorageState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchStorageState()`
  void fetchStorageState(){
    
    _fetchStorageState(reference.pointer, _id_fetchStorageState as _$jni.JMethodIDPtr).check();
  }

  static final _id_fetchBatteryState = _class.instanceMethodId(
    r'fetchBatteryState',
    r'()V',
  );

  static final _fetchBatteryState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchBatteryState()`
  void fetchBatteryState(){
    
    _fetchBatteryState(reference.pointer, _id_fetchBatteryState as _$jni.JMethodIDPtr).check();
  }

  static final _id_uploadScriptJson = _class.instanceMethodId(
    r'uploadScriptJson',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptJson = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptJson(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptJson(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptJson(reference.pointer, _id_uploadScriptJson as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_uploadScriptCmd = _class.instanceMethodId(
    r'uploadScriptCmd',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptCmd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptCmd(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptCmd(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptCmd(reference.pointer, _id_uploadScriptCmd as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_refreshScript = _class.instanceMethodId(
    r'refreshScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _refreshScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void refreshScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void refreshScript(ICameraController_OooOOO oooOOO, ){
    
    _refreshScript(reference.pointer, _id_refreshScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_runScript = _class.instanceMethodId(
    r'runScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _runScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void runScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void runScript(ICameraController_OooOOO oooOOO, ){
    
    _runScript(reference.pointer, _id_runScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_changeCameraSyncStatus = _class.instanceMethodId(
    r'changeCameraSyncStatus',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;)V',
  );

  static final _changeCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void changeCameraSyncStatus(com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus)`
  void changeCameraSyncStatus(BaseCamera_CameraSyncStatus cameraSyncStatus, ){
    
    _changeCameraSyncStatus(reference.pointer, _id_changeCameraSyncStatus as _$jni.JMethodIDPtr, cameraSyncStatus.reference.pointer).check();
  }

  static final _id_removeFmgButtonClickListener = _class.instanceMethodId(
    r'removeFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _removeFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void removeFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void removeFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _removeFmgButtonClickListener(reference.pointer, _id_removeFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_getFmgSpeed = _class.instanceMethodId(
    r'getFmgSpeed',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;)V',
  );

  static final _getFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgSpeed(com.arashivision.insta360.basecamera.camera.ICameraController$o00O0O o00O0O)`
  void getFmgSpeed(ICameraController_o00O0O o00O0O, ){
    
    _getFmgSpeed(reference.pointer, _id_getFmgSpeed as _$jni.JMethodIDPtr, o00O0O.reference.pointer).check();
  }

  static final _id_getFmgAngle = _class.instanceMethodId(
    r'getFmgAngle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;)V',
  );

  static final _getFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAngle(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo0 oooo0)`
  void getFmgAngle(ICameraController_Oooo0 oooo0, ){
    
    _getFmgAngle(reference.pointer, _id_getFmgAngle as _$jni.JMethodIDPtr, oooo0.reference.pointer).check();
  }

  static final _id_setFmgVerticalDir = _class.instanceMethodId(
    r'setFmgVerticalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;)V',
  );

  static final _setFmgVerticalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgVerticalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcVerticalDir ptzRcVerticalDir)`
  void setFmgVerticalDir(_$jni.JObject ptzRcVerticalDir, ){
    
    _setFmgVerticalDir(reference.pointer, _id_setFmgVerticalDir as _$jni.JMethodIDPtr, ptzRcVerticalDir.reference.pointer).check();
  }

  static final _id_enableFmgHandDrag = _class.instanceMethodId(
    r'enableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _enableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void enableFmgHandDrag(java.util.ArrayList arrayList)`
  void enableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _enableFmgHandDrag(reference.pointer, _id_enableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_speculateFmgTargetFollow = _class.instanceMethodId(
    r'speculateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _speculateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void speculateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void speculateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _speculateFmgTargetFollow(reference.pointer, _id_speculateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_exitFmgTargetFollow = _class.instanceMethodId(
    r'exitFmgTargetFollow',
    r'()V',
  );

  static final _exitFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void exitFmgTargetFollow()`
  void exitFmgTargetFollow(){
    
    _exitFmgTargetFollow(reference.pointer, _id_exitFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_getFmgTrackSensitivityMode = _class.instanceMethodId(
    r'getFmgTrackSensitivityMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;)V',
  );

  static final _getFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgTrackSensitivityMode(com.arashivision.insta360.basecamera.camera.ICameraController$o00Oo0 o00Oo0)`
  void getFmgTrackSensitivityMode(ICameraController_o00Oo0 o00Oo0, ){
    
    _getFmgTrackSensitivityMode(reference.pointer, _id_getFmgTrackSensitivityMode as _$jni.JMethodIDPtr, o00Oo0.reference.pointer).check();
  }

  static final _id_startOrUpdateFmgTargetFollow = _class.instanceMethodId(
    r'startOrUpdateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _startOrUpdateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startOrUpdateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void startOrUpdateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _startOrUpdateFmgTargetFollow(reference.pointer, _id_startOrUpdateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_setFmgSoundEnable = _class.instanceMethodId(
    r'setFmgSoundEnable',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;)V',
  );

  static final _setFmgSoundEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSoundEnable(com.arashivision.fmg.response.model.FmgModel$PtzSoundMode ptzSoundMode)`
  void setFmgSoundEnable(_$jni.JObject ptzSoundMode, ){
    
    _setFmgSoundEnable(reference.pointer, _id_setFmgSoundEnable as _$jni.JMethodIDPtr, ptzSoundMode.reference.pointer).check();
  }

  static final _id_addFmgButtonClickListener = _class.instanceMethodId(
    r'addFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _addFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void addFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void addFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _addFmgButtonClickListener(reference.pointer, _id_addFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_disableFmgHandDrag = _class.instanceMethodId(
    r'disableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _disableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disableFmgHandDrag(java.util.ArrayList arrayList)`
  void disableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _disableFmgHandDrag(reference.pointer, _id_disableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_resetFmgDefaultSettings = _class.instanceMethodId(
    r'resetFmgDefaultSettings',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;)V',
  );

  static final _resetFmgDefaultSettings = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetFmgDefaultSettings(com.arashivision.insta360.basecamera.camera.ICameraController$o0OO00O o0OO00O)`
  void resetFmgDefaultSettings(ICameraController_o0OO00O o0OO00O, ){
    
    _resetFmgDefaultSettings(reference.pointer, _id_resetFmgDefaultSettings as _$jni.JMethodIDPtr, o0OO00O.reference.pointer).check();
  }

  static final _id_clearFmgAnalyticsData = _class.instanceMethodId(
    r'clearFmgAnalyticsData',
    r'()V',
  );

  static final _clearFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void clearFmgAnalyticsData()`
  void clearFmgAnalyticsData(){
    
    _clearFmgAnalyticsData(reference.pointer, _id_clearFmgAnalyticsData as _$jni.JMethodIDPtr).check();
  }

  static final _id_startFmgRecMode = _class.instanceMethodId(
    r'startFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _startFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void startFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _startFmgRecMode(reference.pointer, _id_startFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_setFmgZoomScale = _class.instanceMethodId(
    r'setFmgZoomScale',
    r'(S)V',
  );

  static final _setFmgZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgZoomScale(short s)`
  void setFmgZoomScale(int s, ){
    
    _setFmgZoomScale(reference.pointer, _id_setFmgZoomScale as _$jni.JMethodIDPtr, s).check();
  }

  static final _id_setFmgMode = _class.instanceMethodId(
    r'setFmgMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;)V',
  );

  static final _setFmgMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgMode(com.arashivision.fmg.response.model.FmgModel$PtzMode ptzMode)`
  void setFmgMode(_$jni.JObject ptzMode, ){
    
    _setFmgMode(reference.pointer, _id_setFmgMode as _$jni.JMethodIDPtr, ptzMode.reference.pointer).check();
  }

  static final _id_setFmgButtonDisabled = _class.instanceMethodId(
    r'setFmgButtonDisabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonDisabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonDisabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonDisabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonDisabled(reference.pointer, _id_setFmgButtonDisabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_fmgVibration = _class.instanceMethodId(
    r'fmgVibration',
    r'()V',
  );

  static final _fmgVibration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fmgVibration()`
  void fmgVibration(){
    
    _fmgVibration(reference.pointer, _id_fmgVibration as _$jni.JMethodIDPtr).check();
  }

  static final _id_setFmgTimeElapse = _class.instanceMethodId(
    r'setFmgTimeElapse',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTemMode;Lcom/arashivision/fmg/response/model/FmgModel$PtzTemState;ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;)V',
  );

  static final _setFmgTimeElapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTimeElapse(com.arashivision.fmg.response.model.FmgModel$PtzTemMode ptzTemMode, com.arashivision.fmg.response.model.FmgModel$PtzTemState ptzTemState, int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo o000OOo)`
  void setFmgTimeElapse(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo, ){
    
    _setFmgTimeElapse(reference.pointer, _id_setFmgTimeElapse as _$jni.JMethodIDPtr, ptzTemMode.reference.pointer, ptzTemState.reference.pointer, i, o000OOo.reference.pointer).check();
  }

  static final _id_setFmgZoomSpeed = _class.instanceMethodId(
    r'setFmgZoomSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;)V',
  );

  static final _setFmgZoomSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgZoomSpeed(com.arashivision.fmg.response.model.FmgModel$PtzZoomSpeed ptzZoomSpeed)`
  void setFmgZoomSpeed(_$jni.JObject ptzZoomSpeed, ){
    
    _setFmgZoomSpeed(reference.pointer, _id_setFmgZoomSpeed as _$jni.JMethodIDPtr, ptzZoomSpeed.reference.pointer).check();
  }

  static final _id_setFmgSpeed = _class.instanceMethodId(
    r'setFmgSpeed',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;)V',
  );

  static final _setFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSpeed(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0O0O00 o0O0O00)`
  void setFmgSpeed(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00, ){
    
    _setFmgSpeed(reference.pointer, _id_setFmgSpeed as _$jni.JMethodIDPtr, f, f1, f2, o0O0O00.reference.pointer).check();
  }

  static final _id_setFmgSwitchModeWay = _class.instanceMethodId(
    r'setFmgSwitchModeWay',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;)V',
  );

  static final _setFmgSwitchModeWay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSwitchModeWay(com.arashivision.fmg.response.model.FmgModel$PtzSwitchModeWay ptzSwitchModeWay)`
  void setFmgSwitchModeWay(_$jni.JObject ptzSwitchModeWay, ){
    
    _setFmgSwitchModeWay(reference.pointer, _id_setFmgSwitchModeWay as _$jni.JMethodIDPtr, ptzSwitchModeWay.reference.pointer).check();
  }

  static final _id_cancelFmgUpgrade = _class.instanceMethodId(
    r'cancelFmgUpgrade',
    r'()V',
  );

  static final _cancelFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void cancelFmgUpgrade()`
  void cancelFmgUpgrade(){
    
    _cancelFmgUpgrade(reference.pointer, _id_cancelFmgUpgrade as _$jni.JMethodIDPtr).check();
  }

  static final _id_startFmgHeartBeat = _class.instanceMethodId(
    r'startFmgHeartBeat',
    r'()V',
  );

  static final _startFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFmgHeartBeat()`
  void startFmgHeartBeat(){
    
    _startFmgHeartBeat(reference.pointer, _id_startFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  static final _id_setFmgButtonEnabled = _class.instanceMethodId(
    r'setFmgButtonEnabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonEnabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonEnabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonEnabled(reference.pointer, _id_setFmgButtonEnabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_setFmgAngle = _class.instanceMethodId(
    r'setFmgAngle',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;)V',
  );

  static final _setFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngle(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0ooOOo o0ooOOo)`
  void setFmgAngle(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo, ){
    
    _setFmgAngle(reference.pointer, _id_setFmgAngle as _$jni.JMethodIDPtr, f, f1, f2, o0ooOOo.reference.pointer).check();
  }

  static final _id_setFmgFollowSpeed = _class.instanceMethodId(
    r'setFmgFollowSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;)V',
  );

  static final _setFmgFollowSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgFollowSpeed(com.arashivision.fmg.response.model.FmgModel$PtzFollowSpeed ptzFollowSpeed)`
  void setFmgFollowSpeed(_$jni.JObject ptzFollowSpeed, ){
    
    _setFmgFollowSpeed(reference.pointer, _id_setFmgFollowSpeed as _$jni.JMethodIDPtr, ptzFollowSpeed.reference.pointer).check();
  }

  static final _id_updateFmgPhoneImu = _class.instanceMethodId(
    r'updateFmgPhoneImu',
    r'([F)V',
  );

  static final _updateFmgPhoneImu = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void updateFmgPhoneImu(float[] fs)`
  void updateFmgPhoneImu(_$jni.JArray<_$jni.jfloat> fs, ){
    
    _updateFmgPhoneImu(reference.pointer, _id_updateFmgPhoneImu as _$jni.JMethodIDPtr, fs.reference.pointer).check();
  }

  static final _id_stopFmgHeartBeat = _class.instanceMethodId(
    r'stopFmgHeartBeat',
    r'()V',
  );

  static final _stopFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopFmgHeartBeat()`
  void stopFmgHeartBeat(){
    
    _stopFmgHeartBeat(reference.pointer, _id_stopFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  static final _id_lostFmgTargetFollow = _class.instanceMethodId(
    r'lostFmgTargetFollow',
    r'()V',
  );

  static final _lostFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void lostFmgTargetFollow()`
  void lostFmgTargetFollow(){
    
    _lostFmgTargetFollow(reference.pointer, _id_lostFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_setFmgHvMode = _class.instanceMethodId(
    r'setFmgHvMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;)V',
  );

  static final _setFmgHvMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHvMode(com.arashivision.fmg.response.model.FmgModel$PtzHvMode ptzHvMode)`
  void setFmgHvMode(_$jni.JObject ptzHvMode, ){
    
    _setFmgHvMode(reference.pointer, _id_setFmgHvMode as _$jni.JMethodIDPtr, ptzHvMode.reference.pointer).check();
  }

  static final _id_stopFmgRecMode = _class.instanceMethodId(
    r'stopFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _stopFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void stopFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _stopFmgRecMode(reference.pointer, _id_stopFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_setFmgRcSpeed = _class.instanceMethodId(
    r'setFmgRcSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;)V',
  );

  static final _setFmgRcSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgRcSpeed(com.arashivision.fmg.response.model.FmgModel$PtzRcSpeed ptzRcSpeed)`
  void setFmgRcSpeed(_$jni.JObject ptzRcSpeed, ){
    
    _setFmgRcSpeed(reference.pointer, _id_setFmgRcSpeed as _$jni.JMethodIDPtr, ptzRcSpeed.reference.pointer).check();
  }

  static final _id_setFmgAngleSeq = _class.instanceMethodId(
    r'setFmgAngleSeq',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;)V',
  );

  static final _setFmgAngleSeq = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngleSeq(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0OOO0o o0OOO0o)`
  void setFmgAngleSeq(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o, ){
    
    _setFmgAngleSeq(reference.pointer, _id_setFmgAngleSeq as _$jni.JMethodIDPtr, list.reference.pointer, o0OOO0o.reference.pointer).check();
  }

  static final _id_setFmgPano = _class.instanceMethodId(
    r'setFmgPano',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzPanoMode;)V',
  );

  static final _setFmgPano = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgPano(com.arashivision.fmg.response.model.FmgModel$PtzPanoMode ptzPanoMode)`
  void setFmgPano(_$jni.JObject ptzPanoMode, ){
    
    _setFmgPano(reference.pointer, _id_setFmgPano as _$jni.JMethodIDPtr, ptzPanoMode.reference.pointer).check();
  }

  static final _id_initFmgRecMode = _class.instanceMethodId(
    r'initFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _initFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void initFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void initFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _initFmgRecMode(reference.pointer, _id_initFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_setFmgVerticalTrimDegree = _class.instanceMethodId(
    r'setFmgVerticalTrimDegree',
    r'(F)V',
  );

  static final _setFmgVerticalTrimDegree = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setFmgVerticalTrimDegree(float f)`
  void setFmgVerticalTrimDegree(double f, ){
    
    _setFmgVerticalTrimDegree(reference.pointer, _id_setFmgVerticalTrimDegree as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_getFmgAnalyticsData = _class.instanceMethodId(
    r'getFmgAnalyticsData',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;)V',
  );

  static final _getFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAnalyticsData(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo000 oooo000)`
  void getFmgAnalyticsData(ICameraController_Oooo000 oooo000, ){
    
    _getFmgAnalyticsData(reference.pointer, _id_getFmgAnalyticsData as _$jni.JMethodIDPtr, oooo000.reference.pointer).check();
  }

  static final _id_setFmgIdle = _class.instanceMethodId(
    r'setFmgIdle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;)V',
  );

  static final _setFmgIdle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgIdle(com.arashivision.insta360.basecamera.camera.ICameraController$o0Oo0oo o0Oo0oo)`
  void setFmgIdle(ICameraController_o0Oo0oo o0Oo0oo, ){
    
    _setFmgIdle(reference.pointer, _id_setFmgIdle as _$jni.JMethodIDPtr, o0Oo0oo.reference.pointer).check();
  }

  static final _id_startFmgUpgrade = _class.instanceMethodId(
    r'startFmgUpgrade',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;)V',
  );

  static final _startFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgUpgrade(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o00000O0 o00000O0)`
  void startFmgUpgrade(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0, ){
    
    _startFmgUpgrade(reference.pointer, _id_startFmgUpgrade as _$jni.JMethodIDPtr, bs.reference.pointer, o00000O0.reference.pointer).check();
  }

  static final _id_setFmgTrackSensitivityMode = _class.instanceMethodId(
    r'setFmgTrackSensitivityMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;)V',
  );

  static final _setFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTrackSensitivityMode(com.arashivision.fmg.response.model.FmgModel$PtzTrackSensitivityMode ptzTrackSensitivityMode, com.arashivision.insta360.basecamera.camera.ICameraController$o000000 o000000)`
  void setFmgTrackSensitivityMode(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000, ){
    
    _setFmgTrackSensitivityMode(reference.pointer, _id_setFmgTrackSensitivityMode as _$jni.JMethodIDPtr, ptzTrackSensitivityMode.reference.pointer, o000000.reference.pointer).check();
  }

  static final _id_setFmgHorizontalDir = _class.instanceMethodId(
    r'setFmgHorizontalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;)V',
  );

  static final _setFmgHorizontalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHorizontalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcHorizontalDir ptzRcHorizontalDir)`
  void setFmgHorizontalDir(_$jni.JObject ptzRcHorizontalDir, ){
    
    _setFmgHorizontalDir(reference.pointer, _id_setFmgHorizontalDir as _$jni.JMethodIDPtr, ptzRcHorizontalDir.reference.pointer).check();
  }

  static final _id_setFmgCameraFacing = _class.instanceMethodId(
    r'setFmgCameraFacing',
    r'(Z)V',
  );

  static final _setFmgCameraFacing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgCameraFacing(boolean z)`
  void setFmgCameraFacing(bool z, ){
    
    _setFmgCameraFacing(reference.pointer, _id_setFmgCameraFacing as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

}
final class $BaseCameraController$Type extends _$jni.JObjType<BaseCameraController> {
  

  @_$jni.internal
  const $BaseCameraController$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/BaseCameraController;';

  @_$jni.internal
  @_$core.override
  BaseCameraController fromReference(_$jni.JReference reference) => BaseCameraController.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($BaseCameraController$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($BaseCameraController$Type) &&
        other is $BaseCameraController$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.CameraManager$IConfiguration`
class CameraManager_IConfiguration extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraManager_IConfiguration> $type;

  

  @_$jni.internal
  CameraManager_IConfiguration.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/CameraManager$IConfiguration');

      /// The type which includes information such as the signature of this class.
static const type = $CameraManager_IConfiguration$Type();
  static final _id_getSupportCamera = _class.instanceMethodId(
    r'getSupportCamera',
    r'()Ljava/util/List;',
  );

  static final _getSupportCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract java.util.List getSupportCamera()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<CameraType> getSupportCamera(){
    
    return _getSupportCamera(reference.pointer, _id_getSupportCamera as _$jni.JMethodIDPtr).object(const _$jni.JListType($CameraType$Type()));
  }

  static final _id_getForbidActiveCamera = _class.instanceMethodId(
    r'getForbidActiveCamera',
    r'()Ljava/util/List;',
  );

  static final _getForbidActiveCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract java.util.List getForbidActiveCamera()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<CameraType> getForbidActiveCamera(){
    
    return _getForbidActiveCamera(reference.pointer, _id_getForbidActiveCamera as _$jni.JMethodIDPtr).object(const _$jni.JListType($CameraType$Type()));
  }

  static final _id_getAuthorizationCamera = _class.instanceMethodId(
    r'getAuthorizationCamera',
    r'()Ljava/util/List;',
  );

  static final _getAuthorizationCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract java.util.List getAuthorizationCamera()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<CameraType> getAuthorizationCamera(){
    
    return _getAuthorizationCamera(reference.pointer, _id_getAuthorizationCamera as _$jni.JMethodIDPtr).object(const _$jni.JListType($CameraType$Type()));
  }

  static final _id_getCameraCheckActivationList = _class.instanceMethodId(
    r'getCameraCheckActivationList',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)Ljava/util/List;',
  );

  static final _getCameraCheckActivationList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract java.util.List getCameraCheckActivationList(java.lang.String string, com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<ICameraCheck> getCameraCheckActivationList(_$jni.JString string, BaseCamera_ConnectType connectType, ){
    
    return _getCameraCheckActivationList(reference.pointer, _id_getCameraCheckActivationList as _$jni.JMethodIDPtr, string.reference.pointer, connectType.reference.pointer).object(const _$jni.JListType($ICameraCheck$Type()));
  }

  static final _id_onOpenCamera = _class.instanceMethodId(
    r'onOpenCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;Ljava/util/List;)Z',
  );

  static final _onOpenCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract boolean onOpenCamera(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType, java.util.List list)`
  bool onOpenCamera(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list, ){
    
    return _onOpenCamera(reference.pointer, _id_onOpenCamera as _$jni.JMethodIDPtr, connectType.reference.pointer, list.reference.pointer).boolean;
  }

  static final _id_savePreviewStreamAndGyroData = _class.instanceMethodId(
    r'savePreviewStreamAndGyroData',
    r'()Z',
  );

  static final _savePreviewStreamAndGyroData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean savePreviewStreamAndGyroData()`
  bool savePreviewStreamAndGyroData(){
    
    return _savePreviewStreamAndGyroData(reference.pointer, _id_savePreviewStreamAndGyroData as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isVpnEstablishedByOtherApp = _class.instanceMethodId(
    r'isVpnEstablishedByOtherApp',
    r'()Z',
  );

  static final _isVpnEstablishedByOtherApp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean isVpnEstablishedByOtherApp()`
  bool isVpnEstablishedByOtherApp(){
    
    return _isVpnEstablishedByOtherApp(reference.pointer, _id_isVpnEstablishedByOtherApp as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_hasBindWifiNetwork = _class.instanceMethodId(
    r'hasBindWifiNetwork',
    r'()Z',
  );

  static final _hasBindWifiNetwork = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean hasBindWifiNetwork()`
  bool hasBindWifiNetwork(){
    
    return _hasBindWifiNetwork(reference.pointer, _id_hasBindWifiNetwork as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isAuthorized = _class.instanceMethodId(
    r'isAuthorized',
    r'(Ljava/lang/String;)Z',
  );

  static final _isAuthorized = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract boolean isAuthorized(java.lang.String string)`
  bool isAuthorized(_$jni.JString string, ){
    
    return _isAuthorized(reference.pointer, _id_isAuthorized as _$jni.JMethodIDPtr, string.reference.pointer).boolean;
  }

  static final _id_getCustomFwVersion = _class.instanceMethodId(
    r'getCustomFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCustomFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract java.lang.String getCustomFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCustomFwVersion(){
    
    return _getCustomFwVersion(reference.pointer, _id_getCustomFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $CameraManager_IConfiguration> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'getSupportCamera()Ljava/util/List;') {
          final $r = _$impls[$p]!.getSupportCamera(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getForbidActiveCamera()Ljava/util/List;') {
          final $r = _$impls[$p]!.getForbidActiveCamera(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getAuthorizationCamera()Ljava/util/List;') {
          final $r = _$impls[$p]!.getAuthorizationCamera(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraCheckActivationList(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)Ljava/util/List;') {
          final $r = _$impls[$p]!.getCameraCheckActivationList(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $BaseCamera_ConnectType$Type(), releaseOriginal: true),
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'onOpenCamera(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;Ljava/util/List;)Z') {
          final $r = _$impls[$p]!.onOpenCamera(
$a[0].as(const $BaseCamera_ConnectType$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JListType($BaseCamera$Type()), releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'savePreviewStreamAndGyroData()Z') {
          final $r = _$impls[$p]!.savePreviewStreamAndGyroData(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isVpnEstablishedByOtherApp()Z') {
          final $r = _$impls[$p]!.isVpnEstablishedByOtherApp(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'hasBindWifiNetwork()Z') {
          final $r = _$impls[$p]!.hasBindWifiNetwork(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isAuthorized(Ljava/lang/String;)Z') {
          final $r = _$impls[$p]!.isAuthorized(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getCustomFwVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCustomFwVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $CameraManager_IConfiguration $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.CameraManager$IConfiguration',
      $p,
      _$invokePointer,
      [
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory CameraManager_IConfiguration.implement(
    $CameraManager_IConfiguration $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return CameraManager_IConfiguration.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $CameraManager_IConfiguration {
  factory $CameraManager_IConfiguration(
    {required _$jni.JList<CameraType> Function() getSupportCamera,
    required _$jni.JList<CameraType> Function() getForbidActiveCamera,
    required _$jni.JList<CameraType> Function() getAuthorizationCamera,
    required _$jni.JList<ICameraCheck> Function(_$jni.JString string, BaseCamera_ConnectType connectType) getCameraCheckActivationList,
    required bool Function(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list) onOpenCamera,
    required bool Function() savePreviewStreamAndGyroData,
    required bool Function() isVpnEstablishedByOtherApp,
    required bool Function() hasBindWifiNetwork,
    required bool Function(_$jni.JString string) isAuthorized,
    required _$jni.JString Function() getCustomFwVersion,}
  ) = _$CameraManager_IConfiguration;

  

  _$jni.JList<CameraType> getSupportCamera();
  _$jni.JList<CameraType> getForbidActiveCamera();
  _$jni.JList<CameraType> getAuthorizationCamera();
  _$jni.JList<ICameraCheck> getCameraCheckActivationList(_$jni.JString string, BaseCamera_ConnectType connectType);
  bool onOpenCamera(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list);
  bool savePreviewStreamAndGyroData();
  bool isVpnEstablishedByOtherApp();
  bool hasBindWifiNetwork();
  bool isAuthorized(_$jni.JString string);
  _$jni.JString getCustomFwVersion();
}

final class _$CameraManager_IConfiguration with $CameraManager_IConfiguration {
  _$CameraManager_IConfiguration(
    {required _$jni.JList<CameraType> Function() getSupportCamera,
    required _$jni.JList<CameraType> Function() getForbidActiveCamera,
    required _$jni.JList<CameraType> Function() getAuthorizationCamera,
    required _$jni.JList<ICameraCheck> Function(_$jni.JString string, BaseCamera_ConnectType connectType) getCameraCheckActivationList,
    required bool Function(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list) onOpenCamera,
    required bool Function() savePreviewStreamAndGyroData,
    required bool Function() isVpnEstablishedByOtherApp,
    required bool Function() hasBindWifiNetwork,
    required bool Function(_$jni.JString string) isAuthorized,
    required _$jni.JString Function() getCustomFwVersion,}
  ) :  _getSupportCamera = getSupportCamera, _getForbidActiveCamera = getForbidActiveCamera, _getAuthorizationCamera = getAuthorizationCamera, _getCameraCheckActivationList = getCameraCheckActivationList, _onOpenCamera = onOpenCamera, _savePreviewStreamAndGyroData = savePreviewStreamAndGyroData, _isVpnEstablishedByOtherApp = isVpnEstablishedByOtherApp, _hasBindWifiNetwork = hasBindWifiNetwork, _isAuthorized = isAuthorized, _getCustomFwVersion = getCustomFwVersion;

  

  final _$jni.JList<CameraType> Function() _getSupportCamera;
  final _$jni.JList<CameraType> Function() _getForbidActiveCamera;
  final _$jni.JList<CameraType> Function() _getAuthorizationCamera;
  final _$jni.JList<ICameraCheck> Function(_$jni.JString string, BaseCamera_ConnectType connectType) _getCameraCheckActivationList;
  final bool Function(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list) _onOpenCamera;
  final bool Function() _savePreviewStreamAndGyroData;
  final bool Function() _isVpnEstablishedByOtherApp;
  final bool Function() _hasBindWifiNetwork;
  final bool Function(_$jni.JString string) _isAuthorized;
  final _$jni.JString Function() _getCustomFwVersion;

  _$jni.JList<CameraType> getSupportCamera() {
    return _getSupportCamera();
  }  _$jni.JList<CameraType> getForbidActiveCamera() {
    return _getForbidActiveCamera();
  }  _$jni.JList<CameraType> getAuthorizationCamera() {
    return _getAuthorizationCamera();
  }  _$jni.JList<ICameraCheck> getCameraCheckActivationList(_$jni.JString string, BaseCamera_ConnectType connectType) {
    return _getCameraCheckActivationList(string, connectType);
  }  bool onOpenCamera(BaseCamera_ConnectType connectType, _$jni.JList<BaseCamera> list) {
    return _onOpenCamera(connectType, list);
  }  bool savePreviewStreamAndGyroData() {
    return _savePreviewStreamAndGyroData();
  }  bool isVpnEstablishedByOtherApp() {
    return _isVpnEstablishedByOtherApp();
  }  bool hasBindWifiNetwork() {
    return _hasBindWifiNetwork();
  }  bool isAuthorized(_$jni.JString string) {
    return _isAuthorized(string);
  }  _$jni.JString getCustomFwVersion() {
    return _getCustomFwVersion();
  }}
final class $CameraManager_IConfiguration$Type extends _$jni.JObjType<CameraManager_IConfiguration> {
  

  @_$jni.internal
  const $CameraManager_IConfiguration$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/CameraManager$IConfiguration;';

  @_$jni.internal
  @_$core.override
  CameraManager_IConfiguration fromReference(_$jni.JReference reference) => CameraManager_IConfiguration.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraManager_IConfiguration$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraManager_IConfiguration$Type) &&
        other is $CameraManager_IConfiguration$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.CameraManager`
class CameraManager extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraManager> $type;

  

  @_$jni.internal
  CameraManager.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/CameraManager');

      /// The type which includes information such as the signature of this class.
static const type = $CameraManager$Type();
  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.log.CameraLogger OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static CameraLogger get OooO00o => _id_OooO00o.get(_class, const $CameraLogger$Type());

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraManager;',
      );
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraManager OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static CameraManager get OooO0O0 => _id_OooO0O0.get(_class, const $CameraManager$Type());

  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraManager OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static set OooO0O0(CameraManager value) => _id_OooO0O0.set(_class, const $CameraManager$Type(), value);

  static final _id_OooO0OO =
      _class.instanceFieldId(
        r'OooO0OO',
        r'Ljava/util/ArrayList;',
      );
  /// from: `public java.util.ArrayList OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get OooO0OO => _id_OooO0OO.get(this, const _$jni.JObjectType());

  /// from: `public java.util.ArrayList OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0OO(_$jni.JObject value) => _id_OooO0OO.set(this, const _$jni.JObjectType(), value);

  static final _id_OooO0Oo =
      _class.instanceFieldId(
        r'OooO0Oo',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraManager$IConfiguration;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.CameraManager$IConfiguration OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
CameraManager_IConfiguration get OooO0Oo => _id_OooO0Oo.get(this, const $CameraManager_IConfiguration$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.CameraManager$IConfiguration OooO0Oo`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0Oo(CameraManager_IConfiguration value) => _id_OooO0Oo.set(this, const $CameraManager_IConfiguration$Type(), value);

  static final _id_OooO0o0 =
      _class.instanceFieldId(
        r'OooO0o0',
        r'Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback OooO0o0`
  /// The returned object must be released after use, by calling the [release] method.
IBaseCameraChangedCallback get OooO0o0 => _id_OooO0o0.get(this, const $IBaseCameraChangedCallback$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback OooO0o0`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0o0(IBaseCameraChangedCallback value) => _id_OooO0o0.set(this, const $IBaseCameraChangedCallback$Type(), value);

  static final _id_OooO0o =
      _class.instanceFieldId(
        r'OooO0o',
        r'Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
      );
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera OooO0o`
  /// The returned object must be released after use, by calling the [release] method.
BaseCamera get OooO0o => _id_OooO0o.get(this, const $BaseCamera$Type());

  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera OooO0o`
  /// The returned object must be released after use, by calling the [release] method.
set OooO0o(BaseCamera value) => _id_OooO0o.set(this, const $BaseCamera$Type(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraManager() {
    
    return CameraManager.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_getInstance = _class.staticMethodId(
    r'getInstance',
    r'()Lcom/arashivision/insta360/basecamera/camera/CameraManager;',
  );

  static final _getInstance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraManager getInstance()`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraManager getInstance(){
    
    return _getInstance(_class.reference.pointer, _id_getInstance as _$jni.JMethodIDPtr).object(const $CameraManager$Type());
  }

  static final _id_OooO0O0$1 = _class.staticMethodId(
    r'OooO0O0',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)I',
  );

  static final _OooO0O0$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public int OooO0O0(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera1)`
  static int OooO0O0$1(BaseCamera baseCamera, BaseCamera baseCamera1, ){
    
    return _OooO0O0$1(_class.reference.pointer, _id_OooO0O0$1 as _$jni.JMethodIDPtr, baseCamera.reference.pointer, baseCamera1.reference.pointer).integer;
  }

  static final _id_OooO00o$1 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)I',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public int OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera1)`
  static int OooO00o$1(BaseCamera baseCamera, BaseCamera baseCamera1, ){
    
    return _OooO00o$1(_class.reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, baseCamera.reference.pointer, baseCamera1.reference.pointer).integer;
  }


  static final _id_setConfiguration = _class.instanceMethodId(
    r'setConfiguration',
    r'(Lcom/arashivision/insta360/basecamera/camera/CameraManager$IConfiguration;)V',
  );

  static final _setConfiguration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setConfiguration(com.arashivision.insta360.basecamera.camera.CameraManager$IConfiguration iConfiguration)`
  void setConfiguration(CameraManager_IConfiguration iConfiguration, ){
    
    _setConfiguration(reference.pointer, _id_setConfiguration as _$jni.JMethodIDPtr, iConfiguration.reference.pointer).check();
  }

  static final _id_setBaseCameraChangedCallback = _class.instanceMethodId(
    r'setBaseCameraChangedCallback',
    r'(Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;)V',
  );

  static final _setBaseCameraChangedCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBaseCameraChangedCallback(com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback iBaseCameraChangedCallback)`
  void setBaseCameraChangedCallback(IBaseCameraChangedCallback iBaseCameraChangedCallback, ){
    
    _setBaseCameraChangedCallback(reference.pointer, _id_setBaseCameraChangedCallback as _$jni.JMethodIDPtr, iBaseCameraChangedCallback.reference.pointer).check();
  }

  static final _id_getSupportCameraList = _class.instanceMethodId(
    r'getSupportCameraList',
    r'()Ljava/util/List;',
  );

  static final _getSupportCameraList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.util.List getSupportCameraList()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<CameraType> getSupportCameraList(){
    
    return _getSupportCameraList(reference.pointer, _id_getSupportCameraList as _$jni.JMethodIDPtr).object(const _$jni.JListType($CameraType$Type()));
  }

  static final _id_getForbidActiveCameraList = _class.instanceMethodId(
    r'getForbidActiveCameraList',
    r'()Ljava/util/List;',
  );

  static final _getForbidActiveCameraList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.util.List getForbidActiveCameraList()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<CameraType> getForbidActiveCameraList(){
    
    return _getForbidActiveCameraList(reference.pointer, _id_getForbidActiveCameraList as _$jni.JMethodIDPtr).object(const _$jni.JListType($CameraType$Type()));
  }

  static final _id_getAllActiveCamera = _class.instanceMethodId(
    r'getAllActiveCamera',
    r'()Ljava/util/List;',
  );

  static final _getAllActiveCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.util.List getAllActiveCamera()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<BaseCamera> getAllActiveCamera(){
    
    return _getAllActiveCamera(reference.pointer, _id_getAllActiveCamera as _$jni.JMethodIDPtr).object(const _$jni.JListType($BaseCamera$Type()));
  }

  static final _id_getPrimaryActiveCamera = _class.instanceMethodId(
    r'getPrimaryActiveCamera',
    r'(Z)Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
  );

  static final _getPrimaryActiveCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera getPrimaryActiveCamera(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera getPrimaryActiveCamera(bool z, ){
    
    return _getPrimaryActiveCamera(reference.pointer, _id_getPrimaryActiveCamera as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $BaseCamera$Type());
  }

  static final _id_getAllFrozenCamera = _class.instanceMethodId(
    r'getAllFrozenCamera',
    r'()Ljava/util/List;',
  );

  static final _getAllFrozenCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.util.List getAllFrozenCamera()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<BaseCamera> getAllFrozenCamera(){
    
    return _getAllFrozenCamera(reference.pointer, _id_getAllFrozenCamera as _$jni.JMethodIDPtr).object(const _$jni.JListType($BaseCamera$Type()));
  }

  static final _id_getPrimaryFrozenCamera = _class.instanceMethodId(
    r'getPrimaryFrozenCamera',
    r'(Z)Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
  );

  static final _getPrimaryFrozenCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera getPrimaryFrozenCamera(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera getPrimaryFrozenCamera(bool z, ){
    
    return _getPrimaryFrozenCamera(reference.pointer, _id_getPrimaryFrozenCamera as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $BaseCamera$Type());
  }

  static final _id_getCameraByConnectType = _class.instanceMethodId(
    r'getCameraByConnectType',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
  );

  static final _getCameraByConnectType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera getCameraByConnectType(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera getCameraByConnectType(BaseCamera_ConnectType connectType, ){
    
    return _getCameraByConnectType(reference.pointer, _id_getCameraByConnectType as _$jni.JMethodIDPtr, connectType.reference.pointer).object(const $BaseCamera$Type());
  }

  static final _id_tryOpenCamera = _class.instanceMethodId(
    r'tryOpenCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V',
  );

  static final _tryOpenCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void tryOpenCamera(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  void tryOpenCamera(BaseCamera_ConnectType connectType, ){
    
    _tryOpenCamera(reference.pointer, _id_tryOpenCamera as _$jni.JMethodIDPtr, connectType.reference.pointer).check();
  }

  static final _id_destroyCamera = _class.instanceMethodId(
    r'destroyCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V',
  );

  static final _destroyCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void destroyCamera(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  void destroyCamera(BaseCamera_ConnectType connectType, ){
    
    _destroyCamera(reference.pointer, _id_destroyCamera as _$jni.JMethodIDPtr, connectType.reference.pointer).check();
  }

  static final _id_destroyCamera$1 = _class.instanceMethodId(
    r'destroyCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _destroyCamera$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void destroyCamera(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void destroyCamera$1(BaseCamera baseCamera, ){
    
    _destroyCamera$1(reference.pointer, _id_destroyCamera$1 as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_getBleConnectDelegate = _class.instanceMethodId(
    r'getBleConnectDelegate',
    r'()Lcom/arashivision/insta360/basecamera/camera/IBleConnectDelegate;',
  );

  static final _getBleConnectDelegate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.IBleConnectDelegate getBleConnectDelegate()`
  /// The returned object must be released after use, by calling the [release] method.
  IBleConnectDelegate getBleConnectDelegate(){
    
    return _getBleConnectDelegate(reference.pointer, _id_getBleConnectDelegate as _$jni.JMethodIDPtr).object(const $IBleConnectDelegate$Type());
  }

  static final _id_OooO00o$2 = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)Lcom/arashivision/insta360/basecamera/camera/BaseCamera;',
  );

  static final _OooO00o$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final com.arashivision.insta360.basecamera.camera.BaseCamera OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera OooO00o$2(BaseCamera_ConnectType connectType, ){
    
    return _OooO00o$2(reference.pointer, _id_OooO00o$2 as _$jni.JMethodIDPtr, connectType.reference.pointer).object(const $BaseCamera$Type());
  }

}
final class $CameraManager$Type extends _$jni.JObjType<CameraManager> {
  

  @_$jni.internal
  const $CameraManager$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/CameraManager;';

  @_$jni.internal
  @_$core.override
  CameraManager fromReference(_$jni.JReference reference) => CameraManager.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraManager$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraManager$Type) &&
        other is $CameraManager$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.CameraType`
class CameraType extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraType> $type;

  

  @_$jni.internal
  CameraType.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/CameraType');

      /// The type which includes information such as the signature of this class.
static const type = $CameraType$Type();
  static final _id_ONE =
      _class.staticFieldId(
        r'ONE',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType ONE`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get ONE => _id_ONE.get(_class, const $CameraType$Type());

  static final _id_ONEX =
      _class.staticFieldId(
        r'ONEX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType ONEX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get ONEX => _id_ONEX.get(_class, const $CameraType$Type());

  static final _id_ONEX2 =
      _class.staticFieldId(
        r'ONEX2',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType ONEX2`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get ONEX2 => _id_ONEX2.get(_class, const $CameraType$Type());

  static final _id_EVO =
      _class.staticFieldId(
        r'EVO',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType EVO`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get EVO => _id_EVO.get(_class, const $CameraType$Type());

  static final _id_AKIKO =
      _class.staticFieldId(
        r'AKIKO',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType AKIKO`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get AKIKO => _id_AKIKO.get(_class, const $CameraType$Type());

  static final _id_ONERS =
      _class.staticFieldId(
        r'ONERS',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType ONERS`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get ONERS => _id_ONERS.get(_class, const $CameraType$Type());

  static final _id_GO =
      _class.staticFieldId(
        r'GO',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType GO`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get GO => _id_GO.get(_class, const $CameraType$Type());

  static final _id_GO2 =
      _class.staticFieldId(
        r'GO2',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType GO2`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get GO2 => _id_GO2.get(_class, const $CameraType$Type());

  static final _id_GO3 =
      _class.staticFieldId(
        r'GO3',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType GO3`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get GO3 => _id_GO3.get(_class, const $CameraType$Type());

  static final _id_NANOS =
      _class.staticFieldId(
        r'NANOS',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType NANOS`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get NANOS => _id_NANOS.get(_class, const $CameraType$Type());

  static final _id_DRONE =
      _class.staticFieldId(
        r'DRONE',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType DRONE`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get DRONE => _id_DRONE.get(_class, const $CameraType$Type());

  static final _id_X3 =
      _class.staticFieldId(
        r'X3',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType X3`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get X3 => _id_X3.get(_class, const $CameraType$Type());

  static final _id_X4 =
      _class.staticFieldId(
        r'X4',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType X4`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get X4 => _id_X4.get(_class, const $CameraType$Type());

  static final _id_FMG =
      _class.staticFieldId(
        r'FMG',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType FMG`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get FMG => _id_FMG.get(_class, const $CameraType$Type());

  static final _id_IAC1 =
      _class.staticFieldId(
        r'IAC1',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType IAC1`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get IAC1 => _id_IAC1.get(_class, const $CameraType$Type());

  static final _id_IAC2 =
      _class.staticFieldId(
        r'IAC2',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType IAC2`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get IAC2 => _id_IAC2.get(_class, const $CameraType$Type());

  static final _id_UNKNOWN =
      _class.staticFieldId(
        r'UNKNOWN',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraType UNKNOWN`
  /// The returned object must be released after use, by calling the [release] method.
static CameraType get UNKNOWN => _id_UNKNOWN.get(_class, const $CameraType$Type());

  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'[Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.CameraType[] OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<CameraType> get OooO00o => _id_OooO00o.get(_class, const _$jni.JArrayType($CameraType$Type()));

  static final _id_type$1 =
      _class.instanceFieldId(
        r'type',
        r'Ljava/lang/String;',
      );
  /// from: `public final java.lang.String type`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get type$1 => _id_type$1.get(this, const _$jni.JStringType());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/CameraType;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraType[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<CameraType> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($CameraType$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/CameraType;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraType valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraType valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraType$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;ILjava/lang/String;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(java.lang.String string, int i, java.lang.String string1)`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraType(_$jni.JString string, int i, _$jni.JString string1, ) {
    
    return CameraType.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i, string1.reference.pointer).reference
    );
  }

  static final _id_getForType = _class.staticMethodId(
    r'getForType',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/CameraType;',
  );

  static final _getForType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraType getForType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraType getForType(_$jni.JString string, ){
    
    return _getForType(_class.reference.pointer, _id_getForType as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraType$Type());
  }



}
final class $CameraType$Type extends _$jni.JObjType<CameraType> {
  

  @_$jni.internal
  const $CameraType$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/CameraType;';

  @_$jni.internal
  @_$core.override
  CameraType fromReference(_$jni.JReference reference) => CameraType.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraType$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraType$Type) &&
        other is $CameraType$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.CameraWifiPrefix`
class CameraWifiPrefix extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraWifiPrefix> $type;

  

  @_$jni.internal
  CameraWifiPrefix.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/CameraWifiPrefix');

      /// The type which includes information such as the signature of this class.
static const type = $CameraWifiPrefix$Type();
  static final _id_NANOS_PREFIX =
      _class.staticFieldId(
        r'NANOS_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix NANOS_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get NANOS_PREFIX => _id_NANOS_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_AKIKO_PREFIX =
      _class.staticFieldId(
        r'AKIKO_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix AKIKO_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get AKIKO_PREFIX => _id_AKIKO_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_ONERS_PREFIX =
      _class.staticFieldId(
        r'ONERS_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix ONERS_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get ONERS_PREFIX => _id_ONERS_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_ONEX_PREFIX =
      _class.staticFieldId(
        r'ONEX_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix ONEX_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get ONEX_PREFIX => _id_ONEX_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_ONEX2_PREFIX =
      _class.staticFieldId(
        r'ONEX2_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix ONEX2_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get ONEX2_PREFIX => _id_ONEX2_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_GO2_PREFIX =
      _class.staticFieldId(
        r'GO2_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix GO2_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get GO2_PREFIX => _id_GO2_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_GO3_PREFIX =
      _class.staticFieldId(
        r'GO3_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix GO3_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get GO3_PREFIX => _id_GO3_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_DRONE_PREFIX =
      _class.staticFieldId(
        r'DRONE_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix DRONE_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get DRONE_PREFIX => _id_DRONE_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_X3_PREFIX =
      _class.staticFieldId(
        r'X3_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix X3_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get X3_PREFIX => _id_X3_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_X4_PREFIX =
      _class.staticFieldId(
        r'X4_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix X4_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get X4_PREFIX => _id_X4_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_FMG_PREFIX =
      _class.staticFieldId(
        r'FMG_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix FMG_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get FMG_PREFIX => _id_FMG_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_IAC1_PREFIX =
      _class.staticFieldId(
        r'IAC1_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix IAC1_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get IAC1_PREFIX => _id_IAC1_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_IAC2_PREFIX =
      _class.staticFieldId(
        r'IAC2_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix IAC2_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get IAC2_PREFIX => _id_IAC2_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_UNKNOWN_PREFIX =
      _class.staticFieldId(
        r'UNKNOWN_PREFIX',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix UNKNOWN_PREFIX`
  /// The returned object must be released after use, by calling the [release] method.
static CameraWifiPrefix get UNKNOWN_PREFIX => _id_UNKNOWN_PREFIX.get(_class, const $CameraWifiPrefix$Type());

  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'Ljava/util/List;',
      );
  /// from: `static public final java.util.List OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JList<CameraWifiPrefix> get OooO00o => _id_OooO00o.get(_class, const _$jni.JListType($CameraWifiPrefix$Type()));

  static final _id_OooO0O0 =
      _class.staticFieldId(
        r'OooO0O0',
        r'[Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.CameraWifiPrefix[] OooO0O0`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<CameraWifiPrefix> get OooO0O0 => _id_OooO0O0.get(_class, const _$jni.JArrayType($CameraWifiPrefix$Type()));

  static final _id_prefix =
      _class.instanceFieldId(
        r'prefix',
        r'Ljava/lang/String;',
      );
  /// from: `public final java.lang.String prefix`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get prefix => _id_prefix.get(this, const _$jni.JStringType());

  static final _id_OooO0OO =
      _class.instanceFieldId(
        r'OooO0OO',
        r'Lcom/arashivision/insta360/basecamera/camera/CameraType;',
      );
  /// from: `public final com.arashivision.insta360.basecamera.camera.CameraType OooO0OO`
  /// The returned object must be released after use, by calling the [release] method.
CameraType get OooO0OO => _id_OooO0OO.get(this, const $CameraType$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraWifiPrefix[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<CameraWifiPrefix> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($CameraWifiPrefix$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraWifiPrefix valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraWifiPrefix valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraWifiPrefix$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;ILjava/lang/String;Lcom/arashivision/insta360/basecamera/camera/CameraType;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(java.lang.String string, int i, java.lang.String string1, com.arashivision.insta360.basecamera.camera.CameraType cameraType)`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraWifiPrefix(_$jni.JString string, int i, _$jni.JString string1, CameraType cameraType, ) {
    
    return CameraWifiPrefix.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i, string1.reference.pointer, cameraType.reference.pointer).reference
    );
  }

  static final _id_getCameraWifiPrefixByName = _class.staticMethodId(
    r'getCameraWifiPrefixByName',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
  );

  static final _getCameraWifiPrefixByName = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraWifiPrefix getCameraWifiPrefixByName(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraWifiPrefix getCameraWifiPrefixByName(_$jni.JString string, ){
    
    return _getCameraWifiPrefixByName(_class.reference.pointer, _id_getCameraWifiPrefixByName as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraWifiPrefix$Type());
  }

  static final _id_getCameraWifiPrefixByCameraType = _class.staticMethodId(
    r'getCameraWifiPrefixByCameraType',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;',
  );

  static final _getCameraWifiPrefixByCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.CameraWifiPrefix getCameraWifiPrefixByCameraType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraWifiPrefix getCameraWifiPrefixByCameraType(_$jni.JString string, ){
    
    return _getCameraWifiPrefixByCameraType(_class.reference.pointer, _id_getCameraWifiPrefixByCameraType as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraWifiPrefix$Type());
  }

  static final _id_OooO00o$1 = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;)I',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public int OooO00o(com.arashivision.insta360.basecamera.camera.CameraWifiPrefix cameraWifiPrefix)`
  static int OooO00o$1(CameraWifiPrefix cameraWifiPrefix, ){
    
    return _OooO00o$1(_class.reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, cameraWifiPrefix.reference.pointer).integer;
  }



  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $CameraWifiPrefix$Type extends _$jni.JObjType<CameraWifiPrefix> {
  

  @_$jni.internal
  const $CameraWifiPrefix$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/CameraWifiPrefix;';

  @_$jni.internal
  @_$core.override
  CameraWifiPrefix fromReference(_$jni.JReference reference) => CameraWifiPrefix.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraWifiPrefix$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraWifiPrefix$Type) &&
        other is $CameraWifiPrefix$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback`
class IBaseCameraChangedCallback extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<IBaseCameraChangedCallback> $type;

  

  @_$jni.internal
  IBaseCameraChangedCallback.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback');

      /// The type which includes information such as the signature of this class.
static const type = $IBaseCameraChangedCallback$Type();
  static final _id_onCameraAuthorizationStateChanged = _class.instanceMethodId(
    r'onCameraAuthorizationStateChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
  );

  static final _onCameraAuthorizationStateChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraAuthorizationStateChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i)`
  void onCameraAuthorizationStateChanged(BaseCamera baseCamera, int i, ){
    
    _onCameraAuthorizationStateChanged(reference.pointer, _id_onCameraAuthorizationStateChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i).check();
  }

  static final _id_onCameraBatteryLow = _class.instanceMethodId(
    r'onCameraBatteryLow',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraBatteryLow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraBatteryLow(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraBatteryLow(BaseCamera baseCamera, ){
    
    _onCameraBatteryLow(reference.pointer, _id_onCameraBatteryLow as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraBatteryUpdate = _class.instanceMethodId(
    r'onCameraBatteryUpdate',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraBatteryUpdate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraBatteryUpdate(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraBatteryUpdate(BaseCamera baseCamera, ){
    
    _onCameraBatteryUpdate(reference.pointer, _id_onCameraBatteryUpdate as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraCaptureStatusChanged = _class.instanceMethodId(
    r'onCameraCaptureStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;)V',
  );

  static final _onCameraCaptureStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraCaptureStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType captureType)`
  void onCameraCaptureStatusChanged(BaseCamera baseCamera, BaseCamera_CaptureType captureType, ){
    
    _onCameraCaptureStatusChanged(reference.pointer, _id_onCameraCaptureStatusChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, captureType.reference.pointer).check();
  }

  static final _id_onCameraSDCardStateChanged = _class.instanceMethodId(
    r'onCameraSDCardStateChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;II)V',
  );

  static final _onCameraSDCardStateChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public abstract void onCameraSDCardStateChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i, int i1)`
  void onCameraSDCardStateChanged(BaseCamera baseCamera, int i, int i1, ){
    
    _onCameraSDCardStateChanged(reference.pointer, _id_onCameraSDCardStateChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i, i1).check();
  }

  static final _id_onCameraStatusChanged = _class.instanceMethodId(
    r'onCameraStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;I)V',
  );

  static final _onCameraStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.BaseCamera$CameraStatus cameraStatus, int i)`
  void onCameraStatusChanged(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i, ){
    
    _onCameraStatusChanged(reference.pointer, _id_onCameraStatusChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, cameraStatus.reference.pointer, i).check();
  }

  static final _id_onCameraSyncStatusChanged = _class.instanceMethodId(
    r'onCameraSyncStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V',
  );

  static final _onCameraSyncStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraSyncStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus, int i)`
  void onCameraSyncStatusChanged(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i, ){
    
    _onCameraSyncStatusChanged(reference.pointer, _id_onCameraSyncStatusChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, cameraSyncStatus.reference.pointer, i).check();
  }

  static final _id_onCameraCheckStart = _class.instanceMethodId(
    r'onCameraCheckStart',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Ljava/lang/String;)V',
  );

  static final _onCameraCheckStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraCheckStart(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, java.lang.String string)`
  void onCameraCheckStart(BaseCamera baseCamera, _$jni.JString string, ){
    
    _onCameraCheckStart(reference.pointer, _id_onCameraCheckStart as _$jni.JMethodIDPtr, baseCamera.reference.pointer, string.reference.pointer).check();
  }

  static final _id_onCameraStorageChanged = _class.instanceMethodId(
    r'onCameraStorageChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;JJ)V',
  );

  static final _onCameraStorageChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int64, _$jni.Int64)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public abstract void onCameraStorageChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, long j, long j1)`
  void onCameraStorageChanged(BaseCamera baseCamera, int j, int j1, ){
    
    _onCameraStorageChanged(reference.pointer, _id_onCameraStorageChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, j, j1).check();
  }

  static final _id_onCameraTemperatureChanged = _class.instanceMethodId(
    r'onCameraTemperatureChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
  );

  static final _onCameraTemperatureChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraTemperatureChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i)`
  void onCameraTemperatureChanged(BaseCamera baseCamera, int i, ){
    
    _onCameraTemperatureChanged(reference.pointer, _id_onCameraTemperatureChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i).check();
  }

  static final _id_onCameraLiveviewBeginRotate = _class.instanceMethodId(
    r'onCameraLiveviewBeginRotate',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraLiveviewBeginRotate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraLiveviewBeginRotate(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraLiveviewBeginRotate(BaseCamera baseCamera, ){
    
    _onCameraLiveviewBeginRotate(reference.pointer, _id_onCameraLiveviewBeginRotate as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraExposureUpdate = _class.instanceMethodId(
    r'onCameraExposureUpdate',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
  );

  static final _onCameraExposureUpdate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraExposureUpdate(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i)`
  void onCameraExposureUpdate(BaseCamera baseCamera, int i, ){
    
    _onCameraExposureUpdate(reference.pointer, _id_onCameraExposureUpdate as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i).check();
  }

  static final _id_onCameraSensorModeChanged = _class.instanceMethodId(
    r'onCameraSensorModeChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraSensorModeChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraSensorModeChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraSensorModeChanged(BaseCamera baseCamera, ){
    
    _onCameraSensorModeChanged(reference.pointer, _id_onCameraSensorModeChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraChargeBoxConnectedStateUpdate = _class.instanceMethodId(
    r'onCameraChargeBoxConnectedStateUpdate',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraChargeBoxConnectedStateUpdate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraChargeBoxConnectedStateUpdate(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraChargeBoxConnectedStateUpdate(BaseCamera baseCamera, ){
    
    _onCameraChargeBoxConnectedStateUpdate(reference.pointer, _id_onCameraChargeBoxConnectedStateUpdate as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraChargeBoxVersionChanged = _class.instanceMethodId(
    r'onCameraChargeBoxVersionChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onCameraChargeBoxVersionChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraChargeBoxVersionChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onCameraChargeBoxVersionChanged(BaseCamera baseCamera, ){
    
    _onCameraChargeBoxVersionChanged(reference.pointer, _id_onCameraChargeBoxVersionChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onCameraUpgradeStateChanged = _class.instanceMethodId(
    r'onCameraUpgradeStateChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/UpgradeState;)V',
  );

  static final _onCameraUpgradeStateChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraUpgradeStateChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.onecamera.cameranotification.UpgradeState upgradeState)`
  void onCameraUpgradeStateChanged(BaseCamera baseCamera, _$jni.JObject upgradeState, ){
    
    _onCameraUpgradeStateChanged(reference.pointer, _id_onCameraUpgradeStateChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, upgradeState.reference.pointer).check();
  }

  static final _id_onCameraPreviewStreamParamsChanged = _class.instanceMethodId(
    r'onCameraPreviewStreamParamsChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)V',
  );

  static final _onCameraPreviewStreamParamsChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onCameraPreviewStreamParamsChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, boolean z)`
  void onCameraPreviewStreamParamsChanged(BaseCamera baseCamera, bool z, ){
    
    _onCameraPreviewStreamParamsChanged(reference.pointer, _id_onCameraPreviewStreamParamsChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, z ? 1 : 0).check();
  }

  static final _id_onCameraDetectFaceChanged = _class.instanceMethodId(
    r'onCameraDetectFaceChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDetectFace;)V',
  );

  static final _onCameraDetectFaceChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraDetectFaceChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.onecamera.cameranotification.NotifyDetectFace notifyDetectFace)`
  void onCameraDetectFaceChanged(BaseCamera baseCamera, _$jni.JObject notifyDetectFace, ){
    
    _onCameraDetectFaceChanged(reference.pointer, _id_onCameraDetectFaceChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, notifyDetectFace.reference.pointer).check();
  }

  static final _id_onCameraDarkEisStatusChanged = _class.instanceMethodId(
    r'onCameraDarkEisStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus;)V',
  );

  static final _onCameraDarkEisStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraDarkEisStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.onecamera.cameranotification.NotifyDarkEisStatus notifyDarkEisStatus)`
  void onCameraDarkEisStatusChanged(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus, ){
    
    _onCameraDarkEisStatusChanged(reference.pointer, _id_onCameraDarkEisStatusChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer, notifyDarkEisStatus.reference.pointer).check();
  }

  static final _id_readyToCaptureWhileRecording = _class.instanceMethodId(
    r'readyToCaptureWhileRecording',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _readyToCaptureWhileRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void readyToCaptureWhileRecording(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void readyToCaptureWhileRecording(BaseCamera baseCamera, ){
    
    _readyToCaptureWhileRecording(reference.pointer, _id_readyToCaptureWhileRecording as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgModeChanged = _class.instanceMethodId(
    r'onFmgModeChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgModeChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgModeChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgModeChanged(BaseCamera baseCamera, ){
    
    _onFmgModeChanged(reference.pointer, _id_onFmgModeChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgLimitYawChanged = _class.instanceMethodId(
    r'onFmgLimitYawChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgLimitYawChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgLimitYawChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgLimitYawChanged(BaseCamera baseCamera, ){
    
    _onFmgLimitYawChanged(reference.pointer, _id_onFmgLimitYawChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgLimitPitchChanged = _class.instanceMethodId(
    r'onFmgLimitPitchChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgLimitPitchChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgLimitPitchChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgLimitPitchChanged(BaseCamera baseCamera, ){
    
    _onFmgLimitPitchChanged(reference.pointer, _id_onFmgLimitPitchChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgStallChanged = _class.instanceMethodId(
    r'onFmgStallChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgStallChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgStallChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgStallChanged(BaseCamera baseCamera, ){
    
    _onFmgStallChanged(reference.pointer, _id_onFmgStallChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgPayloadChanged = _class.instanceMethodId(
    r'onFmgPayloadChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgPayloadChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgPayloadChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgPayloadChanged(BaseCamera baseCamera, ){
    
    _onFmgPayloadChanged(reference.pointer, _id_onFmgPayloadChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgImbalanceChanged = _class.instanceMethodId(
    r'onFmgImbalanceChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgImbalanceChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgImbalanceChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgImbalanceChanged(BaseCamera baseCamera, ){
    
    _onFmgImbalanceChanged(reference.pointer, _id_onFmgImbalanceChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgLowTemperatureChanged = _class.instanceMethodId(
    r'onFmgLowTemperatureChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgLowTemperatureChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgLowTemperatureChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgLowTemperatureChanged(BaseCamera baseCamera, ){
    
    _onFmgLowTemperatureChanged(reference.pointer, _id_onFmgLowTemperatureChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgSleepChanged = _class.instanceMethodId(
    r'onFmgSleepChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgSleepChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgSleepChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgSleepChanged(BaseCamera baseCamera, ){
    
    _onFmgSleepChanged(reference.pointer, _id_onFmgSleepChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_onFmgHvModeChanged = _class.instanceMethodId(
    r'onFmgHvModeChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _onFmgHvModeChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFmgHvModeChanged(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void onFmgHvModeChanged(BaseCamera baseCamera, ){
    
    _onFmgHvModeChanged(reference.pointer, _id_onFmgHvModeChanged as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $IBaseCameraChangedCallback> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onCameraAuthorizationStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V') {
          _$impls[$p]!.onCameraAuthorizationStateChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraBatteryLow(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraBatteryLow(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraBatteryUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraBatteryUpdate(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraCaptureStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;)V') {
          _$impls[$p]!.onCameraCaptureStatusChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const $BaseCamera_CaptureType$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraSDCardStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;II)V') {
          _$impls[$p]!.onCameraSDCardStateChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;I)V') {
          _$impls[$p]!.onCameraStatusChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const $BaseCamera_CameraStatus$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraSyncStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V') {
          _$impls[$p]!.onCameraSyncStatusChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const $BaseCamera_CameraSyncStatus$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraCheckStart(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Ljava/lang/String;)V') {
          _$impls[$p]!.onCameraCheckStart(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraStorageChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;JJ)V') {
          _$impls[$p]!.onCameraStorageChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[2].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraTemperatureChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V') {
          _$impls[$p]!.onCameraTemperatureChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraLiveviewBeginRotate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraLiveviewBeginRotate(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraExposureUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V') {
          _$impls[$p]!.onCameraExposureUpdate(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraSensorModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraSensorModeChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraChargeBoxConnectedStateUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraChargeBoxConnectedStateUpdate(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraChargeBoxVersionChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onCameraChargeBoxVersionChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraUpgradeStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/UpgradeState;)V') {
          _$impls[$p]!.onCameraUpgradeStateChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraPreviewStreamParamsChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)V') {
          _$impls[$p]!.onCameraPreviewStreamParamsChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraDetectFaceChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDetectFace;)V') {
          _$impls[$p]!.onCameraDetectFaceChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraDarkEisStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus;)V') {
          _$impls[$p]!.onCameraDarkEisStatusChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'readyToCaptureWhileRecording(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.readyToCaptureWhileRecording(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgModeChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgLimitYawChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgLimitYawChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgLimitPitchChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgLimitPitchChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgStallChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgStallChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgPayloadChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgPayloadChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgImbalanceChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgImbalanceChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgLowTemperatureChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgLowTemperatureChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgSleepChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgSleepChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFmgHvModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.onFmgHvModeChanged(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $IBaseCameraChangedCallback $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback',
      $p,
      _$invokePointer,
      [
        if ($impl.onCameraAuthorizationStateChanged$async) r'onCameraAuthorizationStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
        if ($impl.onCameraBatteryLow$async) r'onCameraBatteryLow(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraBatteryUpdate$async) r'onCameraBatteryUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraCaptureStatusChanged$async) r'onCameraCaptureStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;)V',
        if ($impl.onCameraSDCardStateChanged$async) r'onCameraSDCardStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;II)V',
        if ($impl.onCameraStatusChanged$async) r'onCameraStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraStatus;I)V',
        if ($impl.onCameraSyncStatusChanged$async) r'onCameraSyncStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V',
        if ($impl.onCameraCheckStart$async) r'onCameraCheckStart(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Ljava/lang/String;)V',
        if ($impl.onCameraStorageChanged$async) r'onCameraStorageChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;JJ)V',
        if ($impl.onCameraTemperatureChanged$async) r'onCameraTemperatureChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
        if ($impl.onCameraLiveviewBeginRotate$async) r'onCameraLiveviewBeginRotate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraExposureUpdate$async) r'onCameraExposureUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;I)V',
        if ($impl.onCameraSensorModeChanged$async) r'onCameraSensorModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraChargeBoxConnectedStateUpdate$async) r'onCameraChargeBoxConnectedStateUpdate(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraChargeBoxVersionChanged$async) r'onCameraChargeBoxVersionChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onCameraUpgradeStateChanged$async) r'onCameraUpgradeStateChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/UpgradeState;)V',
        if ($impl.onCameraPreviewStreamParamsChanged$async) r'onCameraPreviewStreamParamsChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)V',
        if ($impl.onCameraDetectFaceChanged$async) r'onCameraDetectFaceChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDetectFace;)V',
        if ($impl.onCameraDarkEisStatusChanged$async) r'onCameraDarkEisStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus;)V',
        if ($impl.readyToCaptureWhileRecording$async) r'readyToCaptureWhileRecording(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgModeChanged$async) r'onFmgModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgLimitYawChanged$async) r'onFmgLimitYawChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgLimitPitchChanged$async) r'onFmgLimitPitchChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgStallChanged$async) r'onFmgStallChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgPayloadChanged$async) r'onFmgPayloadChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgImbalanceChanged$async) r'onFmgImbalanceChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgLowTemperatureChanged$async) r'onFmgLowTemperatureChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgSleepChanged$async) r'onFmgSleepChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.onFmgHvModeChanged$async) r'onFmgHvModeChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory IBaseCameraChangedCallback.implement(
    $IBaseCameraChangedCallback $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return IBaseCameraChangedCallback.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $IBaseCameraChangedCallback {
  factory $IBaseCameraChangedCallback(
    {required void Function(BaseCamera baseCamera, int i) onCameraAuthorizationStateChanged, bool onCameraAuthorizationStateChanged$async,
    required void Function(BaseCamera baseCamera) onCameraBatteryLow, bool onCameraBatteryLow$async,
    required void Function(BaseCamera baseCamera) onCameraBatteryUpdate, bool onCameraBatteryUpdate$async,
    required void Function(BaseCamera baseCamera, BaseCamera_CaptureType captureType) onCameraCaptureStatusChanged, bool onCameraCaptureStatusChanged$async,
    required void Function(BaseCamera baseCamera, int i, int i1) onCameraSDCardStateChanged, bool onCameraSDCardStateChanged$async,
    required void Function(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i) onCameraStatusChanged, bool onCameraStatusChanged$async,
    required void Function(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i) onCameraSyncStatusChanged, bool onCameraSyncStatusChanged$async,
    required void Function(BaseCamera baseCamera, _$jni.JString string) onCameraCheckStart, bool onCameraCheckStart$async,
    required void Function(BaseCamera baseCamera, int j, int j1) onCameraStorageChanged, bool onCameraStorageChanged$async,
    required void Function(BaseCamera baseCamera, int i) onCameraTemperatureChanged, bool onCameraTemperatureChanged$async,
    required void Function(BaseCamera baseCamera) onCameraLiveviewBeginRotate, bool onCameraLiveviewBeginRotate$async,
    required void Function(BaseCamera baseCamera, int i) onCameraExposureUpdate, bool onCameraExposureUpdate$async,
    required void Function(BaseCamera baseCamera) onCameraSensorModeChanged, bool onCameraSensorModeChanged$async,
    required void Function(BaseCamera baseCamera) onCameraChargeBoxConnectedStateUpdate, bool onCameraChargeBoxConnectedStateUpdate$async,
    required void Function(BaseCamera baseCamera) onCameraChargeBoxVersionChanged, bool onCameraChargeBoxVersionChanged$async,
    required void Function(BaseCamera baseCamera, _$jni.JObject upgradeState) onCameraUpgradeStateChanged, bool onCameraUpgradeStateChanged$async,
    required void Function(BaseCamera baseCamera, bool z) onCameraPreviewStreamParamsChanged, bool onCameraPreviewStreamParamsChanged$async,
    required void Function(BaseCamera baseCamera, _$jni.JObject notifyDetectFace) onCameraDetectFaceChanged, bool onCameraDetectFaceChanged$async,
    required void Function(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus) onCameraDarkEisStatusChanged, bool onCameraDarkEisStatusChanged$async,
    required void Function(BaseCamera baseCamera) readyToCaptureWhileRecording, bool readyToCaptureWhileRecording$async,
    required void Function(BaseCamera baseCamera) onFmgModeChanged, bool onFmgModeChanged$async,
    required void Function(BaseCamera baseCamera) onFmgLimitYawChanged, bool onFmgLimitYawChanged$async,
    required void Function(BaseCamera baseCamera) onFmgLimitPitchChanged, bool onFmgLimitPitchChanged$async,
    required void Function(BaseCamera baseCamera) onFmgStallChanged, bool onFmgStallChanged$async,
    required void Function(BaseCamera baseCamera) onFmgPayloadChanged, bool onFmgPayloadChanged$async,
    required void Function(BaseCamera baseCamera) onFmgImbalanceChanged, bool onFmgImbalanceChanged$async,
    required void Function(BaseCamera baseCamera) onFmgLowTemperatureChanged, bool onFmgLowTemperatureChanged$async,
    required void Function(BaseCamera baseCamera) onFmgSleepChanged, bool onFmgSleepChanged$async,
    required void Function(BaseCamera baseCamera) onFmgHvModeChanged, bool onFmgHvModeChanged$async,}
  ) = _$IBaseCameraChangedCallback;

  

  void onCameraAuthorizationStateChanged(BaseCamera baseCamera, int i);
  bool get onCameraAuthorizationStateChanged$async => false;
  void onCameraBatteryLow(BaseCamera baseCamera);
  bool get onCameraBatteryLow$async => false;
  void onCameraBatteryUpdate(BaseCamera baseCamera);
  bool get onCameraBatteryUpdate$async => false;
  void onCameraCaptureStatusChanged(BaseCamera baseCamera, BaseCamera_CaptureType captureType);
  bool get onCameraCaptureStatusChanged$async => false;
  void onCameraSDCardStateChanged(BaseCamera baseCamera, int i, int i1);
  bool get onCameraSDCardStateChanged$async => false;
  void onCameraStatusChanged(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i);
  bool get onCameraStatusChanged$async => false;
  void onCameraSyncStatusChanged(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i);
  bool get onCameraSyncStatusChanged$async => false;
  void onCameraCheckStart(BaseCamera baseCamera, _$jni.JString string);
  bool get onCameraCheckStart$async => false;
  void onCameraStorageChanged(BaseCamera baseCamera, int j, int j1);
  bool get onCameraStorageChanged$async => false;
  void onCameraTemperatureChanged(BaseCamera baseCamera, int i);
  bool get onCameraTemperatureChanged$async => false;
  void onCameraLiveviewBeginRotate(BaseCamera baseCamera);
  bool get onCameraLiveviewBeginRotate$async => false;
  void onCameraExposureUpdate(BaseCamera baseCamera, int i);
  bool get onCameraExposureUpdate$async => false;
  void onCameraSensorModeChanged(BaseCamera baseCamera);
  bool get onCameraSensorModeChanged$async => false;
  void onCameraChargeBoxConnectedStateUpdate(BaseCamera baseCamera);
  bool get onCameraChargeBoxConnectedStateUpdate$async => false;
  void onCameraChargeBoxVersionChanged(BaseCamera baseCamera);
  bool get onCameraChargeBoxVersionChanged$async => false;
  void onCameraUpgradeStateChanged(BaseCamera baseCamera, _$jni.JObject upgradeState);
  bool get onCameraUpgradeStateChanged$async => false;
  void onCameraPreviewStreamParamsChanged(BaseCamera baseCamera, bool z);
  bool get onCameraPreviewStreamParamsChanged$async => false;
  void onCameraDetectFaceChanged(BaseCamera baseCamera, _$jni.JObject notifyDetectFace);
  bool get onCameraDetectFaceChanged$async => false;
  void onCameraDarkEisStatusChanged(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus);
  bool get onCameraDarkEisStatusChanged$async => false;
  void readyToCaptureWhileRecording(BaseCamera baseCamera);
  bool get readyToCaptureWhileRecording$async => false;
  void onFmgModeChanged(BaseCamera baseCamera);
  bool get onFmgModeChanged$async => false;
  void onFmgLimitYawChanged(BaseCamera baseCamera);
  bool get onFmgLimitYawChanged$async => false;
  void onFmgLimitPitchChanged(BaseCamera baseCamera);
  bool get onFmgLimitPitchChanged$async => false;
  void onFmgStallChanged(BaseCamera baseCamera);
  bool get onFmgStallChanged$async => false;
  void onFmgPayloadChanged(BaseCamera baseCamera);
  bool get onFmgPayloadChanged$async => false;
  void onFmgImbalanceChanged(BaseCamera baseCamera);
  bool get onFmgImbalanceChanged$async => false;
  void onFmgLowTemperatureChanged(BaseCamera baseCamera);
  bool get onFmgLowTemperatureChanged$async => false;
  void onFmgSleepChanged(BaseCamera baseCamera);
  bool get onFmgSleepChanged$async => false;
  void onFmgHvModeChanged(BaseCamera baseCamera);
  bool get onFmgHvModeChanged$async => false;
}

final class _$IBaseCameraChangedCallback with $IBaseCameraChangedCallback {
  _$IBaseCameraChangedCallback(
    {required void Function(BaseCamera baseCamera, int i) onCameraAuthorizationStateChanged, this.onCameraAuthorizationStateChanged$async = false,
    required void Function(BaseCamera baseCamera) onCameraBatteryLow, this.onCameraBatteryLow$async = false,
    required void Function(BaseCamera baseCamera) onCameraBatteryUpdate, this.onCameraBatteryUpdate$async = false,
    required void Function(BaseCamera baseCamera, BaseCamera_CaptureType captureType) onCameraCaptureStatusChanged, this.onCameraCaptureStatusChanged$async = false,
    required void Function(BaseCamera baseCamera, int i, int i1) onCameraSDCardStateChanged, this.onCameraSDCardStateChanged$async = false,
    required void Function(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i) onCameraStatusChanged, this.onCameraStatusChanged$async = false,
    required void Function(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i) onCameraSyncStatusChanged, this.onCameraSyncStatusChanged$async = false,
    required void Function(BaseCamera baseCamera, _$jni.JString string) onCameraCheckStart, this.onCameraCheckStart$async = false,
    required void Function(BaseCamera baseCamera, int j, int j1) onCameraStorageChanged, this.onCameraStorageChanged$async = false,
    required void Function(BaseCamera baseCamera, int i) onCameraTemperatureChanged, this.onCameraTemperatureChanged$async = false,
    required void Function(BaseCamera baseCamera) onCameraLiveviewBeginRotate, this.onCameraLiveviewBeginRotate$async = false,
    required void Function(BaseCamera baseCamera, int i) onCameraExposureUpdate, this.onCameraExposureUpdate$async = false,
    required void Function(BaseCamera baseCamera) onCameraSensorModeChanged, this.onCameraSensorModeChanged$async = false,
    required void Function(BaseCamera baseCamera) onCameraChargeBoxConnectedStateUpdate, this.onCameraChargeBoxConnectedStateUpdate$async = false,
    required void Function(BaseCamera baseCamera) onCameraChargeBoxVersionChanged, this.onCameraChargeBoxVersionChanged$async = false,
    required void Function(BaseCamera baseCamera, _$jni.JObject upgradeState) onCameraUpgradeStateChanged, this.onCameraUpgradeStateChanged$async = false,
    required void Function(BaseCamera baseCamera, bool z) onCameraPreviewStreamParamsChanged, this.onCameraPreviewStreamParamsChanged$async = false,
    required void Function(BaseCamera baseCamera, _$jni.JObject notifyDetectFace) onCameraDetectFaceChanged, this.onCameraDetectFaceChanged$async = false,
    required void Function(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus) onCameraDarkEisStatusChanged, this.onCameraDarkEisStatusChanged$async = false,
    required void Function(BaseCamera baseCamera) readyToCaptureWhileRecording, this.readyToCaptureWhileRecording$async = false,
    required void Function(BaseCamera baseCamera) onFmgModeChanged, this.onFmgModeChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgLimitYawChanged, this.onFmgLimitYawChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgLimitPitchChanged, this.onFmgLimitPitchChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgStallChanged, this.onFmgStallChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgPayloadChanged, this.onFmgPayloadChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgImbalanceChanged, this.onFmgImbalanceChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgLowTemperatureChanged, this.onFmgLowTemperatureChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgSleepChanged, this.onFmgSleepChanged$async = false,
    required void Function(BaseCamera baseCamera) onFmgHvModeChanged, this.onFmgHvModeChanged$async = false,}
  ) :  _onCameraAuthorizationStateChanged = onCameraAuthorizationStateChanged, _onCameraBatteryLow = onCameraBatteryLow, _onCameraBatteryUpdate = onCameraBatteryUpdate, _onCameraCaptureStatusChanged = onCameraCaptureStatusChanged, _onCameraSDCardStateChanged = onCameraSDCardStateChanged, _onCameraStatusChanged = onCameraStatusChanged, _onCameraSyncStatusChanged = onCameraSyncStatusChanged, _onCameraCheckStart = onCameraCheckStart, _onCameraStorageChanged = onCameraStorageChanged, _onCameraTemperatureChanged = onCameraTemperatureChanged, _onCameraLiveviewBeginRotate = onCameraLiveviewBeginRotate, _onCameraExposureUpdate = onCameraExposureUpdate, _onCameraSensorModeChanged = onCameraSensorModeChanged, _onCameraChargeBoxConnectedStateUpdate = onCameraChargeBoxConnectedStateUpdate, _onCameraChargeBoxVersionChanged = onCameraChargeBoxVersionChanged, _onCameraUpgradeStateChanged = onCameraUpgradeStateChanged, _onCameraPreviewStreamParamsChanged = onCameraPreviewStreamParamsChanged, _onCameraDetectFaceChanged = onCameraDetectFaceChanged, _onCameraDarkEisStatusChanged = onCameraDarkEisStatusChanged, _readyToCaptureWhileRecording = readyToCaptureWhileRecording, _onFmgModeChanged = onFmgModeChanged, _onFmgLimitYawChanged = onFmgLimitYawChanged, _onFmgLimitPitchChanged = onFmgLimitPitchChanged, _onFmgStallChanged = onFmgStallChanged, _onFmgPayloadChanged = onFmgPayloadChanged, _onFmgImbalanceChanged = onFmgImbalanceChanged, _onFmgLowTemperatureChanged = onFmgLowTemperatureChanged, _onFmgSleepChanged = onFmgSleepChanged, _onFmgHvModeChanged = onFmgHvModeChanged;

  

  final void Function(BaseCamera baseCamera, int i) _onCameraAuthorizationStateChanged;
  final bool onCameraAuthorizationStateChanged$async;
  final void Function(BaseCamera baseCamera) _onCameraBatteryLow;
  final bool onCameraBatteryLow$async;
  final void Function(BaseCamera baseCamera) _onCameraBatteryUpdate;
  final bool onCameraBatteryUpdate$async;
  final void Function(BaseCamera baseCamera, BaseCamera_CaptureType captureType) _onCameraCaptureStatusChanged;
  final bool onCameraCaptureStatusChanged$async;
  final void Function(BaseCamera baseCamera, int i, int i1) _onCameraSDCardStateChanged;
  final bool onCameraSDCardStateChanged$async;
  final void Function(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i) _onCameraStatusChanged;
  final bool onCameraStatusChanged$async;
  final void Function(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i) _onCameraSyncStatusChanged;
  final bool onCameraSyncStatusChanged$async;
  final void Function(BaseCamera baseCamera, _$jni.JString string) _onCameraCheckStart;
  final bool onCameraCheckStart$async;
  final void Function(BaseCamera baseCamera, int j, int j1) _onCameraStorageChanged;
  final bool onCameraStorageChanged$async;
  final void Function(BaseCamera baseCamera, int i) _onCameraTemperatureChanged;
  final bool onCameraTemperatureChanged$async;
  final void Function(BaseCamera baseCamera) _onCameraLiveviewBeginRotate;
  final bool onCameraLiveviewBeginRotate$async;
  final void Function(BaseCamera baseCamera, int i) _onCameraExposureUpdate;
  final bool onCameraExposureUpdate$async;
  final void Function(BaseCamera baseCamera) _onCameraSensorModeChanged;
  final bool onCameraSensorModeChanged$async;
  final void Function(BaseCamera baseCamera) _onCameraChargeBoxConnectedStateUpdate;
  final bool onCameraChargeBoxConnectedStateUpdate$async;
  final void Function(BaseCamera baseCamera) _onCameraChargeBoxVersionChanged;
  final bool onCameraChargeBoxVersionChanged$async;
  final void Function(BaseCamera baseCamera, _$jni.JObject upgradeState) _onCameraUpgradeStateChanged;
  final bool onCameraUpgradeStateChanged$async;
  final void Function(BaseCamera baseCamera, bool z) _onCameraPreviewStreamParamsChanged;
  final bool onCameraPreviewStreamParamsChanged$async;
  final void Function(BaseCamera baseCamera, _$jni.JObject notifyDetectFace) _onCameraDetectFaceChanged;
  final bool onCameraDetectFaceChanged$async;
  final void Function(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus) _onCameraDarkEisStatusChanged;
  final bool onCameraDarkEisStatusChanged$async;
  final void Function(BaseCamera baseCamera) _readyToCaptureWhileRecording;
  final bool readyToCaptureWhileRecording$async;
  final void Function(BaseCamera baseCamera) _onFmgModeChanged;
  final bool onFmgModeChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgLimitYawChanged;
  final bool onFmgLimitYawChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgLimitPitchChanged;
  final bool onFmgLimitPitchChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgStallChanged;
  final bool onFmgStallChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgPayloadChanged;
  final bool onFmgPayloadChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgImbalanceChanged;
  final bool onFmgImbalanceChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgLowTemperatureChanged;
  final bool onFmgLowTemperatureChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgSleepChanged;
  final bool onFmgSleepChanged$async;
  final void Function(BaseCamera baseCamera) _onFmgHvModeChanged;
  final bool onFmgHvModeChanged$async;

  void onCameraAuthorizationStateChanged(BaseCamera baseCamera, int i) {
    return _onCameraAuthorizationStateChanged(baseCamera, i);
  }  void onCameraBatteryLow(BaseCamera baseCamera) {
    return _onCameraBatteryLow(baseCamera);
  }  void onCameraBatteryUpdate(BaseCamera baseCamera) {
    return _onCameraBatteryUpdate(baseCamera);
  }  void onCameraCaptureStatusChanged(BaseCamera baseCamera, BaseCamera_CaptureType captureType) {
    return _onCameraCaptureStatusChanged(baseCamera, captureType);
  }  void onCameraSDCardStateChanged(BaseCamera baseCamera, int i, int i1) {
    return _onCameraSDCardStateChanged(baseCamera, i, i1);
  }  void onCameraStatusChanged(BaseCamera baseCamera, BaseCamera_CameraStatus cameraStatus, int i) {
    return _onCameraStatusChanged(baseCamera, cameraStatus, i);
  }  void onCameraSyncStatusChanged(BaseCamera baseCamera, BaseCamera_CameraSyncStatus cameraSyncStatus, int i) {
    return _onCameraSyncStatusChanged(baseCamera, cameraSyncStatus, i);
  }  void onCameraCheckStart(BaseCamera baseCamera, _$jni.JString string) {
    return _onCameraCheckStart(baseCamera, string);
  }  void onCameraStorageChanged(BaseCamera baseCamera, int j, int j1) {
    return _onCameraStorageChanged(baseCamera, j, j1);
  }  void onCameraTemperatureChanged(BaseCamera baseCamera, int i) {
    return _onCameraTemperatureChanged(baseCamera, i);
  }  void onCameraLiveviewBeginRotate(BaseCamera baseCamera) {
    return _onCameraLiveviewBeginRotate(baseCamera);
  }  void onCameraExposureUpdate(BaseCamera baseCamera, int i) {
    return _onCameraExposureUpdate(baseCamera, i);
  }  void onCameraSensorModeChanged(BaseCamera baseCamera) {
    return _onCameraSensorModeChanged(baseCamera);
  }  void onCameraChargeBoxConnectedStateUpdate(BaseCamera baseCamera) {
    return _onCameraChargeBoxConnectedStateUpdate(baseCamera);
  }  void onCameraChargeBoxVersionChanged(BaseCamera baseCamera) {
    return _onCameraChargeBoxVersionChanged(baseCamera);
  }  void onCameraUpgradeStateChanged(BaseCamera baseCamera, _$jni.JObject upgradeState) {
    return _onCameraUpgradeStateChanged(baseCamera, upgradeState);
  }  void onCameraPreviewStreamParamsChanged(BaseCamera baseCamera, bool z) {
    return _onCameraPreviewStreamParamsChanged(baseCamera, z);
  }  void onCameraDetectFaceChanged(BaseCamera baseCamera, _$jni.JObject notifyDetectFace) {
    return _onCameraDetectFaceChanged(baseCamera, notifyDetectFace);
  }  void onCameraDarkEisStatusChanged(BaseCamera baseCamera, _$jni.JObject notifyDarkEisStatus) {
    return _onCameraDarkEisStatusChanged(baseCamera, notifyDarkEisStatus);
  }  void readyToCaptureWhileRecording(BaseCamera baseCamera) {
    return _readyToCaptureWhileRecording(baseCamera);
  }  void onFmgModeChanged(BaseCamera baseCamera) {
    return _onFmgModeChanged(baseCamera);
  }  void onFmgLimitYawChanged(BaseCamera baseCamera) {
    return _onFmgLimitYawChanged(baseCamera);
  }  void onFmgLimitPitchChanged(BaseCamera baseCamera) {
    return _onFmgLimitPitchChanged(baseCamera);
  }  void onFmgStallChanged(BaseCamera baseCamera) {
    return _onFmgStallChanged(baseCamera);
  }  void onFmgPayloadChanged(BaseCamera baseCamera) {
    return _onFmgPayloadChanged(baseCamera);
  }  void onFmgImbalanceChanged(BaseCamera baseCamera) {
    return _onFmgImbalanceChanged(baseCamera);
  }  void onFmgLowTemperatureChanged(BaseCamera baseCamera) {
    return _onFmgLowTemperatureChanged(baseCamera);
  }  void onFmgSleepChanged(BaseCamera baseCamera) {
    return _onFmgSleepChanged(baseCamera);
  }  void onFmgHvModeChanged(BaseCamera baseCamera) {
    return _onFmgHvModeChanged(baseCamera);
  }}
final class $IBaseCameraChangedCallback$Type extends _$jni.JObjType<IBaseCameraChangedCallback> {
  

  @_$jni.internal
  const $IBaseCameraChangedCallback$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;';

  @_$jni.internal
  @_$core.override
  IBaseCameraChangedCallback fromReference(_$jni.JReference reference) => IBaseCameraChangedCallback.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($IBaseCameraChangedCallback$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($IBaseCameraChangedCallback$Type) &&
        other is $IBaseCameraChangedCallback$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.IBleConnectDelegate`
class IBleConnectDelegate extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<IBleConnectDelegate> $type;

  

  @_$jni.internal
  IBleConnectDelegate.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/IBleConnectDelegate');

      /// The type which includes information such as the signature of this class.
static const type = $IBleConnectDelegate$Type();
  static final _id_setScanListener = _class.instanceMethodId(
    r'setScanListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener;)V',
  );

  static final _setScanListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void setScanListener(com.arashivision.insta360.basecamera.camera.BaseCamera$IScanBleListener iScanBleListener)`
  void setScanListener(BaseCamera_IScanBleListener iScanBleListener, ){
    
    _setScanListener(reference.pointer, _id_setScanListener as _$jni.JMethodIDPtr, iScanBleListener.reference.pointer).check();
  }

  static final _id_startScan = _class.instanceMethodId(
    r'startScan',
    r'(J)V',
  );

  static final _startScan = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void startScan(long j)`
  void startScan(int j, ){
    
    _startScan(reference.pointer, _id_startScan as _$jni.JMethodIDPtr, j).check();
  }

  static final _id_stopScan = _class.instanceMethodId(
    r'stopScan',
    r'()V',
  );

  static final _stopScan = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void stopScan()`
  void stopScan(){
    
    _stopScan(reference.pointer, _id_stopScan as _$jni.JMethodIDPtr).check();
  }

  static final _id_isScanIdle = _class.instanceMethodId(
    r'isScanIdle',
    r'()Z',
  );

  static final _isScanIdle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean isScanIdle()`
  bool isScanIdle(){
    
    return _isScanIdle(reference.pointer, _id_isScanIdle as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startWakeUpBle = _class.instanceMethodId(
    r'startWakeUpBle',
    r'(Lcom/arashivision/insta360/basecamera/camera/CameraType;Ljava/lang/String;B)V',
  );

  static final _startWakeUpBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void startWakeUpBle(com.arashivision.insta360.basecamera.camera.CameraType cameraType, java.lang.String string, byte b)`
  void startWakeUpBle(CameraType cameraType, _$jni.JString string, int b, ){
    
    _startWakeUpBle(reference.pointer, _id_startWakeUpBle as _$jni.JMethodIDPtr, cameraType.reference.pointer, string.reference.pointer, b).check();
  }

  static final _id_stopWakeUpBle = _class.instanceMethodId(
    r'stopWakeUpBle',
    r'()V',
  );

  static final _stopWakeUpBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void stopWakeUpBle()`
  void stopWakeUpBle(){
    
    _stopWakeUpBle(reference.pointer, _id_stopWakeUpBle as _$jni.JMethodIDPtr).check();
  }

  static final _id_connectBle = _class.instanceMethodId(
    r'connectBle',
    r'(Lcom/clj/fastble/data/BleDevice;)V',
  );

  static final _connectBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void connectBle(com.clj.fastble.data.BleDevice bleDevice)`
  void connectBle(_$jni.JObject bleDevice, ){
    
    _connectBle(reference.pointer, _id_connectBle as _$jni.JMethodIDPtr, bleDevice.reference.pointer).check();
  }

  static final _id_disconnect = _class.instanceMethodId(
    r'disconnect',
    r'()V',
  );

  static final _disconnect = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void disconnect()`
  void disconnect(){
    
    _disconnect(reference.pointer, _id_disconnect as _$jni.JMethodIDPtr).check();
  }

  static final _id_cancelAuthorization = _class.instanceMethodId(
    r'cancelAuthorization',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void cancelAuthorization(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelAuthorization(BaseCamera baseCamera, ICameraController_OooO0o oooO0o, ){
    
    _cancelAuthorization(reference.pointer, _id_cancelAuthorization as _$jni.JMethodIDPtr, baseCamera.reference.pointer, oooO0o.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $IBleConnectDelegate> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'setScanListener(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener;)V') {
          _$impls[$p]!.setScanListener(
$a[0].as(const $BaseCamera_IScanBleListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startScan(J)V') {
          _$impls[$p]!.startScan(
$a[0].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopScan()V') {
          _$impls[$p]!.stopScan(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isScanIdle()Z') {
          final $r = _$impls[$p]!.isScanIdle(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startWakeUpBle(Lcom/arashivision/insta360/basecamera/camera/CameraType;Ljava/lang/String;B)V') {
          _$impls[$p]!.startWakeUpBle(
$a[0].as(const $CameraType$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JByteType(), releaseOriginal: true).byteValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopWakeUpBle()V') {
          _$impls[$p]!.stopWakeUpBle(
          );
          return _$jni.nullptr;
        }
        if ($d == r'connectBle(Lcom/clj/fastble/data/BleDevice;)V') {
          _$impls[$p]!.connectBle(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'disconnect()V') {
          _$impls[$p]!.disconnect(
          );
          return _$jni.nullptr;
        }
        if ($d == r'cancelAuthorization(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V') {
          _$impls[$p]!.cancelAuthorization(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const $ICameraController_OooO0o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $IBleConnectDelegate $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.IBleConnectDelegate',
      $p,
      _$invokePointer,
      [
        if ($impl.setScanListener$async) r'setScanListener(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$IScanBleListener;)V',
        if ($impl.startScan$async) r'startScan(J)V',
        if ($impl.stopScan$async) r'stopScan()V',
        if ($impl.startWakeUpBle$async) r'startWakeUpBle(Lcom/arashivision/insta360/basecamera/camera/CameraType;Ljava/lang/String;B)V',
        if ($impl.stopWakeUpBle$async) r'stopWakeUpBle()V',
        if ($impl.connectBle$async) r'connectBle(Lcom/clj/fastble/data/BleDevice;)V',
        if ($impl.disconnect$async) r'disconnect()V',
        if ($impl.cancelAuthorization$async) r'cancelAuthorization(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory IBleConnectDelegate.implement(
    $IBleConnectDelegate $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return IBleConnectDelegate.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $IBleConnectDelegate {
  factory $IBleConnectDelegate(
    {required void Function(BaseCamera_IScanBleListener iScanBleListener) setScanListener, bool setScanListener$async,
    required void Function(int j) startScan, bool startScan$async,
    required void Function() stopScan, bool stopScan$async,
    required bool Function() isScanIdle,
    required void Function(CameraType cameraType, _$jni.JString string, int b) startWakeUpBle, bool startWakeUpBle$async,
    required void Function() stopWakeUpBle, bool stopWakeUpBle$async,
    required void Function(_$jni.JObject bleDevice) connectBle, bool connectBle$async,
    required void Function() disconnect, bool disconnect$async,
    required void Function(BaseCamera baseCamera, ICameraController_OooO0o oooO0o) cancelAuthorization, bool cancelAuthorization$async,}
  ) = _$IBleConnectDelegate;

  

  void setScanListener(BaseCamera_IScanBleListener iScanBleListener);
  bool get setScanListener$async => false;
  void startScan(int j);
  bool get startScan$async => false;
  void stopScan();
  bool get stopScan$async => false;
  bool isScanIdle();
  void startWakeUpBle(CameraType cameraType, _$jni.JString string, int b);
  bool get startWakeUpBle$async => false;
  void stopWakeUpBle();
  bool get stopWakeUpBle$async => false;
  void connectBle(_$jni.JObject bleDevice);
  bool get connectBle$async => false;
  void disconnect();
  bool get disconnect$async => false;
  void cancelAuthorization(BaseCamera baseCamera, ICameraController_OooO0o oooO0o);
  bool get cancelAuthorization$async => false;
}

final class _$IBleConnectDelegate with $IBleConnectDelegate {
  _$IBleConnectDelegate(
    {required void Function(BaseCamera_IScanBleListener iScanBleListener) setScanListener, this.setScanListener$async = false,
    required void Function(int j) startScan, this.startScan$async = false,
    required void Function() stopScan, this.stopScan$async = false,
    required bool Function() isScanIdle,
    required void Function(CameraType cameraType, _$jni.JString string, int b) startWakeUpBle, this.startWakeUpBle$async = false,
    required void Function() stopWakeUpBle, this.stopWakeUpBle$async = false,
    required void Function(_$jni.JObject bleDevice) connectBle, this.connectBle$async = false,
    required void Function() disconnect, this.disconnect$async = false,
    required void Function(BaseCamera baseCamera, ICameraController_OooO0o oooO0o) cancelAuthorization, this.cancelAuthorization$async = false,}
  ) :  _setScanListener = setScanListener, _startScan = startScan, _stopScan = stopScan, _isScanIdle = isScanIdle, _startWakeUpBle = startWakeUpBle, _stopWakeUpBle = stopWakeUpBle, _connectBle = connectBle, _disconnect = disconnect, _cancelAuthorization = cancelAuthorization;

  

  final void Function(BaseCamera_IScanBleListener iScanBleListener) _setScanListener;
  final bool setScanListener$async;
  final void Function(int j) _startScan;
  final bool startScan$async;
  final void Function() _stopScan;
  final bool stopScan$async;
  final bool Function() _isScanIdle;
  final void Function(CameraType cameraType, _$jni.JString string, int b) _startWakeUpBle;
  final bool startWakeUpBle$async;
  final void Function() _stopWakeUpBle;
  final bool stopWakeUpBle$async;
  final void Function(_$jni.JObject bleDevice) _connectBle;
  final bool connectBle$async;
  final void Function() _disconnect;
  final bool disconnect$async;
  final void Function(BaseCamera baseCamera, ICameraController_OooO0o oooO0o) _cancelAuthorization;
  final bool cancelAuthorization$async;

  void setScanListener(BaseCamera_IScanBleListener iScanBleListener) {
    return _setScanListener(iScanBleListener);
  }  void startScan(int j) {
    return _startScan(j);
  }  void stopScan() {
    return _stopScan();
  }  bool isScanIdle() {
    return _isScanIdle();
  }  void startWakeUpBle(CameraType cameraType, _$jni.JString string, int b) {
    return _startWakeUpBle(cameraType, string, b);
  }  void stopWakeUpBle() {
    return _stopWakeUpBle();
  }  void connectBle(_$jni.JObject bleDevice) {
    return _connectBle(bleDevice);
  }  void disconnect() {
    return _disconnect();
  }  void cancelAuthorization(BaseCamera baseCamera, ICameraController_OooO0o oooO0o) {
    return _cancelAuthorization(baseCamera, oooO0o);
  }}
final class $IBleConnectDelegate$Type extends _$jni.JObjType<IBleConnectDelegate> {
  

  @_$jni.internal
  const $IBleConnectDelegate$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/IBleConnectDelegate;';

  @_$jni.internal
  @_$core.override
  IBleConnectDelegate fromReference(_$jni.JReference reference) => IBleConnectDelegate.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($IBleConnectDelegate$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($IBleConnectDelegate$Type) &&
        other is $IBleConnectDelegate$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$ICalibrateGyroCallback`
class ICameraController_ICalibrateGyroCallback extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_ICalibrateGyroCallback> $type;

  

  @_$jni.internal
  ICameraController_ICalibrateGyroCallback.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_ICalibrateGyroCallback$Type();
  static final _id_onCalibrateGyroProgressChanged = _class.instanceMethodId(
    r'onCalibrateGyroProgressChanged',
    r'(I)V',
  );

  static final _onCalibrateGyroProgressChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onCalibrateGyroProgressChanged(int i)`
  void onCalibrateGyroProgressChanged(int i, ){
    
    _onCalibrateGyroProgressChanged(reference.pointer, _id_onCalibrateGyroProgressChanged as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_onCalibrateGyroResult = _class.instanceMethodId(
    r'onCalibrateGyroResult',
    r'(I)V',
  );

  static final _onCalibrateGyroResult = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onCalibrateGyroResult(int i)`
  void onCalibrateGyroResult(int i, ){
    
    _onCalibrateGyroResult(reference.pointer, _id_onCalibrateGyroResult as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_ICalibrateGyroCallback> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onCalibrateGyroProgressChanged(I)V') {
          _$impls[$p]!.onCalibrateGyroProgressChanged(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCalibrateGyroResult(I)V') {
          _$impls[$p]!.onCalibrateGyroResult(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_ICalibrateGyroCallback $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$ICalibrateGyroCallback',
      $p,
      _$invokePointer,
      [
        if ($impl.onCalibrateGyroProgressChanged$async) r'onCalibrateGyroProgressChanged(I)V',
        if ($impl.onCalibrateGyroResult$async) r'onCalibrateGyroResult(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_ICalibrateGyroCallback.implement(
    $ICameraController_ICalibrateGyroCallback $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_ICalibrateGyroCallback.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_ICalibrateGyroCallback {
  factory $ICameraController_ICalibrateGyroCallback(
    {required void Function(int i) onCalibrateGyroProgressChanged, bool onCalibrateGyroProgressChanged$async,
    required void Function(int i) onCalibrateGyroResult, bool onCalibrateGyroResult$async,}
  ) = _$ICameraController_ICalibrateGyroCallback;

  

  void onCalibrateGyroProgressChanged(int i);
  bool get onCalibrateGyroProgressChanged$async => false;
  void onCalibrateGyroResult(int i);
  bool get onCalibrateGyroResult$async => false;
}

final class _$ICameraController_ICalibrateGyroCallback with $ICameraController_ICalibrateGyroCallback {
  _$ICameraController_ICalibrateGyroCallback(
    {required void Function(int i) onCalibrateGyroProgressChanged, this.onCalibrateGyroProgressChanged$async = false,
    required void Function(int i) onCalibrateGyroResult, this.onCalibrateGyroResult$async = false,}
  ) :  _onCalibrateGyroProgressChanged = onCalibrateGyroProgressChanged, _onCalibrateGyroResult = onCalibrateGyroResult;

  

  final void Function(int i) _onCalibrateGyroProgressChanged;
  final bool onCalibrateGyroProgressChanged$async;
  final void Function(int i) _onCalibrateGyroResult;
  final bool onCalibrateGyroResult$async;

  void onCalibrateGyroProgressChanged(int i) {
    return _onCalibrateGyroProgressChanged(i);
  }  void onCalibrateGyroResult(int i) {
    return _onCalibrateGyroResult(i);
  }}
final class $ICameraController_ICalibrateGyroCallback$Type extends _$jni.JObjType<ICameraController_ICalibrateGyroCallback> {
  

  @_$jni.internal
  const $ICameraController_ICalibrateGyroCallback$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;';

  @_$jni.internal
  @_$core.override
  ICameraController_ICalibrateGyroCallback fromReference(_$jni.JReference reference) => ICameraController_ICalibrateGyroCallback.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_ICalibrateGyroCallback$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_ICalibrateGyroCallback$Type) &&
        other is $ICameraController_ICalibrateGyroCallback$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener`
class ICameraController_ICaptureStatusChangedListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_ICaptureStatusChangedListener> $type;

  

  @_$jni.internal
  ICameraController_ICaptureStatusChangedListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_ICaptureStatusChangedListener$Type();
  static final _id_onCaptureStatusChanged = _class.instanceMethodId(
    r'onCaptureStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;[Ljava/lang/String;Ljava/lang/Integer;)V',
  );

  static final _onCaptureStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCaptureStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType captureType, com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus captureStatus, java.lang.String[] strings, java.lang.Integer integer)`
  void onCaptureStatusChanged(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer, ){
    
    _onCaptureStatusChanged(reference.pointer, _id_onCaptureStatusChanged as _$jni.JMethodIDPtr, captureType.reference.pointer, captureStatus.reference.pointer, strings.reference.pointer, integer.reference.pointer).check();
  }

  static final _id_onCaptureSubStatusChanged = _class.instanceMethodId(
    r'onCaptureSubStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;Ljava/lang/Integer;)V',
  );

  static final _onCaptureSubStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCaptureSubStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus captureSubStatus, java.lang.Integer integer)`
  void onCaptureSubStatusChanged(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer, ){
    
    _onCaptureSubStatusChanged(reference.pointer, _id_onCaptureSubStatusChanged as _$jni.JMethodIDPtr, captureSubStatus.reference.pointer, integer.reference.pointer).check();
  }

  static final _id_onCaptureTimeChanged = _class.instanceMethodId(
    r'onCaptureTimeChanged',
    r'(J)V',
  );

  static final _onCaptureTimeChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onCaptureTimeChanged(long j)`
  void onCaptureTimeChanged(int j, ){
    
    _onCaptureTimeChanged(reference.pointer, _id_onCaptureTimeChanged as _$jni.JMethodIDPtr, j).check();
  }

  static final _id_onCaptureCountChanged = _class.instanceMethodId(
    r'onCaptureCountChanged',
    r'(I)V',
  );

  static final _onCaptureCountChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onCaptureCountChanged(int i)`
  void onCaptureCountChanged(int i, ){
    
    _onCaptureCountChanged(reference.pointer, _id_onCaptureCountChanged as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_onCaptureKeyTimePointDetailChanged = _class.instanceMethodId(
    r'onCaptureKeyTimePointDetailChanged',
    r'(Ljava/lang/String;)V',
  );

  static final _onCaptureKeyTimePointDetailChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCaptureKeyTimePointDetailChanged(java.lang.String string)`
  void onCaptureKeyTimePointDetailChanged(_$jni.JString string, ){
    
    _onCaptureKeyTimePointDetailChanged(reference.pointer, _id_onCaptureKeyTimePointDetailChanged as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_ICaptureStatusChangedListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onCaptureStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;[Ljava/lang/String;Ljava/lang/Integer;)V') {
          _$impls[$p]!.onCaptureStatusChanged(
$a[0].as(const $BaseCamera_CaptureType$Type(), releaseOriginal: true),
$a[1].as(const $BaseCamera_CaptureStatus$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JArrayType(_$jni.JStringType()), releaseOriginal: true),
$a[3].as(const _$jni.JIntegerType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCaptureSubStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;Ljava/lang/Integer;)V') {
          _$impls[$p]!.onCaptureSubStatusChanged(
$a[0].as(const $BaseCamera_CaptureSubStatus$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCaptureTimeChanged(J)V') {
          _$impls[$p]!.onCaptureTimeChanged(
$a[0].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCaptureCountChanged(I)V') {
          _$impls[$p]!.onCaptureCountChanged(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCaptureKeyTimePointDetailChanged(Ljava/lang/String;)V') {
          _$impls[$p]!.onCaptureKeyTimePointDetailChanged(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_ICaptureStatusChangedListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onCaptureStatusChanged$async) r'onCaptureStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;[Ljava/lang/String;Ljava/lang/Integer;)V',
        if ($impl.onCaptureSubStatusChanged$async) r'onCaptureSubStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;Ljava/lang/Integer;)V',
        if ($impl.onCaptureTimeChanged$async) r'onCaptureTimeChanged(J)V',
        if ($impl.onCaptureCountChanged$async) r'onCaptureCountChanged(I)V',
        if ($impl.onCaptureKeyTimePointDetailChanged$async) r'onCaptureKeyTimePointDetailChanged(Ljava/lang/String;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_ICaptureStatusChangedListener.implement(
    $ICameraController_ICaptureStatusChangedListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_ICaptureStatusChangedListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_ICaptureStatusChangedListener {
  factory $ICameraController_ICaptureStatusChangedListener(
    {required void Function(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer) onCaptureStatusChanged, bool onCaptureStatusChanged$async,
    required void Function(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer) onCaptureSubStatusChanged, bool onCaptureSubStatusChanged$async,
    required void Function(int j) onCaptureTimeChanged, bool onCaptureTimeChanged$async,
    required void Function(int i) onCaptureCountChanged, bool onCaptureCountChanged$async,
    required void Function(_$jni.JString string) onCaptureKeyTimePointDetailChanged, bool onCaptureKeyTimePointDetailChanged$async,}
  ) = _$ICameraController_ICaptureStatusChangedListener;

  

  void onCaptureStatusChanged(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer);
  bool get onCaptureStatusChanged$async => false;
  void onCaptureSubStatusChanged(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer);
  bool get onCaptureSubStatusChanged$async => false;
  void onCaptureTimeChanged(int j);
  bool get onCaptureTimeChanged$async => false;
  void onCaptureCountChanged(int i);
  bool get onCaptureCountChanged$async => false;
  void onCaptureKeyTimePointDetailChanged(_$jni.JString string);
  bool get onCaptureKeyTimePointDetailChanged$async => false;
}

final class _$ICameraController_ICaptureStatusChangedListener with $ICameraController_ICaptureStatusChangedListener {
  _$ICameraController_ICaptureStatusChangedListener(
    {required void Function(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer) onCaptureStatusChanged, this.onCaptureStatusChanged$async = false,
    required void Function(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer) onCaptureSubStatusChanged, this.onCaptureSubStatusChanged$async = false,
    required void Function(int j) onCaptureTimeChanged, this.onCaptureTimeChanged$async = false,
    required void Function(int i) onCaptureCountChanged, this.onCaptureCountChanged$async = false,
    required void Function(_$jni.JString string) onCaptureKeyTimePointDetailChanged, this.onCaptureKeyTimePointDetailChanged$async = false,}
  ) :  _onCaptureStatusChanged = onCaptureStatusChanged, _onCaptureSubStatusChanged = onCaptureSubStatusChanged, _onCaptureTimeChanged = onCaptureTimeChanged, _onCaptureCountChanged = onCaptureCountChanged, _onCaptureKeyTimePointDetailChanged = onCaptureKeyTimePointDetailChanged;

  

  final void Function(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer) _onCaptureStatusChanged;
  final bool onCaptureStatusChanged$async;
  final void Function(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer) _onCaptureSubStatusChanged;
  final bool onCaptureSubStatusChanged$async;
  final void Function(int j) _onCaptureTimeChanged;
  final bool onCaptureTimeChanged$async;
  final void Function(int i) _onCaptureCountChanged;
  final bool onCaptureCountChanged$async;
  final void Function(_$jni.JString string) _onCaptureKeyTimePointDetailChanged;
  final bool onCaptureKeyTimePointDetailChanged$async;

  void onCaptureStatusChanged(BaseCamera_CaptureType captureType, BaseCamera_CaptureStatus captureStatus, _$jni.JArray<_$jni.JString> strings, _$jni.JInteger integer) {
    return _onCaptureStatusChanged(captureType, captureStatus, strings, integer);
  }  void onCaptureSubStatusChanged(BaseCamera_CaptureSubStatus captureSubStatus, _$jni.JInteger integer) {
    return _onCaptureSubStatusChanged(captureSubStatus, integer);
  }  void onCaptureTimeChanged(int j) {
    return _onCaptureTimeChanged(j);
  }  void onCaptureCountChanged(int i) {
    return _onCaptureCountChanged(i);
  }  void onCaptureKeyTimePointDetailChanged(_$jni.JString string) {
    return _onCaptureKeyTimePointDetailChanged(string);
  }}
final class $ICameraController_ICaptureStatusChangedListener$Type extends _$jni.JObjType<ICameraController_ICaptureStatusChangedListener> {
  

  @_$jni.internal
  const $ICameraController_ICaptureStatusChangedListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;';

  @_$jni.internal
  @_$core.override
  ICameraController_ICaptureStatusChangedListener fromReference(_$jni.JReference reference) => ICameraController_ICaptureStatusChangedListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_ICaptureStatusChangedListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_ICaptureStatusChangedListener$Type) &&
        other is $ICameraController_ICaptureStatusChangedListener$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener`
class ICameraController_IFetchOptionsListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_IFetchOptionsListener> $type;

  

  @_$jni.internal
  ICameraController_IFetchOptionsListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_IFetchOptionsListener$Type();
  static final _id_onFetchOptionsResult = _class.instanceMethodId(
    r'onFetchOptionsResult',
    r'(I)V',
  );

  static final _onFetchOptionsResult = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onFetchOptionsResult(int i)`
  void onFetchOptionsResult(int i, ){
    
    _onFetchOptionsResult(reference.pointer, _id_onFetchOptionsResult as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_IFetchOptionsListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onFetchOptionsResult(I)V') {
          _$impls[$p]!.onFetchOptionsResult(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_IFetchOptionsListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onFetchOptionsResult$async) r'onFetchOptionsResult(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_IFetchOptionsListener.implement(
    $ICameraController_IFetchOptionsListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_IFetchOptionsListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_IFetchOptionsListener {
  factory $ICameraController_IFetchOptionsListener(
    {required void Function(int i) onFetchOptionsResult, bool onFetchOptionsResult$async,}
  ) = _$ICameraController_IFetchOptionsListener;

  

  void onFetchOptionsResult(int i);
  bool get onFetchOptionsResult$async => false;
}

final class _$ICameraController_IFetchOptionsListener with $ICameraController_IFetchOptionsListener {
  _$ICameraController_IFetchOptionsListener(
    {required void Function(int i) onFetchOptionsResult, this.onFetchOptionsResult$async = false,}
  ) :  _onFetchOptionsResult = onFetchOptionsResult;

  

  final void Function(int i) _onFetchOptionsResult;
  final bool onFetchOptionsResult$async;

  void onFetchOptionsResult(int i) {
    return _onFetchOptionsResult(i);
  }}
final class $ICameraController_IFetchOptionsListener$Type extends _$jni.JObjType<ICameraController_IFetchOptionsListener> {
  

  @_$jni.internal
  const $ICameraController_IFetchOptionsListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;';

  @_$jni.internal
  @_$core.override
  ICameraController_IFetchOptionsListener fromReference(_$jni.JReference reference) => ICameraController_IFetchOptionsListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_IFetchOptionsListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_IFetchOptionsListener$Type) &&
        other is $ICameraController_IFetchOptionsListener$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener`
class ICameraController_IPreviewStatusChangedListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_IPreviewStatusChangedListener> $type;

  

  @_$jni.internal
  ICameraController_IPreviewStatusChangedListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_IPreviewStatusChangedListener$Type();
  static final _id_onPreviewStatusChanged = _class.instanceMethodId(
    r'onPreviewStatusChanged',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;I)V',
  );

  static final _onPreviewStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void onPreviewStatusChanged(com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus previewStatus, int i)`
  void onPreviewStatusChanged(BaseCamera_PreviewStatus previewStatus, int i, ){
    
    _onPreviewStatusChanged(reference.pointer, _id_onPreviewStatusChanged as _$jni.JMethodIDPtr, previewStatus.reference.pointer, i).check();
  }

  static final _id_onVideoData = _class.instanceMethodId(
    r'onVideoData',
    r'([BIIJ)V',
  );

  static final _onVideoData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int64)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, int)>();
  /// from: `public void onVideoData(byte[] bs, int i, int i1, long j)`
  void onVideoData(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j, ){
    
    _onVideoData(reference.pointer, _id_onVideoData as _$jni.JMethodIDPtr, bs.reference.pointer, i, i1, j).check();
  }

  static final _id_onGyroData = _class.instanceMethodId(
    r'onGyroData',
    r'(Ljava/util/List;)V',
  );

  static final _onGyroData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void onGyroData(java.util.List list)`
  void onGyroData(_$jni.JList<_$jni.JObject> list, ){
    
    _onGyroData(reference.pointer, _id_onGyroData as _$jni.JMethodIDPtr, list.reference.pointer).check();
  }

  static final _id_onExposureData = _class.instanceMethodId(
    r'onExposureData',
    r'(DJ)V',
  );

  static final _onExposureData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Int64)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, int)>();
  /// from: `public void onExposureData(double d, long j)`
  void onExposureData(double d, int j, ){
    
    _onExposureData(reference.pointer, _id_onExposureData as _$jni.JMethodIDPtr, d, j).check();
  }

  static final _id_onResolutionUpdate = _class.instanceMethodId(
    r'onResolutionUpdate',
    r'(III)V',
  );

  static final _onResolutionUpdate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void onResolutionUpdate(int i, int i1, int i2)`
  void onResolutionUpdate(int i, int i1, int i2, ){
    
    _onResolutionUpdate(reference.pointer, _id_onResolutionUpdate as _$jni.JMethodIDPtr, i, i1, i2).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_IPreviewStatusChangedListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onPreviewStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;I)V') {
          _$impls[$p]!.onPreviewStatusChanged(
$a[0].as(const $BaseCamera_PreviewStatus$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onVideoData([BIIJ)V') {
          _$impls[$p]!.onVideoData(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onGyroData(Ljava/util/List;)V') {
          _$impls[$p]!.onGyroData(
$a[0].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onExposureData(DJ)V') {
          _$impls[$p]!.onExposureData(
$a[0].as(const _$jni.JDoubleType(), releaseOriginal: true).doubleValue(releaseOriginal: true),
$a[1].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onResolutionUpdate(III)V') {
          _$impls[$p]!.onResolutionUpdate(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_IPreviewStatusChangedListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onPreviewStatusChanged$async) r'onPreviewStatusChanged(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;I)V',
        if ($impl.onVideoData$async) r'onVideoData([BIIJ)V',
        if ($impl.onGyroData$async) r'onGyroData(Ljava/util/List;)V',
        if ($impl.onExposureData$async) r'onExposureData(DJ)V',
        if ($impl.onResolutionUpdate$async) r'onResolutionUpdate(III)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_IPreviewStatusChangedListener.implement(
    $ICameraController_IPreviewStatusChangedListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_IPreviewStatusChangedListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_IPreviewStatusChangedListener {
  factory $ICameraController_IPreviewStatusChangedListener(
    {required void Function(BaseCamera_PreviewStatus previewStatus, int i) onPreviewStatusChanged, bool onPreviewStatusChanged$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j) onVideoData, bool onVideoData$async,
    required void Function(_$jni.JList<_$jni.JObject> list) onGyroData, bool onGyroData$async,
    required void Function(double d, int j) onExposureData, bool onExposureData$async,
    required void Function(int i, int i1, int i2) onResolutionUpdate, bool onResolutionUpdate$async,}
  ) = _$ICameraController_IPreviewStatusChangedListener;

  

  void onPreviewStatusChanged(BaseCamera_PreviewStatus previewStatus, int i);
  bool get onPreviewStatusChanged$async => false;
  void onVideoData(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j);
  bool get onVideoData$async => false;
  void onGyroData(_$jni.JList<_$jni.JObject> list);
  bool get onGyroData$async => false;
  void onExposureData(double d, int j);
  bool get onExposureData$async => false;
  void onResolutionUpdate(int i, int i1, int i2);
  bool get onResolutionUpdate$async => false;
}

final class _$ICameraController_IPreviewStatusChangedListener with $ICameraController_IPreviewStatusChangedListener {
  _$ICameraController_IPreviewStatusChangedListener(
    {required void Function(BaseCamera_PreviewStatus previewStatus, int i) onPreviewStatusChanged, this.onPreviewStatusChanged$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j) onVideoData, this.onVideoData$async = false,
    required void Function(_$jni.JList<_$jni.JObject> list) onGyroData, this.onGyroData$async = false,
    required void Function(double d, int j) onExposureData, this.onExposureData$async = false,
    required void Function(int i, int i1, int i2) onResolutionUpdate, this.onResolutionUpdate$async = false,}
  ) :  _onPreviewStatusChanged = onPreviewStatusChanged, _onVideoData = onVideoData, _onGyroData = onGyroData, _onExposureData = onExposureData, _onResolutionUpdate = onResolutionUpdate;

  

  final void Function(BaseCamera_PreviewStatus previewStatus, int i) _onPreviewStatusChanged;
  final bool onPreviewStatusChanged$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j) _onVideoData;
  final bool onVideoData$async;
  final void Function(_$jni.JList<_$jni.JObject> list) _onGyroData;
  final bool onGyroData$async;
  final void Function(double d, int j) _onExposureData;
  final bool onExposureData$async;
  final void Function(int i, int i1, int i2) _onResolutionUpdate;
  final bool onResolutionUpdate$async;

  void onPreviewStatusChanged(BaseCamera_PreviewStatus previewStatus, int i) {
    return _onPreviewStatusChanged(previewStatus, i);
  }  void onVideoData(_$jni.JArray<_$jni.jbyte> bs, int i, int i1, int j) {
    return _onVideoData(bs, i, i1, j);
  }  void onGyroData(_$jni.JList<_$jni.JObject> list) {
    return _onGyroData(list);
  }  void onExposureData(double d, int j) {
    return _onExposureData(d, j);
  }  void onResolutionUpdate(int i, int i1, int i2) {
    return _onResolutionUpdate(i, i1, i2);
  }}
final class $ICameraController_IPreviewStatusChangedListener$Type extends _$jni.JObjType<ICameraController_IPreviewStatusChangedListener> {
  

  @_$jni.internal
  const $ICameraController_IPreviewStatusChangedListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;';

  @_$jni.internal
  @_$core.override
  ICameraController_IPreviewStatusChangedListener fromReference(_$jni.JReference reference) => ICameraController_IPreviewStatusChangedListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_IPreviewStatusChangedListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_IPreviewStatusChangedListener$Type) &&
        other is $ICameraController_IPreviewStatusChangedListener$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback`
class ICameraController_ISetOptionsCallback extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_ISetOptionsCallback> $type;

  

  @_$jni.internal
  ICameraController_ISetOptionsCallback.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_ISetOptionsCallback$Type();
  static final _id_onSetOptionsResult = _class.instanceMethodId(
    r'onSetOptionsResult',
    r'(I)V',
  );

  static final _onSetOptionsResult = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void onSetOptionsResult(int i)`
  void onSetOptionsResult(int i, ){
    
    _onSetOptionsResult(reference.pointer, _id_onSetOptionsResult as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_ISetOptionsCallback> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onSetOptionsResult(I)V') {
          _$impls[$p]!.onSetOptionsResult(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_ISetOptionsCallback $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback',
      $p,
      _$invokePointer,
      [
        if ($impl.onSetOptionsResult$async) r'onSetOptionsResult(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_ISetOptionsCallback.implement(
    $ICameraController_ISetOptionsCallback $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_ISetOptionsCallback.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_ISetOptionsCallback {
  factory $ICameraController_ISetOptionsCallback(
    {required void Function(int i) onSetOptionsResult, bool onSetOptionsResult$async,}
  ) = _$ICameraController_ISetOptionsCallback;

  

  void onSetOptionsResult(int i);
  bool get onSetOptionsResult$async => false;
}

final class _$ICameraController_ISetOptionsCallback with $ICameraController_ISetOptionsCallback {
  _$ICameraController_ISetOptionsCallback(
    {required void Function(int i) onSetOptionsResult, this.onSetOptionsResult$async = false,}
  ) :  _onSetOptionsResult = onSetOptionsResult;

  

  final void Function(int i) _onSetOptionsResult;
  final bool onSetOptionsResult$async;

  void onSetOptionsResult(int i) {
    return _onSetOptionsResult(i);
  }}
final class $ICameraController_ISetOptionsCallback$Type extends _$jni.JObjType<ICameraController_ISetOptionsCallback> {
  

  @_$jni.internal
  const $ICameraController_ISetOptionsCallback$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;';

  @_$jni.internal
  @_$core.override
  ICameraController_ISetOptionsCallback fromReference(_$jni.JReference reference) => ICameraController_ISetOptionsCallback.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_ISetOptionsCallback$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_ISetOptionsCallback$Type) &&
        other is $ICameraController_ISetOptionsCallback$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooO`
class ICameraController_OooO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooO> $type;

  

  @_$jni.internal
  ICameraController_OooO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooO$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO00o()`
  void OooO00o(){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o()V') {
          _$impls[$p]!.OooO00o(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooO.implement(
    $ICameraController_OooO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooO {
  factory $ICameraController_OooO(
    {required void Function() OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_OooO;

  

  void OooO00o();
  bool get OooO00o$async => false;
}

final class _$ICameraController_OooO with $ICameraController_OooO {
  _$ICameraController_OooO(
    {required void Function() OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function() _OooO00o;
  final bool OooO00o$async;

  void OooO00o() {
    return _OooO00o();
  }}
final class $ICameraController_OooO$Type extends _$jni.JObjType<ICameraController_OooO> {
  

  @_$jni.internal
  const $ICameraController_OooO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooO fromReference(_$jni.JReference reference) => ICameraController_OooO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooO$Type) &&
        other is $ICameraController_OooO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o`
class ICameraController_OooO00o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooO00o> $type;

  

  @_$jni.internal
  ICameraController_OooO00o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooO00o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooO00o$Type();
  static final _id_isAuthorized = _class.instanceMethodId(
    r'isAuthorized',
    r'(Ljava/lang/String;)Z',
  );

  static final _isAuthorized = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract boolean isAuthorized(java.lang.String string)`
  bool isAuthorized(_$jni.JString string, ){
    
    return _isAuthorized(reference.pointer, _id_isAuthorized as _$jni.JMethodIDPtr, string.reference.pointer).boolean;
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooO00o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'isAuthorized(Ljava/lang/String;)Z') {
          final $r = _$impls[$p]!.isAuthorized(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooO00o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o',
      $p,
      _$invokePointer,
      [
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooO00o.implement(
    $ICameraController_OooO00o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooO00o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooO00o {
  factory $ICameraController_OooO00o(
    {required bool Function(_$jni.JString string) isAuthorized,}
  ) = _$ICameraController_OooO00o;

  

  bool isAuthorized(_$jni.JString string);
}

final class _$ICameraController_OooO00o with $ICameraController_OooO00o {
  _$ICameraController_OooO00o(
    {required bool Function(_$jni.JString string) isAuthorized,}
  ) :  _isAuthorized = isAuthorized;

  

  final bool Function(_$jni.JString string) _isAuthorized;

  bool isAuthorized(_$jni.JString string) {
    return _isAuthorized(string);
  }}
final class $ICameraController_OooO00o$Type extends _$jni.JObjType<ICameraController_OooO00o> {
  

  @_$jni.internal
  const $ICameraController_OooO00o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooO00o fromReference(_$jni.JReference reference) => ICameraController_OooO00o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooO00o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooO00o$Type) &&
        other is $ICameraController_OooO00o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooO0O0`
class ICameraController_OooO0O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooO0O0> $type;

  

  @_$jni.internal
  ICameraController_OooO0O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooO0O0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooO0O0$Type();
  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooO0O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
        } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooO0O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooO0O0',
      $p,
      _$invokePointer,
      [
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooO0O0.implement(
    $ICameraController_OooO0O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooO0O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooO0O0 {
  factory $ICameraController_OooO0O0(
    
  ) = _$ICameraController_OooO0O0;

  

}

final class _$ICameraController_OooO0O0 with $ICameraController_OooO0O0 {
  _$ICameraController_OooO0O0(
    
  );

  


}
final class $ICameraController_OooO0O0$Type extends _$jni.JObjType<ICameraController_OooO0O0> {
  

  @_$jni.internal
  const $ICameraController_OooO0O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0O0;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooO0O0 fromReference(_$jni.JReference reference) => ICameraController_OooO0O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooO0O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooO0O0$Type) &&
        other is $ICameraController_OooO0O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO`
class ICameraController_OooO0OO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooO0OO> $type;

  

  @_$jni.internal
  ICameraController_OooO0OO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooO0OO$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(I[Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.cameranotification.BTPeripheral[] bTPeripherals)`
  void OooO00o(int i, _$jni.JArray<_$jni.JObject> bTPeripherals, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, bTPeripherals.reference.pointer).check();
  }

  static final _id_OooO00o$1 = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void OooO00o$1(int i, _$jni.JObject bTPeripheral, ){
    
    _OooO00o$1(reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, i, bTPeripheral.reference.pointer).check();
  }

  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0O0(int i, com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void OooO0O0(int i, _$jni.JObject bTPeripheral, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, i, bTPeripheral.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooO0OO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(I[Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V') {
          _$impls[$p]!.OooO00o$1(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0O0(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooO0OO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(I[Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
        if ($impl.OooO00o$1$async) r'OooO00o(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
        if ($impl.OooO0O0$async) r'OooO0O0(ILcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooO0OO.implement(
    $ICameraController_OooO0OO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooO0OO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooO0OO {
  factory $ICameraController_OooO0OO(
    {required void Function(int i, _$jni.JArray<_$jni.JObject> bTPeripherals) OooO00o, bool OooO00o$async,
    required void Function(int i, _$jni.JObject bTPeripheral) OooO00o$1, bool OooO00o$1$async,
    required void Function(int i, _$jni.JObject bTPeripheral) OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_OooO0OO;

  

  void OooO00o(int i, _$jni.JArray<_$jni.JObject> bTPeripherals);
  bool get OooO00o$async => false;
  void OooO00o$1(int i, _$jni.JObject bTPeripheral);
  bool get OooO00o$1$async => false;
  void OooO0O0(int i, _$jni.JObject bTPeripheral);
  bool get OooO0O0$async => false;
}

final class _$ICameraController_OooO0OO with $ICameraController_OooO0OO {
  _$ICameraController_OooO0OO(
    {required void Function(int i, _$jni.JArray<_$jni.JObject> bTPeripherals) OooO00o, this.OooO00o$async = false,
    required void Function(int i, _$jni.JObject bTPeripheral) OooO00o$1, this.OooO00o$1$async = false,
    required void Function(int i, _$jni.JObject bTPeripheral) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO00o = OooO00o, _OooO00o$1 = OooO00o$1, _OooO0O0 = OooO0O0;

  

  final void Function(int i, _$jni.JArray<_$jni.JObject> bTPeripherals) _OooO00o;
  final bool OooO00o$async;
  final void Function(int i, _$jni.JObject bTPeripheral) _OooO00o$1;
  final bool OooO00o$1$async;
  final void Function(int i, _$jni.JObject bTPeripheral) _OooO0O0;
  final bool OooO0O0$async;

  void OooO00o(int i, _$jni.JArray<_$jni.JObject> bTPeripherals) {
    return _OooO00o(i, bTPeripherals);
  }  void OooO00o$1(int i, _$jni.JObject bTPeripheral) {
    return _OooO00o$1(i, bTPeripheral);
  }  void OooO0O0(int i, _$jni.JObject bTPeripheral) {
    return _OooO0O0(i, bTPeripheral);
  }}
final class $ICameraController_OooO0OO$Type extends _$jni.JObjType<ICameraController_OooO0OO> {
  

  @_$jni.internal
  const $ICameraController_OooO0OO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooO0OO fromReference(_$jni.JReference reference) => ICameraController_OooO0OO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooO0OO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooO0OO$Type) &&
        other is $ICameraController_OooO0OO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o`
class ICameraController_OooO0o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooO0o> $type;

  

  @_$jni.internal
  ICameraController_OooO0o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooO0o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooO0o$Type();
  static final _id_OooO0OO = _class.instanceMethodId(
    r'OooO0OO',
    r'()V',
  );

  static final _OooO0OO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO0OO()`
  void OooO0OO(){
    
    _OooO0OO(reference.pointer, _id_OooO0OO as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooO0o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0OO()V') {
          _$impls[$p]!.OooO0OO(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooO0o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0OO$async) r'OooO0OO()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooO0o.implement(
    $ICameraController_OooO0o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooO0o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooO0o {
  factory $ICameraController_OooO0o(
    {required void Function() OooO0OO, bool OooO0OO$async,}
  ) = _$ICameraController_OooO0o;

  

  void OooO0OO();
  bool get OooO0OO$async => false;
}

final class _$ICameraController_OooO0o with $ICameraController_OooO0o {
  _$ICameraController_OooO0o(
    {required void Function() OooO0OO, this.OooO0OO$async = false,}
  ) :  _OooO0OO = OooO0OO;

  

  final void Function() _OooO0OO;
  final bool OooO0OO$async;

  void OooO0OO() {
    return _OooO0OO();
  }}
final class $ICameraController_OooO0o$Type extends _$jni.JObjType<ICameraController_OooO0o> {
  

  @_$jni.internal
  const $ICameraController_OooO0o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooO0o fromReference(_$jni.JReference reference) => ICameraController_OooO0o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooO0o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooO0o$Type) &&
        other is $ICameraController_OooO0o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0`
class ICameraController_OooOO0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOO0> $type;

  

  @_$jni.internal
  ICameraController_OooOO0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOO0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOO0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(II)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public abstract void OooO00o(int i, int i1)`
  void OooO00o(int i, int i1, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, i1).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOO0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(II)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOO0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(II)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOO0.implement(
    $ICameraController_OooOO0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOO0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOO0 {
  factory $ICameraController_OooOO0(
    {required void Function(int i, int i1) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_OooOO0;

  

  void OooO00o(int i, int i1);
  bool get OooO00o$async => false;
}

final class _$ICameraController_OooOO0 with $ICameraController_OooOO0 {
  _$ICameraController_OooOO0(
    {required void Function(int i, int i1) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, int i1) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, int i1) {
    return _OooO00o(i, i1);
  }}
final class $ICameraController_OooOO0$Type extends _$jni.JObjType<ICameraController_OooOO0> {
  

  @_$jni.internal
  const $ICameraController_OooOO0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOO0 fromReference(_$jni.JReference reference) => ICameraController_OooOO0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOO0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOO0$Type) &&
        other is $ICameraController_OooOO0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0O`
class ICameraController_OooOO0O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOO0O> $type;

  

  @_$jni.internal
  ICameraController_OooOO0O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOO0O$Type();
  static final _id_OooO0o0 = _class.instanceMethodId(
    r'OooO0o0',
    r'(I)V',
  );

  static final _OooO0o0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0o0(int i)`
  void OooO0o0(int i, ){
    
    _OooO0o0(reference.pointer, _id_OooO0o0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOO0O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0o0(I)V') {
          _$impls[$p]!.OooO0o0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOO0O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0o0$async) r'OooO0o0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOO0O.implement(
    $ICameraController_OooOO0O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOO0O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOO0O {
  factory $ICameraController_OooOO0O(
    {required void Function(int i) OooO0o0, bool OooO0o0$async,}
  ) = _$ICameraController_OooOO0O;

  

  void OooO0o0(int i);
  bool get OooO0o0$async => false;
}

final class _$ICameraController_OooOO0O with $ICameraController_OooOO0O {
  _$ICameraController_OooOO0O(
    {required void Function(int i) OooO0o0, this.OooO0o0$async = false,}
  ) :  _OooO0o0 = OooO0o0;

  

  final void Function(int i) _OooO0o0;
  final bool OooO0o0$async;

  void OooO0o0(int i) {
    return _OooO0o0(i);
  }}
final class $ICameraController_OooOO0O$Type extends _$jni.JObjType<ICameraController_OooOO0O> {
  

  @_$jni.internal
  const $ICameraController_OooOO0O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOO0O fromReference(_$jni.JReference reference) => ICameraController_OooOO0O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOO0O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOO0O$Type) &&
        other is $ICameraController_OooOO0O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO`
class ICameraController_OooOOO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOOO> $type;

  

  @_$jni.internal
  ICameraController_OooOOO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOOO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOOO$Type();
  static final _id_OooO = _class.instanceMethodId(
    r'OooO',
    r'(I)V',
  );

  static final _OooO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO(int i)`
  void OooO(int i, ){
    
    _OooO(reference.pointer, _id_OooO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOOO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO(I)V') {
          _$impls[$p]!.OooO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOOO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO$async) r'OooO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOOO.implement(
    $ICameraController_OooOOO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOOO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOOO {
  factory $ICameraController_OooOOO(
    {required void Function(int i) OooO, bool OooO$async,}
  ) = _$ICameraController_OooOOO;

  

  void OooO(int i);
  bool get OooO$async => false;
}

final class _$ICameraController_OooOOO with $ICameraController_OooOOO {
  _$ICameraController_OooOOO(
    {required void Function(int i) OooO, this.OooO$async = false,}
  ) :  _OooO = OooO;

  

  final void Function(int i) _OooO;
  final bool OooO$async;

  void OooO(int i) {
    return _OooO(i);
  }}
final class $ICameraController_OooOOO$Type extends _$jni.JObjType<ICameraController_OooOOO> {
  

  @_$jni.internal
  const $ICameraController_OooOOO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOOO fromReference(_$jni.JReference reference) => ICameraController_OooOOO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOOO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOOO$Type) &&
        other is $ICameraController_OooOOO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO0`
class ICameraController_OooOOO0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOOO0> $type;

  

  @_$jni.internal
  ICameraController_OooOOO0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOOO0$Type();
  static final _id_OooOoo0 = _class.instanceMethodId(
    r'OooOoo0',
    r'(I)V',
  );

  static final _OooOoo0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOoo0(int i)`
  void OooOoo0(int i, ){
    
    _OooOoo0(reference.pointer, _id_OooOoo0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOOO0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOoo0(I)V') {
          _$impls[$p]!.OooOoo0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOOO0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOoo0$async) r'OooOoo0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOOO0.implement(
    $ICameraController_OooOOO0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOOO0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOOO0 {
  factory $ICameraController_OooOOO0(
    {required void Function(int i) OooOoo0, bool OooOoo0$async,}
  ) = _$ICameraController_OooOOO0;

  

  void OooOoo0(int i);
  bool get OooOoo0$async => false;
}

final class _$ICameraController_OooOOO0 with $ICameraController_OooOOO0 {
  _$ICameraController_OooOOO0(
    {required void Function(int i) OooOoo0, this.OooOoo0$async = false,}
  ) :  _OooOoo0 = OooOoo0;

  

  final void Function(int i) _OooOoo0;
  final bool OooOoo0$async;

  void OooOoo0(int i) {
    return _OooOoo0(i);
  }}
final class $ICameraController_OooOOO0$Type extends _$jni.JObjType<ICameraController_OooOOO0> {
  

  @_$jni.internal
  const $ICameraController_OooOOO0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOOO0 fromReference(_$jni.JReference reference) => ICameraController_OooOOO0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOOO0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOOO0$Type) &&
        other is $ICameraController_OooOOO0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOOOO`
class ICameraController_OooOOOO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOOOO> $type;

  

  @_$jni.internal
  ICameraController_OooOOOO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOOOO$Type();
  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOOOO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
        } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOOOO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOOOO',
      $p,
      _$invokePointer,
      [
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOOOO.implement(
    $ICameraController_OooOOOO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOOOO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOOOO {
  factory $ICameraController_OooOOOO(
    
  ) = _$ICameraController_OooOOOO;

  

}

final class _$ICameraController_OooOOOO with $ICameraController_OooOOOO {
  _$ICameraController_OooOOOO(
    
  );

  


}
final class $ICameraController_OooOOOO$Type extends _$jni.JObjType<ICameraController_OooOOOO> {
  

  @_$jni.internal
  const $ICameraController_OooOOOO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOOOO fromReference(_$jni.JReference reference) => ICameraController_OooOOOO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOOOO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOOOO$Type) &&
        other is $ICameraController_OooOOOO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOo`
class ICameraController_OooOo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOo> $type;

  

  @_$jni.internal
  ICameraController_OooOo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOo$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(IJ)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int64)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public abstract void OooO00o(int i, long j)`
  void OooO00o(int i, int j, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, j).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(IJ)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(IJ)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOo.implement(
    $ICameraController_OooOo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOo {
  factory $ICameraController_OooOo(
    {required void Function(int i, int j) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_OooOo;

  

  void OooO00o(int i, int j);
  bool get OooO00o$async => false;
}

final class _$ICameraController_OooOo with $ICameraController_OooOo {
  _$ICameraController_OooOo(
    {required void Function(int i, int j) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, int j) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, int j) {
    return _OooO00o(i, j);
  }}
final class $ICameraController_OooOo$Type extends _$jni.JObjType<ICameraController_OooOo> {
  

  @_$jni.internal
  const $ICameraController_OooOo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOo fromReference(_$jni.JReference reference) => ICameraController_OooOo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOo$Type) &&
        other is $ICameraController_OooOo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00`
class ICameraController_OooOo00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_OooOo00> $type;

  

  @_$jni.internal
  ICameraController_OooOo00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$OooOo00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_OooOo00$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO00o(_$jni.JObject ptzButtonEvent, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO0o = _class.instanceMethodId(
    r'OooO0o',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0o(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0o(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0o(reference.pointer, _id_OooO0o as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO0o0 = _class.instanceMethodId(
    r'OooO0o0',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0o0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0o0(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0o0(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0o0(reference.pointer, _id_OooO0o0 as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO0Oo = _class.instanceMethodId(
    r'OooO0Oo',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0Oo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0Oo(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0Oo(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0Oo(reference.pointer, _id_OooO0Oo as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO0OO = _class.instanceMethodId(
    r'OooO0OO',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0OO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0OO(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0OO(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0OO(reference.pointer, _id_OooO0OO as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0O0(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0O0(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  static final _id_OooO00o$1 = _class.instanceMethodId(
    r'OooO00o',
    r'(I)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO00o(int i)`
  void OooO00o$1(int i, ){
    
    _OooO00o$1(reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO0oO = _class.instanceMethodId(
    r'OooO0oO',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
  );

  static final _OooO0oO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0oO(com.arashivision.fmg.response.model.FmgModel$PtzButtonEvent ptzButtonEvent)`
  void OooO0oO(_$jni.JObject ptzButtonEvent, ){
    
    _OooO0oO(reference.pointer, _id_OooO0oO as _$jni.JMethodIDPtr, ptzButtonEvent.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_OooOo00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0o(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0o(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0o0(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0o0(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0Oo(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0Oo(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0OO(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0OO(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0O0(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(I)V') {
          _$impls[$p]!.OooO00o$1(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0oO(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V') {
          _$impls[$p]!.OooO0oO(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_OooOo00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO0o$async) r'OooO0o(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO0o0$async) r'OooO0o0(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO0Oo$async) r'OooO0Oo(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO0OO$async) r'OooO0OO(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO0O0$async) r'OooO0O0(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
        if ($impl.OooO00o$1$async) r'OooO00o(I)V',
        if ($impl.OooO0oO$async) r'OooO0oO(Lcom/arashivision/fmg/response/model/FmgModel$PtzButtonEvent;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_OooOo00.implement(
    $ICameraController_OooOo00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_OooOo00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_OooOo00 {
  factory $ICameraController_OooOo00(
    {required void Function(_$jni.JObject ptzButtonEvent) OooO00o, bool OooO00o$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0o, bool OooO0o$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0o0, bool OooO0o0$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0Oo, bool OooO0Oo$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0OO, bool OooO0OO$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0O0, bool OooO0O0$async,
    required void Function(int i) OooO00o$1, bool OooO00o$1$async,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0oO, bool OooO0oO$async,}
  ) = _$ICameraController_OooOo00;

  

  void OooO00o(_$jni.JObject ptzButtonEvent);
  bool get OooO00o$async => false;
  void OooO0o(_$jni.JObject ptzButtonEvent);
  bool get OooO0o$async => false;
  void OooO0o0(_$jni.JObject ptzButtonEvent);
  bool get OooO0o0$async => false;
  void OooO0Oo(_$jni.JObject ptzButtonEvent);
  bool get OooO0Oo$async => false;
  void OooO0OO(_$jni.JObject ptzButtonEvent);
  bool get OooO0OO$async => false;
  void OooO0O0(_$jni.JObject ptzButtonEvent);
  bool get OooO0O0$async => false;
  void OooO00o$1(int i);
  bool get OooO00o$1$async => false;
  void OooO0oO(_$jni.JObject ptzButtonEvent);
  bool get OooO0oO$async => false;
}

final class _$ICameraController_OooOo00 with $ICameraController_OooOo00 {
  _$ICameraController_OooOo00(
    {required void Function(_$jni.JObject ptzButtonEvent) OooO00o, this.OooO00o$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0o, this.OooO0o$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0o0, this.OooO0o0$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0Oo, this.OooO0Oo$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0OO, this.OooO0OO$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0O0, this.OooO0O0$async = false,
    required void Function(int i) OooO00o$1, this.OooO00o$1$async = false,
    required void Function(_$jni.JObject ptzButtonEvent) OooO0oO, this.OooO0oO$async = false,}
  ) :  _OooO00o = OooO00o, _OooO0o = OooO0o, _OooO0o0 = OooO0o0, _OooO0Oo = OooO0Oo, _OooO0OO = OooO0OO, _OooO0O0 = OooO0O0, _OooO00o$1 = OooO00o$1, _OooO0oO = OooO0oO;

  

  final void Function(_$jni.JObject ptzButtonEvent) _OooO00o;
  final bool OooO00o$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0o;
  final bool OooO0o$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0o0;
  final bool OooO0o0$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0Oo;
  final bool OooO0Oo$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0OO;
  final bool OooO0OO$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0O0;
  final bool OooO0O0$async;
  final void Function(int i) _OooO00o$1;
  final bool OooO00o$1$async;
  final void Function(_$jni.JObject ptzButtonEvent) _OooO0oO;
  final bool OooO0oO$async;

  void OooO00o(_$jni.JObject ptzButtonEvent) {
    return _OooO00o(ptzButtonEvent);
  }  void OooO0o(_$jni.JObject ptzButtonEvent) {
    return _OooO0o(ptzButtonEvent);
  }  void OooO0o0(_$jni.JObject ptzButtonEvent) {
    return _OooO0o0(ptzButtonEvent);
  }  void OooO0Oo(_$jni.JObject ptzButtonEvent) {
    return _OooO0Oo(ptzButtonEvent);
  }  void OooO0OO(_$jni.JObject ptzButtonEvent) {
    return _OooO0OO(ptzButtonEvent);
  }  void OooO0O0(_$jni.JObject ptzButtonEvent) {
    return _OooO0O0(ptzButtonEvent);
  }  void OooO00o$1(int i) {
    return _OooO00o$1(i);
  }  void OooO0oO(_$jni.JObject ptzButtonEvent) {
    return _OooO0oO(ptzButtonEvent);
  }}
final class $ICameraController_OooOo00$Type extends _$jni.JObjType<ICameraController_OooOo00> {
  

  @_$jni.internal
  const $ICameraController_OooOo00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;';

  @_$jni.internal
  @_$core.override
  ICameraController_OooOo00 fromReference(_$jni.JReference reference) => ICameraController_OooOo00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_OooOo00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_OooOo00$Type) &&
        other is $ICameraController_OooOo00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$Oooo0`
class ICameraController_Oooo0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_Oooo0> $type;

  

  @_$jni.internal
  ICameraController_Oooo0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$Oooo0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_Oooo0$Type();
  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0O0(int i, com.arashivision.fmg.response.FmgGetRunControlResp fmgGetRunControlResp)`
  void OooO0O0(int i, _$jni.JObject fmgGetRunControlResp, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, i, fmgGetRunControlResp.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_Oooo0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0O0(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_Oooo0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$Oooo0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0O0$async) r'OooO0O0(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_Oooo0.implement(
    $ICameraController_Oooo0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_Oooo0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_Oooo0 {
  factory $ICameraController_Oooo0(
    {required void Function(int i, _$jni.JObject fmgGetRunControlResp) OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_Oooo0;

  

  void OooO0O0(int i, _$jni.JObject fmgGetRunControlResp);
  bool get OooO0O0$async => false;
}

final class _$ICameraController_Oooo0 with $ICameraController_Oooo0 {
  _$ICameraController_Oooo0(
    {required void Function(int i, _$jni.JObject fmgGetRunControlResp) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO0O0 = OooO0O0;

  

  final void Function(int i, _$jni.JObject fmgGetRunControlResp) _OooO0O0;
  final bool OooO0O0$async;

  void OooO0O0(int i, _$jni.JObject fmgGetRunControlResp) {
    return _OooO0O0(i, fmgGetRunControlResp);
  }}
final class $ICameraController_Oooo0$Type extends _$jni.JObjType<ICameraController_Oooo0> {
  

  @_$jni.internal
  const $ICameraController_Oooo0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;';

  @_$jni.internal
  @_$core.override
  ICameraController_Oooo0 fromReference(_$jni.JReference reference) => ICameraController_Oooo0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_Oooo0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_Oooo0$Type) &&
        other is $ICameraController_Oooo0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$Oooo000`
class ICameraController_Oooo000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_Oooo000> $type;

  

  @_$jni.internal
  ICameraController_Oooo000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$Oooo000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_Oooo000$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/fmg/response/model/FmgAnalyticsParams;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.fmg.response.model.FmgAnalyticsParams fmgAnalyticsParams)`
  void OooO00o(int i, _$jni.JObject fmgAnalyticsParams, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, fmgAnalyticsParams.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_Oooo000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/fmg/response/model/FmgAnalyticsParams;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_Oooo000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$Oooo000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/fmg/response/model/FmgAnalyticsParams;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_Oooo000.implement(
    $ICameraController_Oooo000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_Oooo000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_Oooo000 {
  factory $ICameraController_Oooo000(
    {required void Function(int i, _$jni.JObject fmgAnalyticsParams) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_Oooo000;

  

  void OooO00o(int i, _$jni.JObject fmgAnalyticsParams);
  bool get OooO00o$async => false;
}

final class _$ICameraController_Oooo000 with $ICameraController_Oooo000 {
  _$ICameraController_Oooo000(
    {required void Function(int i, _$jni.JObject fmgAnalyticsParams) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject fmgAnalyticsParams) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject fmgAnalyticsParams) {
    return _OooO00o(i, fmgAnalyticsParams);
  }}
final class $ICameraController_Oooo000$Type extends _$jni.JObjType<ICameraController_Oooo000> {
  

  @_$jni.internal
  const $ICameraController_Oooo000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;';

  @_$jni.internal
  @_$core.override
  ICameraController_Oooo000 fromReference(_$jni.JReference reference) => ICameraController_Oooo000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_Oooo000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_Oooo000$Type) &&
        other is $ICameraController_Oooo000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00`
class ICameraController_o00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00> $type;

  

  @_$jni.internal
  ICameraController_o00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00$Type();
  static final _id_OooOo0o = _class.instanceMethodId(
    r'OooOo0o',
    r'(I)V',
  );

  static final _OooOo0o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOo0o(int i)`
  void OooOo0o(int i, ){
    
    _OooOo0o(reference.pointer, _id_OooOo0o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOo0o(I)V') {
          _$impls[$p]!.OooOo0o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOo0o$async) r'OooOo0o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00.implement(
    $ICameraController_o00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00 {
  factory $ICameraController_o00(
    {required void Function(int i) OooOo0o, bool OooOo0o$async,}
  ) = _$ICameraController_o00;

  

  void OooOo0o(int i);
  bool get OooOo0o$async => false;
}

final class _$ICameraController_o00 with $ICameraController_o00 {
  _$ICameraController_o00(
    {required void Function(int i) OooOo0o, this.OooOo0o$async = false,}
  ) :  _OooOo0o = OooOo0o;

  

  final void Function(int i) _OooOo0o;
  final bool OooOo0o$async;

  void OooOo0o(int i) {
    return _OooOo0o(i);
  }}
final class $ICameraController_o00$Type extends _$jni.JObjType<ICameraController_o00> {
  

  @_$jni.internal
  const $ICameraController_o00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00 fromReference(_$jni.JReference reference) => ICameraController_o00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00$Type) &&
        other is $ICameraController_o00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000`
class ICameraController_o000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000> $type;

  

  @_$jni.internal
  ICameraController_o000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/camerarequest/TimelapseOptionsInfo;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.camerarequest.TimelapseOptionsInfo timelapseOptionsInfo)`
  void OooO00o(int i, _$jni.JObject timelapseOptionsInfo, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, timelapseOptionsInfo.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/camerarequest/TimelapseOptionsInfo;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/camerarequest/TimelapseOptionsInfo;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000.implement(
    $ICameraController_o000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000 {
  factory $ICameraController_o000(
    {required void Function(int i, _$jni.JObject timelapseOptionsInfo) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000;

  

  void OooO00o(int i, _$jni.JObject timelapseOptionsInfo);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000 with $ICameraController_o000 {
  _$ICameraController_o000(
    {required void Function(int i, _$jni.JObject timelapseOptionsInfo) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject timelapseOptionsInfo) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject timelapseOptionsInfo) {
    return _OooO00o(i, timelapseOptionsInfo);
  }}
final class $ICameraController_o000$Type extends _$jni.JObjType<ICameraController_o000> {
  

  @_$jni.internal
  const $ICameraController_o000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000 fromReference(_$jni.JReference reference) => ICameraController_o000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000$Type) &&
        other is $ICameraController_o000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000`
class ICameraController_o0000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000> $type;

  

  @_$jni.internal
  ICameraController_o0000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/MultiPhotoOptions;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.MultiPhotoOptions multiPhotoOptions)`
  void OooO00o(int i, _$jni.JObject multiPhotoOptions, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, multiPhotoOptions.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/MultiPhotoOptions;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/MultiPhotoOptions;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000.implement(
    $ICameraController_o0000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000 {
  factory $ICameraController_o0000(
    {required void Function(int i, _$jni.JObject multiPhotoOptions) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000;

  

  void OooO00o(int i, _$jni.JObject multiPhotoOptions);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000 with $ICameraController_o0000 {
  _$ICameraController_o0000(
    {required void Function(int i, _$jni.JObject multiPhotoOptions) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject multiPhotoOptions) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject multiPhotoOptions) {
    return _OooO00o(i, multiPhotoOptions);
  }}
final class $ICameraController_o0000$Type extends _$jni.JObjType<ICameraController_o0000> {
  

  @_$jni.internal
  const $ICameraController_o0000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000 fromReference(_$jni.JReference reference) => ICameraController_o0000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000$Type) &&
        other is $ICameraController_o0000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00000`
class ICameraController_o00000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00000> $type;

  

  @_$jni.internal
  ICameraController_o00000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00000$Type();
  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(I)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0O0(int i)`
  void OooO0O0(int i, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0O0(I)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0O0$async) r'OooO0O0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00000.implement(
    $ICameraController_o00000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00000 {
  factory $ICameraController_o00000(
    {required void Function(int i) OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_o00000;

  

  void OooO0O0(int i);
  bool get OooO0O0$async => false;
}

final class _$ICameraController_o00000 with $ICameraController_o00000 {
  _$ICameraController_o00000(
    {required void Function(int i) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO0O0 = OooO0O0;

  

  final void Function(int i) _OooO0O0;
  final bool OooO0O0$async;

  void OooO0O0(int i) {
    return _OooO0O0(i);
  }}
final class $ICameraController_o00000$Type extends _$jni.JObjType<ICameraController_o00000> {
  

  @_$jni.internal
  const $ICameraController_o00000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00000 fromReference(_$jni.JReference reference) => ICameraController_o00000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00000$Type) &&
        other is $ICameraController_o00000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000000`
class ICameraController_o000000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000000> $type;

  

  @_$jni.internal
  ICameraController_o000000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000000$Type();
  static final _id_OooOo00 = _class.instanceMethodId(
    r'OooOo00',
    r'(I)V',
  );

  static final _OooOo00 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOo00(int i)`
  void OooOo00(int i, ){
    
    _OooOo00(reference.pointer, _id_OooOo00 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOo00(I)V') {
          _$impls[$p]!.OooOo00(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOo00$async) r'OooOo00(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000000.implement(
    $ICameraController_o000000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000000 {
  factory $ICameraController_o000000(
    {required void Function(int i) OooOo00, bool OooOo00$async,}
  ) = _$ICameraController_o000000;

  

  void OooOo00(int i);
  bool get OooOo00$async => false;
}

final class _$ICameraController_o000000 with $ICameraController_o000000 {
  _$ICameraController_o000000(
    {required void Function(int i) OooOo00, this.OooOo00$async = false,}
  ) :  _OooOo00 = OooOo00;

  

  final void Function(int i) _OooOo00;
  final bool OooOo00$async;

  void OooOo00(int i) {
    return _OooOo00(i);
  }}
final class $ICameraController_o000000$Type extends _$jni.JObjType<ICameraController_o000000> {
  

  @_$jni.internal
  const $ICameraController_o000000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000000 fromReference(_$jni.JReference reference) => ICameraController_o000000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000000$Type) &&
        other is $ICameraController_o000000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000000O`
class ICameraController_o000000O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000000O> $type;

  

  @_$jni.internal
  ICameraController_o000000O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000000O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000000O$Type();
  static final _id_OooO0o = _class.instanceMethodId(
    r'OooO0o',
    r'(I)V',
  );

  static final _OooO0o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0o(int i)`
  void OooO0o(int i, ){
    
    _OooO0o(reference.pointer, _id_OooO0o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000000O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0o(I)V') {
          _$impls[$p]!.OooO0o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000000O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000000O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0o$async) r'OooO0o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000000O.implement(
    $ICameraController_o000000O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000000O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000000O {
  factory $ICameraController_o000000O(
    {required void Function(int i) OooO0o, bool OooO0o$async,}
  ) = _$ICameraController_o000000O;

  

  void OooO0o(int i);
  bool get OooO0o$async => false;
}

final class _$ICameraController_o000000O with $ICameraController_o000000O {
  _$ICameraController_o000000O(
    {required void Function(int i) OooO0o, this.OooO0o$async = false,}
  ) :  _OooO0o = OooO0o;

  

  final void Function(int i) _OooO0o;
  final bool OooO0o$async;

  void OooO0o(int i) {
    return _OooO0o(i);
  }}
final class $ICameraController_o000000O$Type extends _$jni.JObjType<ICameraController_o000000O> {
  

  @_$jni.internal
  const $ICameraController_o000000O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000000O fromReference(_$jni.JReference reference) => ICameraController_o000000O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000000O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000000O$Type) &&
        other is $ICameraController_o000000O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00000O`
class ICameraController_o00000O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00000O> $type;

  

  @_$jni.internal
  ICameraController_o00000O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00000O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00000O$Type();
  static final _id_OooOOO = _class.instanceMethodId(
    r'OooOOO',
    r'(I)V',
  );

  static final _OooOOO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOO(int i)`
  void OooOOO(int i, ){
    
    _OooOOO(reference.pointer, _id_OooOOO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00000O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOO(I)V') {
          _$impls[$p]!.OooOOO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00000O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00000O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOO$async) r'OooOOO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00000O.implement(
    $ICameraController_o00000O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00000O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00000O {
  factory $ICameraController_o00000O(
    {required void Function(int i) OooOOO, bool OooOOO$async,}
  ) = _$ICameraController_o00000O;

  

  void OooOOO(int i);
  bool get OooOOO$async => false;
}

final class _$ICameraController_o00000O with $ICameraController_o00000O {
  _$ICameraController_o00000O(
    {required void Function(int i) OooOOO, this.OooOOO$async = false,}
  ) :  _OooOOO = OooOOO;

  

  final void Function(int i) _OooOOO;
  final bool OooOOO$async;

  void OooOOO(int i) {
    return _OooOOO(i);
  }}
final class $ICameraController_o00000O$Type extends _$jni.JObjType<ICameraController_o00000O> {
  

  @_$jni.internal
  const $ICameraController_o00000O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00000O fromReference(_$jni.JReference reference) => ICameraController_o00000O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00000O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00000O$Type) &&
        other is $ICameraController_o00000O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00000O0`
class ICameraController_o00000O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00000O0> $type;

  

  @_$jni.internal
  ICameraController_o00000O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00000O0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00000O0$Type();
  static final _id_OooOOO0 = _class.instanceMethodId(
    r'OooOOO0',
    r'(I)V',
  );

  static final _OooOOO0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOO0(int i)`
  void OooOOO0(int i, ){
    
    _OooOOO0(reference.pointer, _id_OooOOO0 as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(I)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO00o(int i)`
  void OooO00o(int i, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00000O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOO0(I)V') {
          _$impls[$p]!.OooOOO0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o(I)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00000O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00000O0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOO0$async) r'OooOOO0(I)V',
        if ($impl.OooO00o$async) r'OooO00o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00000O0.implement(
    $ICameraController_o00000O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00000O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00000O0 {
  factory $ICameraController_o00000O0(
    {required void Function(int i) OooOOO0, bool OooOOO0$async,
    required void Function(int i) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00000O0;

  

  void OooOOO0(int i);
  bool get OooOOO0$async => false;
  void OooO00o(int i);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00000O0 with $ICameraController_o00000O0 {
  _$ICameraController_o00000O0(
    {required void Function(int i) OooOOO0, this.OooOOO0$async = false,
    required void Function(int i) OooO00o, this.OooO00o$async = false,}
  ) :  _OooOOO0 = OooOOO0, _OooO00o = OooO00o;

  

  final void Function(int i) _OooOOO0;
  final bool OooOOO0$async;
  final void Function(int i) _OooO00o;
  final bool OooO00o$async;

  void OooOOO0(int i) {
    return _OooOOO0(i);
  }  void OooO00o(int i) {
    return _OooO00o(i);
  }}
final class $ICameraController_o00000O0$Type extends _$jni.JObjType<ICameraController_o00000O0> {
  

  @_$jni.internal
  const $ICameraController_o00000O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00000O0 fromReference(_$jni.JReference reference) => ICameraController_o00000O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00000O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00000O0$Type) &&
        other is $ICameraController_o00000O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO`
class ICameraController_o00000OO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00000OO> $type;

  

  @_$jni.internal
  ICameraController_o00000OO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00000OO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00000OO$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILjava/lang/String;I)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO00o(int i, java.lang.String string, int i1)`
  void OooO00o(int i, _$jni.JString string, int i1, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, string.reference.pointer, i1).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00000OO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILjava/lang/String;I)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00000OO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILjava/lang/String;I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00000OO.implement(
    $ICameraController_o00000OO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00000OO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00000OO {
  factory $ICameraController_o00000OO(
    {required void Function(int i, _$jni.JString string, int i1) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00000OO;

  

  void OooO00o(int i, _$jni.JString string, int i1);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00000OO with $ICameraController_o00000OO {
  _$ICameraController_o00000OO(
    {required void Function(int i, _$jni.JString string, int i1) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JString string, int i1) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JString string, int i1) {
    return _OooO00o(i, string, i1);
  }}
final class $ICameraController_o00000OO$Type extends _$jni.JObjType<ICameraController_o00000OO> {
  

  @_$jni.internal
  const $ICameraController_o00000OO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00000OO fromReference(_$jni.JReference reference) => ICameraController_o00000OO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00000OO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00000OO$Type) &&
        other is $ICameraController_o00000OO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000O`
class ICameraController_o0000O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000O> $type;

  

  @_$jni.internal
  ICameraController_o0000O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000O$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/Options;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.Options options)`
  void OooO00o(int i, _$jni.JObject options, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, options.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/Options;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/Options;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000O.implement(
    $ICameraController_o0000O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000O {
  factory $ICameraController_o0000O(
    {required void Function(int i, _$jni.JObject options) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000O;

  

  void OooO00o(int i, _$jni.JObject options);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000O with $ICameraController_o0000O {
  _$ICameraController_o0000O(
    {required void Function(int i, _$jni.JObject options) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject options) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject options) {
    return _OooO00o(i, options);
  }}
final class $ICameraController_o0000O$Type extends _$jni.JObjType<ICameraController_o0000O> {
  

  @_$jni.internal
  const $ICameraController_o0000O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000O fromReference(_$jni.JReference reference) => ICameraController_o0000O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000O$Type) &&
        other is $ICameraController_o0000O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0`
class ICameraController_o0000O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000O0> $type;

  

  @_$jni.internal
  ICameraController_o0000O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000O0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000O0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(I[B)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, byte[] bs)`
  void OooO00o(int i, _$jni.JArray<_$jni.jbyte> bs, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, bs.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(I[B)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(I[B)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000O0.implement(
    $ICameraController_o0000O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000O0 {
  factory $ICameraController_o0000O0(
    {required void Function(int i, _$jni.JArray<_$jni.jbyte> bs) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000O0;

  

  void OooO00o(int i, _$jni.JArray<_$jni.jbyte> bs);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000O0 with $ICameraController_o0000O0 {
  _$ICameraController_o0000O0(
    {required void Function(int i, _$jni.JArray<_$jni.jbyte> bs) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JArray<_$jni.jbyte> bs) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JArray<_$jni.jbyte> bs) {
    return _OooO00o(i, bs);
  }}
final class $ICameraController_o0000O0$Type extends _$jni.JObjType<ICameraController_o0000O0> {
  

  @_$jni.internal
  const $ICameraController_o0000O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000O0 fromReference(_$jni.JReference reference) => ICameraController_o0000O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000O0$Type) &&
        other is $ICameraController_o0000O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000O00`
class ICameraController_o0000O00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000O00> $type;

  

  @_$jni.internal
  ICameraController_o0000O00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000O00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000O00$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/cameraresponse/CameraCaptureStatus;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.cameraresponse.CameraCaptureStatus cameraCaptureStatus)`
  void OooO00o(int i, _$jni.JObject cameraCaptureStatus, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, cameraCaptureStatus.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000O00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/cameraresponse/CameraCaptureStatus;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000O00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000O00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/cameraresponse/CameraCaptureStatus;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000O00.implement(
    $ICameraController_o0000O00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000O00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000O00 {
  factory $ICameraController_o0000O00(
    {required void Function(int i, _$jni.JObject cameraCaptureStatus) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000O00;

  

  void OooO00o(int i, _$jni.JObject cameraCaptureStatus);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000O00 with $ICameraController_o0000O00 {
  _$ICameraController_o0000O00(
    {required void Function(int i, _$jni.JObject cameraCaptureStatus) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject cameraCaptureStatus) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject cameraCaptureStatus) {
    return _OooO00o(i, cameraCaptureStatus);
  }}
final class $ICameraController_o0000O00$Type extends _$jni.JObjType<ICameraController_o0000O00> {
  

  @_$jni.internal
  const $ICameraController_o0000O00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O00;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000O00 fromReference(_$jni.JReference reference) => ICameraController_o0000O00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000O00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000O00$Type) &&
        other is $ICameraController_o0000O00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0O`
class ICameraController_o0000O0O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000O0O> $type;

  

  @_$jni.internal
  ICameraController_o0000O0O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000O0O$Type();
  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(ILjava/util/List;)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO0O0(int i, java.util.List list)`
  void OooO0O0(int i, _$jni.JList<_$jni.JObject> list, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, i, list.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000O0O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0O0(ILjava/util/List;)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000O0O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0O0$async) r'OooO0O0(ILjava/util/List;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000O0O.implement(
    $ICameraController_o0000O0O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000O0O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000O0O {
  factory $ICameraController_o0000O0O(
    {required void Function(int i, _$jni.JList<_$jni.JObject> list) OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_o0000O0O;

  

  void OooO0O0(int i, _$jni.JList<_$jni.JObject> list);
  bool get OooO0O0$async => false;
}

final class _$ICameraController_o0000O0O with $ICameraController_o0000O0O {
  _$ICameraController_o0000O0O(
    {required void Function(int i, _$jni.JList<_$jni.JObject> list) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO0O0 = OooO0O0;

  

  final void Function(int i, _$jni.JList<_$jni.JObject> list) _OooO0O0;
  final bool OooO0O0$async;

  void OooO0O0(int i, _$jni.JList<_$jni.JObject> list) {
    return _OooO0O0(i, list);
  }}
final class $ICameraController_o0000O0O$Type extends _$jni.JObjType<ICameraController_o0000O0O> {
  

  @_$jni.internal
  const $ICameraController_o0000O0O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000O0O fromReference(_$jni.JReference reference) => ICameraController_o0000O0O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000O0O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000O0O$Type) &&
        other is $ICameraController_o0000O0O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000OO0`
class ICameraController_o0000OO0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000OO0> $type;

  

  @_$jni.internal
  ICameraController_o0000OO0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000OO0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000OO0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/PhotoOptions;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.PhotoOptions photoOptions)`
  void OooO00o(int i, _$jni.JObject photoOptions, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, photoOptions.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000OO0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/PhotoOptions;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000OO0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000OO0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/PhotoOptions;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000OO0.implement(
    $ICameraController_o0000OO0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000OO0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000OO0 {
  factory $ICameraController_o0000OO0(
    {required void Function(int i, _$jni.JObject photoOptions) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000OO0;

  

  void OooO00o(int i, _$jni.JObject photoOptions);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000OO0 with $ICameraController_o0000OO0 {
  _$ICameraController_o0000OO0(
    {required void Function(int i, _$jni.JObject photoOptions) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject photoOptions) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject photoOptions) {
    return _OooO00o(i, photoOptions);
  }}
final class $ICameraController_o0000OO0$Type extends _$jni.JObjType<ICameraController_o0000OO0> {
  

  @_$jni.internal
  const $ICameraController_o0000OO0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000OO0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000OO0 fromReference(_$jni.JReference reference) => ICameraController_o0000OO0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000OO0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000OO0$Type) &&
        other is $ICameraController_o0000OO0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000Ooo`
class ICameraController_o0000Ooo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000Ooo> $type;

  

  @_$jni.internal
  ICameraController_o0000Ooo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000Ooo$Type();
  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'(II)V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public abstract void OooO0O0(int i, int i1)`
  void OooO0O0(int i, int i1, ){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr, i, i1).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000Ooo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0O0(II)V') {
          _$impls[$p]!.OooO0O0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000Ooo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000Ooo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0O0$async) r'OooO0O0(II)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000Ooo.implement(
    $ICameraController_o0000Ooo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000Ooo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000Ooo {
  factory $ICameraController_o0000Ooo(
    {required void Function(int i, int i1) OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_o0000Ooo;

  

  void OooO0O0(int i, int i1);
  bool get OooO0O0$async => false;
}

final class _$ICameraController_o0000Ooo with $ICameraController_o0000Ooo {
  _$ICameraController_o0000Ooo(
    {required void Function(int i, int i1) OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO0O0 = OooO0O0;

  

  final void Function(int i, int i1) _OooO0O0;
  final bool OooO0O0$async;

  void OooO0O0(int i, int i1) {
    return _OooO0O0(i, i1);
  }}
final class $ICameraController_o0000Ooo$Type extends _$jni.JObjType<ICameraController_o0000Ooo> {
  

  @_$jni.internal
  const $ICameraController_o0000Ooo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000Ooo fromReference(_$jni.JReference reference) => ICameraController_o0000Ooo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000Ooo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000Ooo$Type) &&
        other is $ICameraController_o0000Ooo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo`
class ICameraController_o0000oo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0000oo> $type;

  

  @_$jni.internal
  ICameraController_o0000oo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0000oo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0000oo$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus$DarkEisStatus;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.onecamera.cameranotification.NotifyDarkEisStatus$DarkEisStatus darkEisStatus)`
  void OooO00o(int i, _$jni.JObject darkEisStatus, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, darkEisStatus.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0000oo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus$DarkEisStatus;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0000oo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/onecamera/cameranotification/NotifyDarkEisStatus$DarkEisStatus;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0000oo.implement(
    $ICameraController_o0000oo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0000oo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0000oo {
  factory $ICameraController_o0000oo(
    {required void Function(int i, _$jni.JObject darkEisStatus) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0000oo;

  

  void OooO00o(int i, _$jni.JObject darkEisStatus);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0000oo with $ICameraController_o0000oo {
  _$ICameraController_o0000oo(
    {required void Function(int i, _$jni.JObject darkEisStatus) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject darkEisStatus) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject darkEisStatus) {
    return _OooO00o(i, darkEisStatus);
  }}
final class $ICameraController_o0000oo$Type extends _$jni.JObjType<ICameraController_o0000oo> {
  

  @_$jni.internal
  const $ICameraController_o0000oo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0000oo fromReference(_$jni.JReference reference) => ICameraController_o0000oo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0000oo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0000oo$Type) &&
        other is $ICameraController_o0000oo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O`
class ICameraController_o000O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O> $type;

  

  @_$jni.internal
  ICameraController_o000O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O$Type();
  static final _id_OooOoO0 = _class.instanceMethodId(
    r'OooOoO0',
    r'(I)V',
  );

  static final _OooOoO0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOoO0(int i)`
  void OooOoO0(int i, ){
    
    _OooOoO0(reference.pointer, _id_OooOoO0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOoO0(I)V') {
          _$impls[$p]!.OooOoO0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOoO0$async) r'OooOoO0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O.implement(
    $ICameraController_o000O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O {
  factory $ICameraController_o000O(
    {required void Function(int i) OooOoO0, bool OooOoO0$async,}
  ) = _$ICameraController_o000O;

  

  void OooOoO0(int i);
  bool get OooOoO0$async => false;
}

final class _$ICameraController_o000O with $ICameraController_o000O {
  _$ICameraController_o000O(
    {required void Function(int i) OooOoO0, this.OooOoO0$async = false,}
  ) :  _OooOoO0 = OooOoO0;

  

  final void Function(int i) _OooOoO0;
  final bool OooOoO0$async;

  void OooOoO0(int i) {
    return _OooOoO0(i);
  }}
final class $ICameraController_o000O$Type extends _$jni.JObjType<ICameraController_o000O> {
  

  @_$jni.internal
  const $ICameraController_o000O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O fromReference(_$jni.JReference reference) => ICameraController_o000O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O$Type) &&
        other is $ICameraController_o000O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O0`
class ICameraController_o000O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O0> $type;

  

  @_$jni.internal
  ICameraController_o000O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O0$Type();
  static final _id_OooO0OO = _class.instanceMethodId(
    r'OooO0OO',
    r'(I)V',
  );

  static final _OooO0OO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0OO(int i)`
  void OooO0OO(int i, ){
    
    _OooO0OO(reference.pointer, _id_OooO0OO as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO0O0 = _class.instanceMethodId(
    r'OooO0O0',
    r'()V',
  );

  static final _OooO0O0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO0O0()`
  void OooO0O0(){
    
    _OooO0O0(reference.pointer, _id_OooO0O0 as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0OO(I)V') {
          _$impls[$p]!.OooO0OO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO0O0()V') {
          _$impls[$p]!.OooO0O0(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0OO$async) r'OooO0OO(I)V',
        if ($impl.OooO0O0$async) r'OooO0O0()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O0.implement(
    $ICameraController_o000O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O0 {
  factory $ICameraController_o000O0(
    {required void Function(int i) OooO0OO, bool OooO0OO$async,
    required void Function() OooO0O0, bool OooO0O0$async,}
  ) = _$ICameraController_o000O0;

  

  void OooO0OO(int i);
  bool get OooO0OO$async => false;
  void OooO0O0();
  bool get OooO0O0$async => false;
}

final class _$ICameraController_o000O0 with $ICameraController_o000O0 {
  _$ICameraController_o000O0(
    {required void Function(int i) OooO0OO, this.OooO0OO$async = false,
    required void Function() OooO0O0, this.OooO0O0$async = false,}
  ) :  _OooO0OO = OooO0OO, _OooO0O0 = OooO0O0;

  

  final void Function(int i) _OooO0OO;
  final bool OooO0OO$async;
  final void Function() _OooO0O0;
  final bool OooO0O0$async;

  void OooO0OO(int i) {
    return _OooO0OO(i);
  }  void OooO0O0() {
    return _OooO0O0();
  }}
final class $ICameraController_o000O0$Type extends _$jni.JObjType<ICameraController_o000O0> {
  

  @_$jni.internal
  const $ICameraController_o000O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O0 fromReference(_$jni.JReference reference) => ICameraController_o000O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O0$Type) &&
        other is $ICameraController_o000O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O00`
class ICameraController_o000O00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O00> $type;

  

  @_$jni.internal
  ICameraController_o000O00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O00$Type();
  static final _id_OooO0Oo = _class.instanceMethodId(
    r'OooO0Oo',
    r'(I)V',
  );

  static final _OooO0Oo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0Oo(int i)`
  void OooO0Oo(int i, ){
    
    _OooO0Oo(reference.pointer, _id_OooO0Oo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0Oo(I)V') {
          _$impls[$p]!.OooO0Oo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0Oo$async) r'OooO0Oo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O00.implement(
    $ICameraController_o000O00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O00 {
  factory $ICameraController_o000O00(
    {required void Function(int i) OooO0Oo, bool OooO0Oo$async,}
  ) = _$ICameraController_o000O00;

  

  void OooO0Oo(int i);
  bool get OooO0Oo$async => false;
}

final class _$ICameraController_o000O00 with $ICameraController_o000O00 {
  _$ICameraController_o000O00(
    {required void Function(int i) OooO0Oo, this.OooO0Oo$async = false,}
  ) :  _OooO0Oo = OooO0Oo;

  

  final void Function(int i) _OooO0Oo;
  final bool OooO0Oo$async;

  void OooO0Oo(int i) {
    return _OooO0Oo(i);
  }}
final class $ICameraController_o000O00$Type extends _$jni.JObjType<ICameraController_o000O00> {
  

  @_$jni.internal
  const $ICameraController_o000O00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O00 fromReference(_$jni.JReference reference) => ICameraController_o000O00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O00$Type) &&
        other is $ICameraController_o000O00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O000`
class ICameraController_o000O000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O000> $type;

  

  @_$jni.internal
  ICameraController_o000O000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O000$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO00o()`
  void OooO00o(){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o()V') {
          _$impls[$p]!.OooO00o(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O000.implement(
    $ICameraController_o000O000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O000 {
  factory $ICameraController_o000O000(
    {required void Function() OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000O000;

  

  void OooO00o();
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000O000 with $ICameraController_o000O000 {
  _$ICameraController_o000O000(
    {required void Function() OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function() _OooO00o;
  final bool OooO00o$async;

  void OooO00o() {
    return _OooO00o();
  }}
final class $ICameraController_o000O000$Type extends _$jni.JObjType<ICameraController_o000O000> {
  

  @_$jni.internal
  const $ICameraController_o000O000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O000 fromReference(_$jni.JReference reference) => ICameraController_o000O000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O000$Type) &&
        other is $ICameraController_o000O000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O00O`
class ICameraController_o000O00O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O00O> $type;

  

  @_$jni.internal
  ICameraController_o000O00O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O00O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O00O$Type();
  static final _id_OooOo = _class.instanceMethodId(
    r'OooOo',
    r'(I)V',
  );

  static final _OooOo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOo(int i)`
  void OooOo(int i, ){
    
    _OooOo(reference.pointer, _id_OooOo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O00O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOo(I)V') {
          _$impls[$p]!.OooOo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O00O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O00O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOo$async) r'OooOo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O00O.implement(
    $ICameraController_o000O00O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O00O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O00O {
  factory $ICameraController_o000O00O(
    {required void Function(int i) OooOo, bool OooOo$async,}
  ) = _$ICameraController_o000O00O;

  

  void OooOo(int i);
  bool get OooOo$async => false;
}

final class _$ICameraController_o000O00O with $ICameraController_o000O00O {
  _$ICameraController_o000O00O(
    {required void Function(int i) OooOo, this.OooOo$async = false,}
  ) :  _OooOo = OooOo;

  

  final void Function(int i) _OooOo;
  final bool OooOo$async;

  void OooOo(int i) {
    return _OooOo(i);
  }}
final class $ICameraController_o000O00O$Type extends _$jni.JObjType<ICameraController_o000O00O> {
  

  @_$jni.internal
  const $ICameraController_o000O00O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O00O fromReference(_$jni.JReference reference) => ICameraController_o000O00O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O00O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O00O$Type) &&
        other is $ICameraController_o000O00O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0`
class ICameraController_o000O0O0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O0O0> $type;

  

  @_$jni.internal
  ICameraController_o000O0O0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O0O0$Type();
  static final _id_OooOO0o = _class.instanceMethodId(
    r'OooOO0o',
    r'(I)V',
  );

  static final _OooOO0o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOO0o(int i)`
  void OooOO0o(int i, ){
    
    _OooOO0o(reference.pointer, _id_OooOO0o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O0O0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOO0o(I)V') {
          _$impls[$p]!.OooOO0o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O0O0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOO0o$async) r'OooOO0o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O0O0.implement(
    $ICameraController_o000O0O0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O0O0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O0O0 {
  factory $ICameraController_o000O0O0(
    {required void Function(int i) OooOO0o, bool OooOO0o$async,}
  ) = _$ICameraController_o000O0O0;

  

  void OooOO0o(int i);
  bool get OooOO0o$async => false;
}

final class _$ICameraController_o000O0O0 with $ICameraController_o000O0O0 {
  _$ICameraController_o000O0O0(
    {required void Function(int i) OooOO0o, this.OooOO0o$async = false,}
  ) :  _OooOO0o = OooOO0o;

  

  final void Function(int i) _OooOO0o;
  final bool OooOO0o$async;

  void OooOO0o(int i) {
    return _OooOO0o(i);
  }}
final class $ICameraController_o000O0O0$Type extends _$jni.JObjType<ICameraController_o000O0O0> {
  

  @_$jni.internal
  const $ICameraController_o000O0O0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O0O0 fromReference(_$jni.JReference reference) => ICameraController_o000O0O0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O0O0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O0O0$Type) &&
        other is $ICameraController_o000O0O0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo`
class ICameraController_o000O0Oo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O0Oo> $type;

  

  @_$jni.internal
  ICameraController_o000O0Oo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O0Oo$Type();
  static final _id_OooOO0O = _class.instanceMethodId(
    r'OooOO0O',
    r'(I)V',
  );

  static final _OooOO0O = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOO0O(int i)`
  void OooOO0O(int i, ){
    
    _OooOO0O(reference.pointer, _id_OooOO0O as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O0Oo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOO0O(I)V') {
          _$impls[$p]!.OooOO0O(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O0Oo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOO0O$async) r'OooOO0O(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O0Oo.implement(
    $ICameraController_o000O0Oo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O0Oo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O0Oo {
  factory $ICameraController_o000O0Oo(
    {required void Function(int i) OooOO0O, bool OooOO0O$async,}
  ) = _$ICameraController_o000O0Oo;

  

  void OooOO0O(int i);
  bool get OooOO0O$async => false;
}

final class _$ICameraController_o000O0Oo with $ICameraController_o000O0Oo {
  _$ICameraController_o000O0Oo(
    {required void Function(int i) OooOO0O, this.OooOO0O$async = false,}
  ) :  _OooOO0O = OooOO0O;

  

  final void Function(int i) _OooOO0O;
  final bool OooOO0O$async;

  void OooOO0O(int i) {
    return _OooOO0O(i);
  }}
final class $ICameraController_o000O0Oo$Type extends _$jni.JObjType<ICameraController_o000O0Oo> {
  

  @_$jni.internal
  const $ICameraController_o000O0Oo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O0Oo fromReference(_$jni.JReference reference) => ICameraController_o000O0Oo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O0Oo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O0Oo$Type) &&
        other is $ICameraController_o000O0Oo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o`
class ICameraController_o000O0o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000O0o> $type;

  

  @_$jni.internal
  ICameraController_o000O0o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000O0o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000O0o$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(I)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO00o(int i)`
  void OooO00o(int i, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000O0o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(I)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000O0o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000O0o.implement(
    $ICameraController_o000O0o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000O0o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000O0o {
  factory $ICameraController_o000O0o(
    {required void Function(int i) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000O0o;

  

  void OooO00o(int i);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000O0o with $ICameraController_o000O0o {
  _$ICameraController_o000O0o(
    {required void Function(int i) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i) {
    return _OooO00o(i);
  }}
final class $ICameraController_o000O0o$Type extends _$jni.JObjType<ICameraController_o000O0o> {
  

  @_$jni.internal
  const $ICameraController_o000O0o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000O0o fromReference(_$jni.JReference reference) => ICameraController_o000O0o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000O0o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000O0o$Type) &&
        other is $ICameraController_o000O0o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000OO`
class ICameraController_o000OO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000OO> $type;

  

  @_$jni.internal
  ICameraController_o000OO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000OO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000OO$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILjava/util/List;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, java.util.List list)`
  void OooO00o(int i, _$jni.JList<_$jni.JString> list, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, list.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000OO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILjava/util/List;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JStringType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000OO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000OO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILjava/util/List;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000OO.implement(
    $ICameraController_o000OO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000OO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000OO {
  factory $ICameraController_o000OO(
    {required void Function(int i, _$jni.JList<_$jni.JString> list) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000OO;

  

  void OooO00o(int i, _$jni.JList<_$jni.JString> list);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000OO with $ICameraController_o000OO {
  _$ICameraController_o000OO(
    {required void Function(int i, _$jni.JList<_$jni.JString> list) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JList<_$jni.JString> list) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JList<_$jni.JString> list) {
    return _OooO00o(i, list);
  }}
final class $ICameraController_o000OO$Type extends _$jni.JObjType<ICameraController_o000OO> {
  

  @_$jni.internal
  const $ICameraController_o000OO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000OO fromReference(_$jni.JReference reference) => ICameraController_o000OO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000OO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000OO$Type) &&
        other is $ICameraController_o000OO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000OO00`
class ICameraController_o000OO00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000OO00> $type;

  

  @_$jni.internal
  ICameraController_o000OO00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000OO00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000OO00$Type();
  static final _id_OooOOo0 = _class.instanceMethodId(
    r'OooOOo0',
    r'(I)V',
  );

  static final _OooOOo0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOo0(int i)`
  void OooOOo0(int i, ){
    
    _OooOOo0(reference.pointer, _id_OooOOo0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000OO00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOo0(I)V') {
          _$impls[$p]!.OooOOo0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000OO00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000OO00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOo0$async) r'OooOOo0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000OO00.implement(
    $ICameraController_o000OO00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000OO00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000OO00 {
  factory $ICameraController_o000OO00(
    {required void Function(int i) OooOOo0, bool OooOOo0$async,}
  ) = _$ICameraController_o000OO00;

  

  void OooOOo0(int i);
  bool get OooOOo0$async => false;
}

final class _$ICameraController_o000OO00 with $ICameraController_o000OO00 {
  _$ICameraController_o000OO00(
    {required void Function(int i) OooOOo0, this.OooOOo0$async = false,}
  ) :  _OooOOo0 = OooOOo0;

  

  final void Function(int i) _OooOOo0;
  final bool OooOOo0$async;

  void OooOOo0(int i) {
    return _OooOOo0(i);
  }}
final class $ICameraController_o000OO00$Type extends _$jni.JObjType<ICameraController_o000OO00> {
  

  @_$jni.internal
  const $ICameraController_o000OO00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000OO00 fromReference(_$jni.JReference reference) => ICameraController_o000OO00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000OO00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000OO00$Type) &&
        other is $ICameraController_o000OO00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000OO0O`
class ICameraController_o000OO0O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000OO0O> $type;

  

  @_$jni.internal
  ICameraController_o000OO0O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000OO0O$Type();
  static final _id_OooOoo = _class.instanceMethodId(
    r'OooOoo',
    r'(I)V',
  );

  static final _OooOoo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOoo(int i)`
  void OooOoo(int i, ){
    
    _OooOoo(reference.pointer, _id_OooOoo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000OO0O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOoo(I)V') {
          _$impls[$p]!.OooOoo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000OO0O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000OO0O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOoo$async) r'OooOoo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000OO0O.implement(
    $ICameraController_o000OO0O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000OO0O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000OO0O {
  factory $ICameraController_o000OO0O(
    {required void Function(int i) OooOoo, bool OooOoo$async,}
  ) = _$ICameraController_o000OO0O;

  

  void OooOoo(int i);
  bool get OooOoo$async => false;
}

final class _$ICameraController_o000OO0O with $ICameraController_o000OO0O {
  _$ICameraController_o000OO0O(
    {required void Function(int i) OooOoo, this.OooOoo$async = false,}
  ) :  _OooOoo = OooOoo;

  

  final void Function(int i) _OooOoo;
  final bool OooOoo$async;

  void OooOoo(int i) {
    return _OooOoo(i);
  }}
final class $ICameraController_o000OO0O$Type extends _$jni.JObjType<ICameraController_o000OO0O> {
  

  @_$jni.internal
  const $ICameraController_o000OO0O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000OO0O fromReference(_$jni.JReference reference) => ICameraController_o000OO0O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000OO0O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000OO0O$Type) &&
        other is $ICameraController_o000OO0O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo`
class ICameraController_o000OOo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000OOo> $type;

  

  @_$jni.internal
  ICameraController_o000OOo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000OOo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000OOo$Type();
  static final _id_OooO0oO = _class.instanceMethodId(
    r'OooO0oO',
    r'(I)V',
  );

  static final _OooO0oO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0oO(int i)`
  void OooO0oO(int i, ){
    
    _OooO0oO(reference.pointer, _id_OooO0oO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000OOo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0oO(I)V') {
          _$impls[$p]!.OooO0oO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000OOo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0oO$async) r'OooO0oO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000OOo.implement(
    $ICameraController_o000OOo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000OOo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000OOo {
  factory $ICameraController_o000OOo(
    {required void Function(int i) OooO0oO, bool OooO0oO$async,}
  ) = _$ICameraController_o000OOo;

  

  void OooO0oO(int i);
  bool get OooO0oO$async => false;
}

final class _$ICameraController_o000OOo with $ICameraController_o000OOo {
  _$ICameraController_o000OOo(
    {required void Function(int i) OooO0oO, this.OooO0oO$async = false,}
  ) :  _OooO0oO = OooO0oO;

  

  final void Function(int i) _OooO0oO;
  final bool OooO0oO$async;

  void OooO0oO(int i) {
    return _OooO0oO(i);
  }}
final class $ICameraController_o000OOo$Type extends _$jni.JObjType<ICameraController_o000OOo> {
  

  @_$jni.internal
  const $ICameraController_o000OOo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000OOo fromReference(_$jni.JReference reference) => ICameraController_o000OOo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000OOo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000OOo$Type) &&
        other is $ICameraController_o000OOo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo0`
class ICameraController_o000OOo0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000OOo0> $type;

  

  @_$jni.internal
  ICameraController_o000OOo0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000OOo0$Type();
  static final _id_OooOooO = _class.instanceMethodId(
    r'OooOooO',
    r'(I)V',
  );

  static final _OooOooO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOooO(int i)`
  void OooOooO(int i, ){
    
    _OooOooO(reference.pointer, _id_OooOooO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000OOo0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOooO(I)V') {
          _$impls[$p]!.OooOooO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000OOo0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOooO$async) r'OooOooO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000OOo0.implement(
    $ICameraController_o000OOo0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000OOo0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000OOo0 {
  factory $ICameraController_o000OOo0(
    {required void Function(int i) OooOooO, bool OooOooO$async,}
  ) = _$ICameraController_o000OOo0;

  

  void OooOooO(int i);
  bool get OooOooO$async => false;
}

final class _$ICameraController_o000OOo0 with $ICameraController_o000OOo0 {
  _$ICameraController_o000OOo0(
    {required void Function(int i) OooOooO, this.OooOooO$async = false,}
  ) :  _OooOooO = OooOooO;

  

  final void Function(int i) _OooOooO;
  final bool OooOooO$async;

  void OooOooO(int i) {
    return _OooOooO(i);
  }}
final class $ICameraController_o000OOo0$Type extends _$jni.JObjType<ICameraController_o000OOo0> {
  

  @_$jni.internal
  const $ICameraController_o000OOo0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000OOo0 fromReference(_$jni.JReference reference) => ICameraController_o000OOo0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000OOo0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000OOo0$Type) &&
        other is $ICameraController_o000OOo0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000Oo0`
class ICameraController_o000Oo0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000Oo0> $type;

  

  @_$jni.internal
  ICameraController_o000Oo0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000Oo0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000Oo0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(I)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO00o(int i)`
  void OooO00o(int i, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000Oo0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(I)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000Oo0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000Oo0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000Oo0.implement(
    $ICameraController_o000Oo0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000Oo0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000Oo0 {
  factory $ICameraController_o000Oo0(
    {required void Function(int i) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000Oo0;

  

  void OooO00o(int i);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000Oo0 with $ICameraController_o000Oo0 {
  _$ICameraController_o000Oo0(
    {required void Function(int i) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i) {
    return _OooO00o(i);
  }}
final class $ICameraController_o000Oo0$Type extends _$jni.JObjType<ICameraController_o000Oo0> {
  

  @_$jni.internal
  const $ICameraController_o000Oo0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000Oo0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000Oo0 fromReference(_$jni.JReference reference) => ICameraController_o000Oo0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000Oo0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000Oo0$Type) &&
        other is $ICameraController_o000Oo0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o000oOoO`
class ICameraController_o000oOoO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o000oOoO> $type;

  

  @_$jni.internal
  ICameraController_o000oOoO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o000oOoO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o000oOoO$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoOO/OooO00o;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooOoOO.OooO00o oooO00o)`
  void OooO00o(int i, _$jni.JObject oooO00o, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, oooO00o.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o000oOoO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoOO/OooO00o;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o000oOoO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o000oOoO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoOO/OooO00o;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o000oOoO.implement(
    $ICameraController_o000oOoO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o000oOoO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o000oOoO {
  factory $ICameraController_o000oOoO(
    {required void Function(int i, _$jni.JObject oooO00o) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o000oOoO;

  

  void OooO00o(int i, _$jni.JObject oooO00o);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o000oOoO with $ICameraController_o000oOoO {
  _$ICameraController_o000oOoO(
    {required void Function(int i, _$jni.JObject oooO00o) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject oooO00o) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject oooO00o) {
    return _OooO00o(i, oooO00o);
  }}
final class $ICameraController_o000oOoO$Type extends _$jni.JObjType<ICameraController_o000oOoO> {
  

  @_$jni.internal
  const $ICameraController_o000oOoO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000oOoO;';

  @_$jni.internal
  @_$core.override
  ICameraController_o000oOoO fromReference(_$jni.JReference reference) => ICameraController_o000oOoO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o000oOoO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o000oOoO$Type) &&
        other is $ICameraController_o000oOoO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000`
class ICameraController_o00O0000 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00O0000> $type;

  

  @_$jni.internal
  ICameraController_o00O0000.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00O0000');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00O0000$Type();
  static final _id_OooOOoo = _class.instanceMethodId(
    r'OooOOoo',
    r'(I)V',
  );

  static final _OooOOoo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOoo(int i)`
  void OooOOoo(int i, ){
    
    _OooOOoo(reference.pointer, _id_OooOOoo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00O0000> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOoo(I)V') {
          _$impls[$p]!.OooOOoo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00O0000 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOoo$async) r'OooOOoo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00O0000.implement(
    $ICameraController_o00O0000 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00O0000.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00O0000 {
  factory $ICameraController_o00O0000(
    {required void Function(int i) OooOOoo, bool OooOOoo$async,}
  ) = _$ICameraController_o00O0000;

  

  void OooOOoo(int i);
  bool get OooOOoo$async => false;
}

final class _$ICameraController_o00O0000 with $ICameraController_o00O0000 {
  _$ICameraController_o00O0000(
    {required void Function(int i) OooOOoo, this.OooOOoo$async = false,}
  ) :  _OooOOoo = OooOOoo;

  

  final void Function(int i) _OooOOoo;
  final bool OooOOoo$async;

  void OooOOoo(int i) {
    return _OooOOoo(i);
  }}
final class $ICameraController_o00O0000$Type extends _$jni.JObjType<ICameraController_o00O0000> {
  

  @_$jni.internal
  const $ICameraController_o00O0000$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00O0000 fromReference(_$jni.JReference reference) => ICameraController_o00O0000.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00O0000$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00O0000$Type) &&
        other is $ICameraController_o00O0000$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00O0O`
class ICameraController_o00O0O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00O0O> $type;

  

  @_$jni.internal
  ICameraController_o00O0O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00O0O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00O0O$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.fmg.response.FmgGetRunControlResp fmgGetRunControlResp)`
  void OooO00o(int i, _$jni.JObject fmgGetRunControlResp, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, fmgGetRunControlResp.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00O0O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00O0O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00O0O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/fmg/response/FmgGetRunControlResp;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00O0O.implement(
    $ICameraController_o00O0O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00O0O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00O0O {
  factory $ICameraController_o00O0O(
    {required void Function(int i, _$jni.JObject fmgGetRunControlResp) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00O0O;

  

  void OooO00o(int i, _$jni.JObject fmgGetRunControlResp);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00O0O with $ICameraController_o00O0O {
  _$ICameraController_o00O0O(
    {required void Function(int i, _$jni.JObject fmgGetRunControlResp) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject fmgGetRunControlResp) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject fmgGetRunControlResp) {
    return _OooO00o(i, fmgGetRunControlResp);
  }}
final class $ICameraController_o00O0O$Type extends _$jni.JObjType<ICameraController_o00O0O> {
  

  @_$jni.internal
  const $ICameraController_o00O0O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00O0O fromReference(_$jni.JReference reference) => ICameraController_o00O0O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00O0O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00O0O$Type) &&
        other is $ICameraController_o00O0O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00Oo0`
class ICameraController_o00Oo0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00Oo0> $type;

  

  @_$jni.internal
  ICameraController_o00Oo0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00Oo0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.fmg.response.model.FmgModel$PtzTrackSensitivityMode ptzTrackSensitivityMode)`
  void OooO00o(int i, _$jni.JObject ptzTrackSensitivityMode, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, ptzTrackSensitivityMode.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00Oo0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00Oo0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00Oo0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00Oo0.implement(
    $ICameraController_o00Oo0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00Oo0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00Oo0 {
  factory $ICameraController_o00Oo0(
    {required void Function(int i, _$jni.JObject ptzTrackSensitivityMode) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00Oo0;

  

  void OooO00o(int i, _$jni.JObject ptzTrackSensitivityMode);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00Oo0 with $ICameraController_o00Oo0 {
  _$ICameraController_o00Oo0(
    {required void Function(int i, _$jni.JObject ptzTrackSensitivityMode) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject ptzTrackSensitivityMode) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject ptzTrackSensitivityMode) {
    return _OooO00o(i, ptzTrackSensitivityMode);
  }}
final class $ICameraController_o00Oo0$Type extends _$jni.JObjType<ICameraController_o00Oo0> {
  

  @_$jni.internal
  const $ICameraController_o00Oo0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00Oo0 fromReference(_$jni.JReference reference) => ICameraController_o00Oo0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00Oo0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00Oo0$Type) &&
        other is $ICameraController_o00Oo0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00Ooo`
class ICameraController_o00Ooo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00Ooo> $type;

  

  @_$jni.internal
  ICameraController_o00Ooo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00Ooo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00Ooo$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILjava/lang/String;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, java.lang.String string)`
  void OooO00o(int i, _$jni.JString string, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, string.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00Ooo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILjava/lang/String;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00Ooo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00Ooo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILjava/lang/String;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00Ooo.implement(
    $ICameraController_o00Ooo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00Ooo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00Ooo {
  factory $ICameraController_o00Ooo(
    {required void Function(int i, _$jni.JString string) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00Ooo;

  

  void OooO00o(int i, _$jni.JString string);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00Ooo with $ICameraController_o00Ooo {
  _$ICameraController_o00Ooo(
    {required void Function(int i, _$jni.JString string) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JString string) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JString string) {
    return _OooO00o(i, string);
  }}
final class $ICameraController_o00Ooo$Type extends _$jni.JObjType<ICameraController_o00Ooo> {
  

  @_$jni.internal
  const $ICameraController_o00Ooo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Ooo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00Ooo fromReference(_$jni.JReference reference) => ICameraController_o00Ooo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00Ooo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00Ooo$Type) &&
        other is $ICameraController_o00Ooo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00oO0o`
class ICameraController_o00oO0o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00oO0o> $type;

  

  @_$jni.internal
  ICameraController_o00oO0o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00oO0o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00oO0o$Type();
  static final _id_OooOo0O = _class.instanceMethodId(
    r'OooOo0O',
    r'(I)V',
  );

  static final _OooOo0O = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOo0O(int i)`
  void OooOo0O(int i, ){
    
    _OooOo0O(reference.pointer, _id_OooOo0O as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00oO0o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOo0O(I)V') {
          _$impls[$p]!.OooOo0O(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00oO0o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00oO0o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOo0O$async) r'OooOo0O(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00oO0o.implement(
    $ICameraController_o00oO0o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00oO0o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00oO0o {
  factory $ICameraController_o00oO0o(
    {required void Function(int i) OooOo0O, bool OooOo0O$async,}
  ) = _$ICameraController_o00oO0o;

  

  void OooOo0O(int i);
  bool get OooOo0O$async => false;
}

final class _$ICameraController_o00oO0o with $ICameraController_o00oO0o {
  _$ICameraController_o00oO0o(
    {required void Function(int i) OooOo0O, this.OooOo0O$async = false,}
  ) :  _OooOo0O = OooOo0O;

  

  final void Function(int i) _OooOo0O;
  final bool OooOo0O$async;

  void OooOo0O(int i) {
    return _OooOo0O(i);
  }}
final class $ICameraController_o00oO0o$Type extends _$jni.JObjType<ICameraController_o00oO0o> {
  

  @_$jni.internal
  const $ICameraController_o00oO0o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oO0o;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00oO0o fromReference(_$jni.JReference reference) => ICameraController_o00oO0o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00oO0o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00oO0o$Type) &&
        other is $ICameraController_o00oO0o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo`
class ICameraController_o00oOoo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o00oOoo> $type;

  

  @_$jni.internal
  ICameraController_o00oOoo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o00oOoo$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public abstract void OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus, com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus1, int i)`
  void OooO00o(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, cameraSyncStatus.reference.pointer, cameraSyncStatus1.reference.pointer, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o00oOoo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const $BaseCamera_CameraSyncStatus$Type(), releaseOriginal: true),
$a[1].as(const $BaseCamera_CameraSyncStatus$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o00oOoo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o00oOoo.implement(
    $ICameraController_o00oOoo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o00oOoo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o00oOoo {
  factory $ICameraController_o00oOoo(
    {required void Function(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o00oOoo;

  

  void OooO00o(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o00oOoo with $ICameraController_o00oOoo {
  _$ICameraController_o00oOoo(
    {required void Function(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(BaseCamera_CameraSyncStatus cameraSyncStatus, BaseCamera_CameraSyncStatus cameraSyncStatus1, int i) {
    return _OooO00o(cameraSyncStatus, cameraSyncStatus1, i);
  }}
final class $ICameraController_o00oOoo$Type extends _$jni.JObjType<ICameraController_o00oOoo> {
  

  @_$jni.internal
  const $ICameraController_o00oOoo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o00oOoo fromReference(_$jni.JReference reference) => ICameraController_o00oOoo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o00oOoo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o00oOoo$Type) &&
        other is $ICameraController_o00oOoo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0O0O00`
class ICameraController_o0O0O00 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0O0O00> $type;

  

  @_$jni.internal
  ICameraController_o0O0O00.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0O0O00$Type();
  static final _id_OooOo0 = _class.instanceMethodId(
    r'OooOo0',
    r'(I)V',
  );

  static final _OooOo0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOo0(int i)`
  void OooOo0(int i, ){
    
    _OooOo0(reference.pointer, _id_OooOo0 as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0O0O00> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOo0(I)V') {
          _$impls[$p]!.OooOo0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0O0O00 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0O0O00',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOo0$async) r'OooOo0(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0O0O00.implement(
    $ICameraController_o0O0O00 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0O0O00.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0O0O00 {
  factory $ICameraController_o0O0O00(
    {required void Function(int i) OooOo0, bool OooOo0$async,}
  ) = _$ICameraController_o0O0O00;

  

  void OooOo0(int i);
  bool get OooOo0$async => false;
}

final class _$ICameraController_o0O0O00 with $ICameraController_o0O0O00 {
  _$ICameraController_o0O0O00(
    {required void Function(int i) OooOo0, this.OooOo0$async = false,}
  ) :  _OooOo0 = OooOo0;

  

  final void Function(int i) _OooOo0;
  final bool OooOo0$async;

  void OooOo0(int i) {
    return _OooOo0(i);
  }}
final class $ICameraController_o0O0O00$Type extends _$jni.JObjType<ICameraController_o0O0O00> {
  

  @_$jni.internal
  const $ICameraController_o0O0O00$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0O0O00 fromReference(_$jni.JReference reference) => ICameraController_o0O0O00.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0O0O00$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0O0O00$Type) &&
        other is $ICameraController_o0O0O00$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0O0ooO`
class ICameraController_o0O0ooO extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0O0ooO> $type;

  

  @_$jni.internal
  ICameraController_o0O0ooO.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0O0ooO');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0O0ooO$Type();
  static final _id_OooOoOO = _class.instanceMethodId(
    r'OooOoOO',
    r'(I)V',
  );

  static final _OooOoOO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOoOO(int i)`
  void OooOoOO(int i, ){
    
    _OooOoOO(reference.pointer, _id_OooOoOO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0O0ooO> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOoOO(I)V') {
          _$impls[$p]!.OooOoOO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0O0ooO $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0O0ooO',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOoOO$async) r'OooOoOO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0O0ooO.implement(
    $ICameraController_o0O0ooO $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0O0ooO.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0O0ooO {
  factory $ICameraController_o0O0ooO(
    {required void Function(int i) OooOoOO, bool OooOoOO$async,}
  ) = _$ICameraController_o0O0ooO;

  

  void OooOoOO(int i);
  bool get OooOoOO$async => false;
}

final class _$ICameraController_o0O0ooO with $ICameraController_o0O0ooO {
  _$ICameraController_o0O0ooO(
    {required void Function(int i) OooOoOO, this.OooOoOO$async = false,}
  ) :  _OooOoOO = OooOoOO;

  

  final void Function(int i) _OooOoOO;
  final bool OooOoOO$async;

  void OooOoOO(int i) {
    return _OooOoOO(i);
  }}
final class $ICameraController_o0O0ooO$Type extends _$jni.JObjType<ICameraController_o0O0ooO> {
  

  @_$jni.internal
  const $ICameraController_o0O0ooO$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0ooO;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0O0ooO fromReference(_$jni.JReference reference) => ICameraController_o0O0ooO.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0O0ooO$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0O0ooO$Type) &&
        other is $ICameraController_o0O0ooO$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0OO00O`
class ICameraController_o0OO00O extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0OO00O> $type;

  

  @_$jni.internal
  ICameraController_o0OO00O.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0OO00O$Type();
  static final _id_OooO0oo = _class.instanceMethodId(
    r'OooO0oo',
    r'(I)V',
  );

  static final _OooO0oo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooO0oo(int i)`
  void OooO0oo(int i, ){
    
    _OooO0oo(reference.pointer, _id_OooO0oo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0OO00O> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO0oo(I)V') {
          _$impls[$p]!.OooO0oo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0OO00O $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0OO00O',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO0oo$async) r'OooO0oo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0OO00O.implement(
    $ICameraController_o0OO00O $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0OO00O.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0OO00O {
  factory $ICameraController_o0OO00O(
    {required void Function(int i) OooO0oo, bool OooO0oo$async,}
  ) = _$ICameraController_o0OO00O;

  

  void OooO0oo(int i);
  bool get OooO0oo$async => false;
}

final class _$ICameraController_o0OO00O with $ICameraController_o0OO00O {
  _$ICameraController_o0OO00O(
    {required void Function(int i) OooO0oo, this.OooO0oo$async = false,}
  ) :  _OooO0oo = OooO0oo;

  

  final void Function(int i) _OooO0oo;
  final bool OooO0oo$async;

  void OooO0oo(int i) {
    return _OooO0oo(i);
  }}
final class $ICameraController_o0OO00O$Type extends _$jni.JObjType<ICameraController_o0OO00O> {
  

  @_$jni.internal
  const $ICameraController_o0OO00O$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0OO00O fromReference(_$jni.JReference reference) => ICameraController_o0OO00O.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0OO00O$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0OO00O$Type) &&
        other is $ICameraController_o0OO00O$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0OOO0o`
class ICameraController_o0OOO0o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0OOO0o> $type;

  

  @_$jni.internal
  ICameraController_o0OOO0o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0OOO0o$Type();
  static final _id_OooOOOo = _class.instanceMethodId(
    r'OooOOOo',
    r'(I)V',
  );

  static final _OooOOOo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOOo(int i)`
  void OooOOOo(int i, ){
    
    _OooOOOo(reference.pointer, _id_OooOOOo as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooOO0 = _class.instanceMethodId(
    r'OooOO0',
    r'(I)V',
  );

  static final _OooOO0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOO0(int i)`
  void OooOO0(int i, ){
    
    _OooOO0(reference.pointer, _id_OooOO0 as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO00o()`
  void OooO00o(){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0OOO0o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOOo(I)V') {
          _$impls[$p]!.OooOOOo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooOO0(I)V') {
          _$impls[$p]!.OooOO0(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o()V') {
          _$impls[$p]!.OooO00o(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0OOO0o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0OOO0o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOOo$async) r'OooOOOo(I)V',
        if ($impl.OooOO0$async) r'OooOO0(I)V',
        if ($impl.OooO00o$async) r'OooO00o()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0OOO0o.implement(
    $ICameraController_o0OOO0o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0OOO0o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0OOO0o {
  factory $ICameraController_o0OOO0o(
    {required void Function(int i) OooOOOo, bool OooOOOo$async,
    required void Function(int i) OooOO0, bool OooOO0$async,
    required void Function() OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0OOO0o;

  

  void OooOOOo(int i);
  bool get OooOOOo$async => false;
  void OooOO0(int i);
  bool get OooOO0$async => false;
  void OooO00o();
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0OOO0o with $ICameraController_o0OOO0o {
  _$ICameraController_o0OOO0o(
    {required void Function(int i) OooOOOo, this.OooOOOo$async = false,
    required void Function(int i) OooOO0, this.OooOO0$async = false,
    required void Function() OooO00o, this.OooO00o$async = false,}
  ) :  _OooOOOo = OooOOOo, _OooOO0 = OooOO0, _OooO00o = OooO00o;

  

  final void Function(int i) _OooOOOo;
  final bool OooOOOo$async;
  final void Function(int i) _OooOO0;
  final bool OooOO0$async;
  final void Function() _OooO00o;
  final bool OooO00o$async;

  void OooOOOo(int i) {
    return _OooOOOo(i);
  }  void OooOO0(int i) {
    return _OooOO0(i);
  }  void OooO00o() {
    return _OooO00o();
  }}
final class $ICameraController_o0OOO0o$Type extends _$jni.JObjType<ICameraController_o0OOO0o> {
  

  @_$jni.internal
  const $ICameraController_o0OOO0o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0OOO0o fromReference(_$jni.JReference reference) => ICameraController_o0OOO0o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0OOO0o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0OOO0o$Type) &&
        other is $ICameraController_o0OOO0o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0Oo0oo`
class ICameraController_o0Oo0oo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0Oo0oo> $type;

  

  @_$jni.internal
  ICameraController_o0Oo0oo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0Oo0oo$Type();
  static final _id_OooOOo = _class.instanceMethodId(
    r'OooOOo',
    r'(I)V',
  );

  static final _OooOOo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOo(int i)`
  void OooOOo(int i, ){
    
    _OooOOo(reference.pointer, _id_OooOOo as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0Oo0oo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOo(I)V') {
          _$impls[$p]!.OooOOo(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0Oo0oo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0Oo0oo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOo$async) r'OooOOo(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0Oo0oo.implement(
    $ICameraController_o0Oo0oo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0Oo0oo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0Oo0oo {
  factory $ICameraController_o0Oo0oo(
    {required void Function(int i) OooOOo, bool OooOOo$async,}
  ) = _$ICameraController_o0Oo0oo;

  

  void OooOOo(int i);
  bool get OooOOo$async => false;
}

final class _$ICameraController_o0Oo0oo with $ICameraController_o0Oo0oo {
  _$ICameraController_o0Oo0oo(
    {required void Function(int i) OooOOo, this.OooOOo$async = false,}
  ) :  _OooOOo = OooOOo;

  

  final void Function(int i) _OooOOo;
  final bool OooOOo$async;

  void OooOOo(int i) {
    return _OooOOo(i);
  }}
final class $ICameraController_o0Oo0oo$Type extends _$jni.JObjType<ICameraController_o0Oo0oo> {
  

  @_$jni.internal
  const $ICameraController_o0Oo0oo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0Oo0oo fromReference(_$jni.JReference reference) => ICameraController_o0Oo0oo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0Oo0oo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0Oo0oo$Type) &&
        other is $ICameraController_o0Oo0oo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0OoOo0`
class ICameraController_o0OoOo0 extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0OoOo0> $type;

  

  @_$jni.internal
  ICameraController_o0OoOo0.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0OoOo0');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0OoOo0$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(ILcom/arashivision/fmg/response/model/FmgSettingsParams;)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void OooO00o(int i, com.arashivision.fmg.response.model.FmgSettingsParams fmgSettingsParams)`
  void OooO00o(int i, _$jni.JObject fmgSettingsParams, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, fmgSettingsParams.reference.pointer).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0OoOo0> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(ILcom/arashivision/fmg/response/model/FmgSettingsParams;)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0OoOo0 $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0OoOo0',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(ILcom/arashivision/fmg/response/model/FmgSettingsParams;)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0OoOo0.implement(
    $ICameraController_o0OoOo0 $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0OoOo0.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0OoOo0 {
  factory $ICameraController_o0OoOo0(
    {required void Function(int i, _$jni.JObject fmgSettingsParams) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0OoOo0;

  

  void OooO00o(int i, _$jni.JObject fmgSettingsParams);
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0OoOo0 with $ICameraController_o0OoOo0 {
  _$ICameraController_o0OoOo0(
    {required void Function(int i, _$jni.JObject fmgSettingsParams) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, _$jni.JObject fmgSettingsParams) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, _$jni.JObject fmgSettingsParams) {
    return _OooO00o(i, fmgSettingsParams);
  }}
final class $ICameraController_o0OoOo0$Type extends _$jni.JObjType<ICameraController_o0OoOo0> {
  

  @_$jni.internal
  const $ICameraController_o0OoOo0$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OoOo0;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0OoOo0 fromReference(_$jni.JReference reference) => ICameraController_o0OoOo0.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0OoOo0$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0OoOo0$Type) &&
        other is $ICameraController_o0OoOo0$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$o0ooOOo`
class ICameraController_o0ooOOo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_o0ooOOo> $type;

  

  @_$jni.internal
  ICameraController_o0ooOOo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_o0ooOOo$Type();
  static final _id_OooOOOO = _class.instanceMethodId(
    r'OooOOOO',
    r'(I)V',
  );

  static final _OooOOOO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOOOO(int i)`
  void OooOOOO(int i, ){
    
    _OooOOOO(reference.pointer, _id_OooOOOO as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'()V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void OooO00o()`
  void OooO00o(){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_o0ooOOo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOOOO(I)V') {
          _$impls[$p]!.OooOOOO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'OooO00o()V') {
          _$impls[$p]!.OooO00o(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_o0ooOOo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$o0ooOOo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOOOO$async) r'OooOOOO(I)V',
        if ($impl.OooO00o$async) r'OooO00o()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_o0ooOOo.implement(
    $ICameraController_o0ooOOo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_o0ooOOo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_o0ooOOo {
  factory $ICameraController_o0ooOOo(
    {required void Function(int i) OooOOOO, bool OooOOOO$async,
    required void Function() OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_o0ooOOo;

  

  void OooOOOO(int i);
  bool get OooOOOO$async => false;
  void OooO00o();
  bool get OooO00o$async => false;
}

final class _$ICameraController_o0ooOOo with $ICameraController_o0ooOOo {
  _$ICameraController_o0ooOOo(
    {required void Function(int i) OooOOOO, this.OooOOOO$async = false,
    required void Function() OooO00o, this.OooO00o$async = false,}
  ) :  _OooOOOO = OooOOOO, _OooO00o = OooO00o;

  

  final void Function(int i) _OooOOOO;
  final bool OooOOOO$async;
  final void Function() _OooO00o;
  final bool OooO00o$async;

  void OooOOOO(int i) {
    return _OooOOOO(i);
  }  void OooO00o() {
    return _OooO00o();
  }}
final class $ICameraController_o0ooOOo$Type extends _$jni.JObjType<ICameraController_o0ooOOo> {
  

  @_$jni.internal
  const $ICameraController_o0ooOOo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;';

  @_$jni.internal
  @_$core.override
  ICameraController_o0ooOOo fromReference(_$jni.JReference reference) => ICameraController_o0ooOOo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_o0ooOOo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_o0ooOOo$Type) &&
        other is $ICameraController_o0ooOOo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$oo000o`
class ICameraController_oo000o extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_oo000o> $type;

  

  @_$jni.internal
  ICameraController_oo000o.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$oo000o');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_oo000o$Type();
  static final _id_OooO00o = _class.instanceMethodId(
    r'OooO00o',
    r'(IF)V',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public abstract void OooO00o(int i, float f)`
  void OooO00o(int i, double f, ){
    
    _OooO00o(reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, i, f).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_oo000o> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooO00o(IF)V') {
          _$impls[$p]!.OooO00o(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_oo000o $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$oo000o',
      $p,
      _$invokePointer,
      [
        if ($impl.OooO00o$async) r'OooO00o(IF)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_oo000o.implement(
    $ICameraController_oo000o $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_oo000o.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_oo000o {
  factory $ICameraController_oo000o(
    {required void Function(int i, double f) OooO00o, bool OooO00o$async,}
  ) = _$ICameraController_oo000o;

  

  void OooO00o(int i, double f);
  bool get OooO00o$async => false;
}

final class _$ICameraController_oo000o with $ICameraController_oo000o {
  _$ICameraController_oo000o(
    {required void Function(int i, double f) OooO00o, this.OooO00o$async = false,}
  ) :  _OooO00o = OooO00o;

  

  final void Function(int i, double f) _OooO00o;
  final bool OooO00o$async;

  void OooO00o(int i, double f) {
    return _OooO00o(i, f);
  }}
final class $ICameraController_oo000o$Type extends _$jni.JObjType<ICameraController_oo000o> {
  

  @_$jni.internal
  const $ICameraController_oo000o$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$oo000o;';

  @_$jni.internal
  @_$core.override
  ICameraController_oo000o fromReference(_$jni.JReference reference) => ICameraController_oo000o.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_oo000o$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_oo000o$Type) &&
        other is $ICameraController_oo000o$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController$oo0o0Oo`
class ICameraController_oo0o0Oo extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController_oo0o0Oo> $type;

  

  @_$jni.internal
  ICameraController_oo0o0Oo.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController$oo0o0Oo');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController_oo0o0Oo$Type();
  static final _id_OooOoO = _class.instanceMethodId(
    r'OooOoO',
    r'(I)V',
  );

  static final _OooOoO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public abstract void OooOoO(int i)`
  void OooOoO(int i, ){
    
    _OooOoO(reference.pointer, _id_OooOoO as _$jni.JMethodIDPtr, i).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController_oo0o0Oo> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'OooOoO(I)V') {
          _$impls[$p]!.OooOoO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController_oo0o0Oo $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController$oo0o0Oo',
      $p,
      _$invokePointer,
      [
        if ($impl.OooOoO$async) r'OooOoO(I)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController_oo0o0Oo.implement(
    $ICameraController_oo0o0Oo $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController_oo0o0Oo.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController_oo0o0Oo {
  factory $ICameraController_oo0o0Oo(
    {required void Function(int i) OooOoO, bool OooOoO$async,}
  ) = _$ICameraController_oo0o0Oo;

  

  void OooOoO(int i);
  bool get OooOoO$async => false;
}

final class _$ICameraController_oo0o0Oo with $ICameraController_oo0o0Oo {
  _$ICameraController_oo0o0Oo(
    {required void Function(int i) OooOoO, this.OooOoO$async = false,}
  ) :  _OooOoO = OooOoO;

  

  final void Function(int i) _OooOoO;
  final bool OooOoO$async;

  void OooOoO(int i) {
    return _OooOoO(i);
  }}
final class $ICameraController_oo0o0Oo$Type extends _$jni.JObjType<ICameraController_oo0o0Oo> {
  

  @_$jni.internal
  const $ICameraController_oo0o0Oo$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController$oo0o0Oo;';

  @_$jni.internal
  @_$core.override
  ICameraController_oo0o0Oo fromReference(_$jni.JReference reference) => ICameraController_oo0o0Oo.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController_oo0o0Oo$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController_oo0o0Oo$Type) &&
        other is $ICameraController_oo0o0Oo$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.ICameraController`
class ICameraController extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraController> $type;

  

  @_$jni.internal
  ICameraController.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/ICameraController');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraController$Type();
  static final _id_init = _class.instanceMethodId(
    r'init',
    r'()V',
  );

  static final _init = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void init()`
  void init(){
    
    _init(reference.pointer, _id_init as _$jni.JMethodIDPtr).check();
  }

  static final _id_destroy = _class.instanceMethodId(
    r'destroy',
    r'()V',
  );

  static final _destroy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void destroy()`
  void destroy(){
    
    _destroy(reference.pointer, _id_destroy as _$jni.JMethodIDPtr).check();
  }

  static final _id_setInstaCamera = _class.instanceMethodId(
    r'setInstaCamera',
    r'(Lcom/arashivision/camera/InstaCamera;)V',
  );

  static final _setInstaCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void setInstaCamera(com.arashivision.camera.InstaCamera instaCamera)`
  void setInstaCamera(_$jni.JObject instaCamera, ){
    
    _setInstaCamera(reference.pointer, _id_setInstaCamera as _$jni.JMethodIDPtr, instaCamera.reference.pointer).check();
  }

  static final _id_setBaseCamera = _class.instanceMethodId(
    r'setBaseCamera',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
  );

  static final _setBaseCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void setBaseCamera(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  void setBaseCamera(BaseCamera baseCamera, ){
    
    _setBaseCamera(reference.pointer, _id_setBaseCamera as _$jni.JMethodIDPtr, baseCamera.reference.pointer).check();
  }

  static final _id_setBaseCameraChangedCallback = _class.instanceMethodId(
    r'setBaseCameraChangedCallback',
    r'(Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;)V',
  );

  static final _setBaseCameraChangedCallback = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void setBaseCameraChangedCallback(com.arashivision.insta360.basecamera.camera.IBaseCameraChangedCallback iBaseCameraChangedCallback)`
  void setBaseCameraChangedCallback(IBaseCameraChangedCallback iBaseCameraChangedCallback, ){
    
    _setBaseCameraChangedCallback(reference.pointer, _id_setBaseCameraChangedCallback as _$jni.JMethodIDPtr, iBaseCameraChangedCallback.reference.pointer).check();
  }

  static final _id_setSyncStatusChangeListener = _class.instanceMethodId(
    r'setSyncStatusChangeListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;)V',
  );

  static final _setSyncStatusChangeListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void setSyncStatusChangeListener(com.arashivision.insta360.basecamera.camera.ICameraController$o00oOoo o00oOoo)`
  void setSyncStatusChangeListener(ICameraController_o00oOoo o00oOoo, ){
    
    _setSyncStatusChangeListener(reference.pointer, _id_setSyncStatusChangeListener as _$jni.JMethodIDPtr, o00oOoo.reference.pointer).check();
  }

  static final _id_setCaptureStatusChangeListener = _class.instanceMethodId(
    r'setCaptureStatusChangeListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;)V',
  );

  static final _setCaptureStatusChangeListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCaptureStatusChangeListener(com.arashivision.insta360.basecamera.camera.ICameraController$ICaptureStatusChangedListener iCaptureStatusChangedListener)`
  void setCaptureStatusChangeListener(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener, ){
    
    _setCaptureStatusChangeListener(reference.pointer, _id_setCaptureStatusChangeListener as _$jni.JMethodIDPtr, iCaptureStatusChangedListener.reference.pointer).check();
  }

  static final _id_setPreviewStatusChangedListener = _class.instanceMethodId(
    r'setPreviewStatusChangedListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;)V',
  );

  static final _setPreviewStatusChangedListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewStatusChangedListener(com.arashivision.insta360.basecamera.camera.ICameraController$IPreviewStatusChangedListener iPreviewStatusChangedListener)`
  void setPreviewStatusChangedListener(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener, ){
    
    _setPreviewStatusChangedListener(reference.pointer, _id_setPreviewStatusChangedListener as _$jni.JMethodIDPtr, iPreviewStatusChangedListener.reference.pointer).check();
  }

  static final _id_setDeveloperConfigProvider = _class.instanceMethodId(
    r'setDeveloperConfigProvider',
    r'(LOooO00o/OooO00o/OooO00o/OooO00o/OooO00o;)V',
  );

  static final _setDeveloperConfigProvider = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setDeveloperConfigProvider(OooO00o.OooO00o.OooO00o.OooO00o.OooO00o oooO00o)`
  void setDeveloperConfigProvider(_$jni.JObject oooO00o, ){
    
    _setDeveloperConfigProvider(reference.pointer, _id_setDeveloperConfigProvider as _$jni.JMethodIDPtr, oooO00o.reference.pointer).check();
  }

  static final _id_setCameraLiveListener = _class.instanceMethodId(
    r'setCameraLiveListener',
    r'(Lcom/arashivision/camera/listener/ICameraLiveStateListener;Lcom/arashivision/onecamera/InfoUpdateListener;)V',
  );

  static final _setCameraLiveListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraLiveListener(com.arashivision.camera.listener.ICameraLiveStateListener iCameraLiveStateListener, com.arashivision.onecamera.InfoUpdateListener infoUpdateListener)`
  void setCameraLiveListener(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener, ){
    
    _setCameraLiveListener(reference.pointer, _id_setCameraLiveListener as _$jni.JMethodIDPtr, iCameraLiveStateListener.reference.pointer, infoUpdateListener.reference.pointer).check();
  }

  static final _id_onCameraInfoNotify = _class.instanceMethodId(
    r'onCameraInfoNotify',
    r'(IILjava/lang/Object;)V',
  );

  static final _onCameraInfoNotify = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onCameraInfoNotify(int i, int i1, java.lang.Object object)`
  void onCameraInfoNotify(int i, int i1, _$jni.JObject object, ){
    
    _onCameraInfoNotify(reference.pointer, _id_onCameraInfoNotify as _$jni.JMethodIDPtr, i, i1, object.reference.pointer).check();
  }

  static final _id_getCameraHost = _class.instanceMethodId(
    r'getCameraHost',
    r'()Ljava/lang/String;',
  );

  static final _getCameraHost = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraHost()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraHost(){
    
    return _getCameraHost(reference.pointer, _id_getCameraHost as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getPort = _class.instanceMethodId(
    r'getPort',
    r'()I',
  );

  static final _getPort = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPort()`
  int getPort(){
    
    return _getPort(reference.pointer, _id_getPort as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFirmwareUploadPath = _class.instanceMethodId(
    r'getFirmwareUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getFirmwareUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFirmwareUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFirmwareUploadPath(){
    
    return _getFirmwareUploadPath(reference.pointer, _id_getFirmwareUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFileUploadPath = _class.instanceMethodId(
    r'getCameraFileUploadPath',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFileUploadPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFileUploadPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFileUploadPath(){
    
    return _getCameraFileUploadPath(reference.pointer, _id_getCameraFileUploadPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_supportUploadFileToCamera = _class.instanceMethodId(
    r'supportUploadFileToCamera',
    r'()Z',
  );

  static final _supportUploadFileToCamera = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportUploadFileToCamera()`
  bool supportUploadFileToCamera(){
    
    return _supportUploadFileToCamera(reference.pointer, _id_supportUploadFileToCamera as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getVersionValidLength = _class.instanceMethodId(
    r'getVersionValidLength',
    r'()I',
  );

  static final _getVersionValidLength = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract int getVersionValidLength()`
  int getVersionValidLength(){
    
    return _getVersionValidLength(reference.pointer, _id_getVersionValidLength as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setAssistiveGridEnable = _class.instanceMethodId(
    r'setAssistiveGridEnable',
    r'(Z)V',
  );

  static final _setAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAssistiveGridEnable(boolean z)`
  void setAssistiveGridEnable(bool z, ){
    
    _setAssistiveGridEnable(reference.pointer, _id_setAssistiveGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getAssistiveGridEnable = _class.instanceMethodId(
    r'getAssistiveGridEnable',
    r'()Z',
  );

  static final _getAssistiveGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getAssistiveGridEnable()`
  bool getAssistiveGridEnable(){
    
    return _getAssistiveGridEnable(reference.pointer, _id_getAssistiveGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setFreeFrameGridEnable = _class.instanceMethodId(
    r'setFreeFrameGridEnable',
    r'(Z)V',
  );

  static final _setFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFreeFrameGridEnable(boolean z)`
  void setFreeFrameGridEnable(bool z, ){
    
    _setFreeFrameGridEnable(reference.pointer, _id_setFreeFrameGridEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getFreeFrameGridEnable = _class.instanceMethodId(
    r'getFreeFrameGridEnable',
    r'()Z',
  );

  static final _getFreeFrameGridEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getFreeFrameGridEnable()`
  bool getFreeFrameGridEnable(){
    
    return _getFreeFrameGridEnable(reference.pointer, _id_getFreeFrameGridEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_freeze = _class.instanceMethodId(
    r'freeze',
    r'()V',
  );

  static final _freeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void freeze()`
  void freeze(){
    
    _freeze(reference.pointer, _id_freeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_unfreeze = _class.instanceMethodId(
    r'unfreeze',
    r'()V',
  );

  static final _unfreeze = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void unfreeze()`
  void unfreeze(){
    
    _unfreeze(reference.pointer, _id_unfreeze as _$jni.JMethodIDPtr).check();
  }

  static final _id_isFrozen = _class.instanceMethodId(
    r'isFrozen',
    r'()Z',
  );

  static final _isFrozen = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean isFrozen()`
  bool isFrozen(){
    
    return _isFrozen(reference.pointer, _id_isFrozen as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_changeCameraSyncStatus = _class.instanceMethodId(
    r'changeCameraSyncStatus',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;)V',
  );

  static final _changeCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void changeCameraSyncStatus(com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus cameraSyncStatus)`
  void changeCameraSyncStatus(BaseCamera_CameraSyncStatus cameraSyncStatus, ){
    
    _changeCameraSyncStatus(reference.pointer, _id_changeCameraSyncStatus as _$jni.JMethodIDPtr, cameraSyncStatus.reference.pointer).check();
  }

  static final _id_getCurCameraSyncStatus = _class.instanceMethodId(
    r'getCurCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getCurCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getCurCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getCurCameraSyncStatus(){
    
    return _getCurCameraSyncStatus(reference.pointer, _id_getCurCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_getLastCameraSyncStatus = _class.instanceMethodId(
    r'getLastCameraSyncStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;',
  );

  static final _getLastCameraSyncStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract com.arashivision.insta360.basecamera.camera.BaseCamera$CameraSyncStatus getLastCameraSyncStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CameraSyncStatus getLastCameraSyncStatus(){
    
    return _getLastCameraSyncStatus(reference.pointer, _id_getLastCameraSyncStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CameraSyncStatus$Type());
  }

  static final _id_isCameraBusy = _class.instanceMethodId(
    r'isCameraBusy',
    r'()Z',
  );

  static final _isCameraBusy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraBusy()`
  bool isCameraBusy(){
    
    return _isCameraBusy(reference.pointer, _id_isCameraBusy as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setConnectType = _class.instanceMethodId(
    r'setConnectType',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V',
  );

  static final _setConnectType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setConnectType(com.arashivision.insta360.basecamera.camera.BaseCamera$ConnectType connectType)`
  void setConnectType(BaseCamera_ConnectType connectType, ){
    
    _setConnectType(reference.pointer, _id_setConnectType as _$jni.JMethodIDPtr, connectType.reference.pointer).check();
  }

  static final _id_onlySupportBleConnect = _class.instanceMethodId(
    r'onlySupportBleConnect',
    r'()Z',
  );

  static final _onlySupportBleConnect = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean onlySupportBleConnect()`
  bool onlySupportBleConnect(){
    
    return _onlySupportBleConnect(reference.pointer, _id_onlySupportBleConnect as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCaptureByUser = _class.instanceMethodId(
    r'isCaptureByUser',
    r'()Z',
  );

  static final _isCaptureByUser = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean isCaptureByUser()`
  bool isCaptureByUser(){
    
    return _isCaptureByUser(reference.pointer, _id_isCaptureByUser as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_fetchCameraType = _class.instanceMethodId(
    r'fetchCameraType',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO;)V',
  );

  static final _fetchCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void fetchCameraType(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOOO oooOOOO)`
  void fetchCameraType(ICameraController_OooOOOO oooOOOO, ){
    
    _fetchCameraType(reference.pointer, _id_fetchCameraType as _$jni.JMethodIDPtr, oooOOOO.reference.pointer).check();
  }

  static final _id_startSync = _class.instanceMethodId(
    r'startSync',
    r'()V',
  );

  static final _startSync = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void startSync()`
  void startSync(){
    
    _startSync(reference.pointer, _id_startSync as _$jni.JMethodIDPtr).check();
  }

  static final _id_setAuthorizationChecker = _class.instanceMethodId(
    r'setAuthorizationChecker',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;)V',
  );

  static final _setAuthorizationChecker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAuthorizationChecker(com.arashivision.insta360.basecamera.camera.ICameraController$OooO00o oooO00o)`
  void setAuthorizationChecker(ICameraController_OooO00o oooO00o, ){
    
    _setAuthorizationChecker(reference.pointer, _id_setAuthorizationChecker as _$jni.JMethodIDPtr, oooO00o.reference.pointer).check();
  }

  static final _id_setCheckActivationList = _class.instanceMethodId(
    r'setCheckActivationList',
    r'(Ljava/util/List;)V',
  );

  static final _setCheckActivationList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCheckActivationList(java.util.List list)`
  void setCheckActivationList(_$jni.JList<ICameraCheck> list, ){
    
    _setCheckActivationList(reference.pointer, _id_setCheckActivationList as _$jni.JMethodIDPtr, list.reference.pointer).check();
  }

  static final _id_continueCameraCheck = _class.instanceMethodId(
    r'continueCameraCheck',
    r'()V',
  );

  static final _continueCameraCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void continueCameraCheck()`
  void continueCameraCheck(){
    
    _continueCameraCheck(reference.pointer, _id_continueCameraCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_getSerial = _class.instanceMethodId(
    r'getSerial',
    r'()Ljava/lang/String;',
  );

  static final _getSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getSerial(){
    
    return _getSerial(reference.pointer, _id_getSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setSerial = _class.instanceMethodId(
    r'setSerial',
    r'(Ljava/lang/String;)V',
  );

  static final _setSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSerial(java.lang.String string)`
  void setSerial(_$jni.JString string, ){
    
    _setSerial(reference.pointer, _id_setSerial as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getUUID = _class.instanceMethodId(
    r'getUUID',
    r'()Ljava/lang/String;',
  );

  static final _getUUID = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getUUID()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getUUID(){
    
    return _getUUID(reference.pointer, _id_getUUID as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor0Serial = _class.instanceMethodId(
    r'getVR360Senor0Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor0Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor0Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor0Serial(){
    
    return _getVR360Senor0Serial(reference.pointer, _id_getVR360Senor0Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR360Senor1Serial = _class.instanceMethodId(
    r'getVR360Senor1Serial',
    r'()Ljava/lang/String;',
  );

  static final _getVR360Senor1Serial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR360Senor1Serial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR360Senor1Serial(){
    
    return _getVR360Senor1Serial(reference.pointer, _id_getVR360Senor1Serial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getVR180SenorSerial = _class.instanceMethodId(
    r'getVR180SenorSerial',
    r'()Ljava/lang/String;',
  );

  static final _getVR180SenorSerial = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getVR180SenorSerial()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getVR180SenorSerial(){
    
    return _getVR180SenorSerial(reference.pointer, _id_getVR180SenorSerial as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getSensorSerials = _class.instanceMethodId(
    r'getSensorSerials',
    r'()[Ljava/lang/String;',
  );

  static final _getSensorSerials = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String[] getSensorSerials()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> getSensorSerials(){
    
    return _getSensorSerials(reference.pointer, _id_getSensorSerials as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraName = _class.instanceMethodId(
    r'getCameraName',
    r'()Ljava/lang/String;',
  );

  static final _getCameraName = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraName()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraName(){
    
    return _getCameraName(reference.pointer, _id_getCameraName as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getFWVersion = _class.instanceMethodId(
    r'getFWVersion',
    r'()Ljava/lang/String;',
  );

  static final _getFWVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getFWVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getFWVersion(){
    
    return _getFWVersion(reference.pointer, _id_getFWVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraFwVersion = _class.instanceMethodId(
    r'getCameraFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraFwVersion(){
    
    return _getCameraFwVersion(reference.pointer, _id_getCameraFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getCameraBleVersion = _class.instanceMethodId(
    r'getCameraBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getCameraBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraBleVersion(){
    
    return _getCameraBleVersion(reference.pointer, _id_getCameraBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxFwVersion = _class.instanceMethodId(
    r'getChargeBoxFwVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxFwVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxFwVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxFwVersion(){
    
    return _getChargeBoxFwVersion(reference.pointer, _id_getChargeBoxFwVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getChargeBoxBleVersion = _class.instanceMethodId(
    r'getChargeBoxBleVersion',
    r'()Ljava/lang/String;',
  );

  static final _getChargeBoxBleVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getChargeBoxBleVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getChargeBoxBleVersion(){
    
    return _getChargeBoxBleVersion(reference.pointer, _id_getChargeBoxBleVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffset = _class.instanceMethodId(
    r'setMediaOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setMediaOffset(java.lang.String string)`
  void setMediaOffset(_$jni.JString string, ){
    
    _setMediaOffset(reference.pointer, _id_setMediaOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getMediaOffset = _class.instanceMethodId(
    r'getMediaOffset',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffset(){
    
    return _getMediaOffset(reference.pointer, _id_getMediaOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV2 = _class.instanceMethodId(
    r'getMediaOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV2(){
    
    return _getMediaOffsetV2(reference.pointer, _id_getMediaOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getMediaOffsetV3 = _class.instanceMethodId(
    r'getMediaOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV3(){
    
    return _getMediaOffsetV3(reference.pointer, _id_getMediaOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setOriginalOffset = _class.instanceMethodId(
    r'setOriginalOffset',
    r'(Ljava/lang/String;)V',
  );

  static final _setOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setOriginalOffset(java.lang.String string)`
  void setOriginalOffset(_$jni.JString string, ){
    
    _setOriginalOffset(reference.pointer, _id_setOriginalOffset as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getOriginalOffset = _class.instanceMethodId(
    r'getOriginalOffset',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffset(){
    
    return _getOriginalOffset(reference.pointer, _id_getOriginalOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV2 = _class.instanceMethodId(
    r'getOriginalOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV2(){
    
    return _getOriginalOffsetV2(reference.pointer, _id_getOriginalOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getOriginalOffsetV3 = _class.instanceMethodId(
    r'getOriginalOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getOriginalOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getOriginalOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getOriginalOffsetV3(){
    
    return _getOriginalOffsetV3(reference.pointer, _id_getOriginalOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setAllOffset = _class.instanceMethodId(
    r'setAllOffset',
    r'(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V',
  );

  static final _setAllOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setAllOffset(java.lang.String string, java.lang.String string1, java.lang.String string2, java.lang.String string3, java.lang.String string4, java.lang.String string5)`
  void setAllOffset(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5, ){
    
    _setAllOffset(reference.pointer, _id_setAllOffset as _$jni.JMethodIDPtr, string.reference.pointer, string1.reference.pointer, string2.reference.pointer, string3.reference.pointer, string4.reference.pointer, string5.reference.pointer).check();
  }

  static final _id_getOffsetState = _class.instanceMethodId(
    r'getOffsetState',
    r'()I',
  );

  static final _getOffsetState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getOffsetState()`
  int getOffsetState(){
    
    return _getOffsetState(reference.pointer, _id_getOffsetState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getActiveTime = _class.instanceMethodId(
    r'getActiveTime',
    r'()J',
  );

  static final _getActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getActiveTime()`
  int getActiveTime(){
    
    return _getActiveTime(reference.pointer, _id_getActiveTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_setActiveTime = _class.instanceMethodId(
    r'setActiveTime',
    r'(JLcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setActiveTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setActiveTime(long j, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setActiveTime(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setActiveTime(reference.pointer, _id_setActiveTime as _$jni.JMethodIDPtr, j, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getBatteryLevel = _class.instanceMethodId(
    r'getBatteryLevel',
    r'()I',
  );

  static final _getBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryLevel()`
  int getBatteryLevel(){
    
    return _getBatteryLevel(reference.pointer, _id_getBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isCharging = _class.instanceMethodId(
    r'isCharging',
    r'()Z',
  );

  static final _isCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCharging()`
  bool isCharging(){
    
    return _isCharging(reference.pointer, _id_isCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isHighTemperature = _class.instanceMethodId(
    r'isHighTemperature',
    r'()Z',
  );

  static final _isHighTemperature = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHighTemperature()`
  bool isHighTemperature(){
    
    return _isHighTemperature(reference.pointer, _id_isHighTemperature as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isLowTemperature = _class.instanceMethodId(
    r'isLowTemperature',
    r'()Z',
  );

  static final _isLowTemperature = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLowTemperature()`
  bool isLowTemperature(){
    
    return _isLowTemperature(reference.pointer, _id_isLowTemperature as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getBatteryType = _class.instanceMethodId(
    r'getBatteryType',
    r'()I',
  );

  static final _getBatteryType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryType()`
  int getBatteryType(){
    
    return _getBatteryType(reference.pointer, _id_getBatteryType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxConnected = _class.instanceMethodId(
    r'isChargeBoxConnected',
    r'()Z',
  );

  static final _isChargeBoxConnected = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnected()`
  bool isChargeBoxConnected(){
    
    return _isChargeBoxConnected(reference.pointer, _id_isChargeBoxConnected as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxUsbConnectedState = _class.instanceMethodId(
    r'getChargeBoxUsbConnectedState',
    r'()I',
  );

  static final _getChargeBoxUsbConnectedState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxUsbConnectedState()`
  int getChargeBoxUsbConnectedState(){
    
    return _getChargeBoxUsbConnectedState(reference.pointer, _id_getChargeBoxUsbConnectedState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxConnectedWhenCaptureStart = _class.instanceMethodId(
    r'isChargeBoxConnectedWhenCaptureStart',
    r'()Z',
  );

  static final _isChargeBoxConnectedWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxConnectedWhenCaptureStart()`
  bool isChargeBoxConnectedWhenCaptureStart(){
    
    return _isChargeBoxConnectedWhenCaptureStart(reference.pointer, _id_isChargeBoxConnectedWhenCaptureStart as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getChargeBoxBatteryLevel = _class.instanceMethodId(
    r'getChargeBoxBatteryLevel',
    r'()I',
  );

  static final _getChargeBoxBatteryLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getChargeBoxBatteryLevel()`
  int getChargeBoxBatteryLevel(){
    
    return _getChargeBoxBatteryLevel(reference.pointer, _id_getChargeBoxBatteryLevel as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isChargeBoxCharging = _class.instanceMethodId(
    r'isChargeBoxCharging',
    r'()Z',
  );

  static final _isChargeBoxCharging = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isChargeBoxCharging()`
  bool isChargeBoxCharging(){
    
    return _isChargeBoxCharging(reference.pointer, _id_isChargeBoxCharging as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getStorageCardState = _class.instanceMethodId(
    r'getStorageCardState',
    r'()I',
  );

  static final _getStorageCardState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardState()`
  int getStorageCardState(){
    
    return _getStorageCardState(reference.pointer, _id_getStorageCardState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageCardLocation = _class.instanceMethodId(
    r'getStorageCardLocation',
    r'()I',
  );

  static final _getStorageCardLocation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStorageCardLocation()`
  int getStorageCardLocation(){
    
    return _getStorageCardLocation(reference.pointer, _id_getStorageCardLocation as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getStorageTotalSpace = _class.instanceMethodId(
    r'getStorageTotalSpace',
    r'()J',
  );

  static final _getStorageTotalSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageTotalSpace()`
  int getStorageTotalSpace(){
    
    return _getStorageTotalSpace(reference.pointer, _id_getStorageTotalSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_getStorageFreeSpace = _class.instanceMethodId(
    r'getStorageFreeSpace',
    r'()J',
  );

  static final _getStorageFreeSpace = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getStorageFreeSpace()`
  int getStorageFreeSpace(){
    
    return _getStorageFreeSpace(reference.pointer, _id_getStorageFreeSpace as _$jni.JMethodIDPtr).long;
  }

  static final _id_getVideoEncodeType = _class.instanceMethodId(
    r'getVideoEncodeType',
    r'()I',
  );

  static final _getVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoEncodeType()`
  int getVideoEncodeType(){
    
    return _getVideoEncodeType(reference.pointer, _id_getVideoEncodeType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setVideoEncodeType = _class.instanceMethodId(
    r'setVideoEncodeType',
    r'(I)V',
  );

  static final _setVideoEncodeType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setVideoEncodeType(int i)`
  void setVideoEncodeType(int i, ){
    
    _setVideoEncodeType(reference.pointer, _id_setVideoEncodeType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isSelfie = _class.instanceMethodId(
    r'isSelfie',
    r'()Z',
  );

  static final _isSelfie = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfie()`
  bool isSelfie(){
    
    return _isSelfie(reference.pointer, _id_isSelfie as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraPosture = _class.instanceMethodId(
    r'getCameraPosture',
    r'()I',
  );

  static final _getCameraPosture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPosture()`
  int getCameraPosture(){
    
    return _getCameraPosture(reference.pointer, _id_getCameraPosture as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCameraPostureWhenCaptureStart = _class.instanceMethodId(
    r'getCameraPostureWhenCaptureStart',
    r'()I',
  );

  static final _getCameraPostureWhenCaptureStart = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraPostureWhenCaptureStart()`
  int getCameraPostureWhenCaptureStart(){
    
    return _getCameraPostureWhenCaptureStart(reference.pointer, _id_getCameraPostureWhenCaptureStart as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getBtWakeupSwState = _class.instanceMethodId(
    r'getBtWakeupSwState',
    r'()I',
  );

  static final _getBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtWakeupSwState()`
  int getBtWakeupSwState(){
    
    return _getBtWakeupSwState(reference.pointer, _id_getBtWakeupSwState as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtWakeupSwState = _class.instanceMethodId(
    r'setBtWakeupSwState',
    r'(I)V',
  );

  static final _setBtWakeupSwState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtWakeupSwState(int i)`
  void setBtWakeupSwState(int i, ){
    
    _setBtWakeupSwState(reference.pointer, _id_setBtWakeupSwState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getGyroTimeStamp = _class.instanceMethodId(
    r'getGyroTimeStamp',
    r'()D',
  );

  static final _getGyroTimeStamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getGyroTimeStamp()`
  double getGyroTimeStamp(){
    
    return _getGyroTimeStamp(reference.pointer, _id_getGyroTimeStamp as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_getWindowCropInfo = _class.instanceMethodId(
    r'getWindowCropInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WindowCropInfo;',
  );

  static final _getWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WindowCropInfo getWindowCropInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWindowCropInfo(){
    
    return _getWindowCropInfo(reference.pointer, _id_getWindowCropInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getImageFlicker = _class.instanceMethodId(
    r'getImageFlicker',
    r'()I',
  );

  static final _getImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getImageFlicker()`
  int getImageFlicker(){
    
    return _getImageFlicker(reference.pointer, _id_getImageFlicker as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setImageFlicker = _class.instanceMethodId(
    r'setImageFlicker',
    r'(I)V',
  );

  static final _setImageFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setImageFlicker(int i)`
  void setImageFlicker(int i, ){
    
    _setImageFlicker(reference.pointer, _id_setImageFlicker as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_setStandByMode = _class.instanceMethodId(
    r'setStandByMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;)V',
  );

  static final _setStandByMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setStandByMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00O0000 o00O0000)`
  void setStandByMode(int i, ICameraController_o00O0000 o00O0000, ){
    
    _setStandByMode(reference.pointer, _id_setStandByMode as _$jni.JMethodIDPtr, i, o00O0000.reference.pointer).check();
  }

  static final _id_getQuickCaptureEnable = _class.instanceMethodId(
    r'getQuickCaptureEnable',
    r'()Z',
  );

  static final _getQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getQuickCaptureEnable()`
  bool getQuickCaptureEnable(){
    
    return _getQuickCaptureEnable(reference.pointer, _id_getQuickCaptureEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setQuickCaptureEnable = _class.instanceMethodId(
    r'setQuickCaptureEnable',
    r'(Z)V',
  );

  static final _setQuickCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setQuickCaptureEnable(boolean z)`
  void setQuickCaptureEnable(bool z, ){
    
    _setQuickCaptureEnable(reference.pointer, _id_setQuickCaptureEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getBtnShutdownClickMode = _class.instanceMethodId(
    r'getBtnShutdownClickMode',
    r'()I',
  );

  static final _getBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownClickMode()`
  int getBtnShutdownClickMode(){
    
    return _getBtnShutdownClickMode(reference.pointer, _id_getBtnShutdownClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownClickMode = _class.instanceMethodId(
    r'setBtnShutdownClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownClickMode(int i)`
  void setBtnShutdownClickMode(int i, ){
    
    _setBtnShutdownClickMode(reference.pointer, _id_setBtnShutdownClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'getBtnShutdownDoubleClickMode',
    r'()I',
  );

  static final _getBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownDoubleClickMode()`
  int getBtnShutdownDoubleClickMode(){
    
    return _getBtnShutdownDoubleClickMode(reference.pointer, _id_getBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownDoubleClickMode = _class.instanceMethodId(
    r'setBtnShutdownDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownDoubleClickMode(int i)`
  void setBtnShutdownDoubleClickMode(int i, ){
    
    _setBtnShutdownDoubleClickMode(reference.pointer, _id_setBtnShutdownDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'getBtnShutdownTripleClickMode',
    r'()I',
  );

  static final _getBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownTripleClickMode()`
  int getBtnShutdownTripleClickMode(){
    
    return _getBtnShutdownTripleClickMode(reference.pointer, _id_getBtnShutdownTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownTripleClickMode = _class.instanceMethodId(
    r'setBtnShutdownTripleClickMode',
    r'(I)V',
  );

  static final _setBtnShutdownTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownTripleClickMode(int i)`
  void setBtnShutdownTripleClickMode(int i, ){
    
    _setBtnShutdownTripleClickMode(reference.pointer, _id_setBtnShutdownTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnShutdownLongPressMode = _class.instanceMethodId(
    r'getBtnShutdownLongPressMode',
    r'()I',
  );

  static final _getBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnShutdownLongPressMode()`
  int getBtnShutdownLongPressMode(){
    
    return _getBtnShutdownLongPressMode(reference.pointer, _id_getBtnShutdownLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnShutdownLongPressMode = _class.instanceMethodId(
    r'setBtnShutdownLongPressMode',
    r'(I)V',
  );

  static final _setBtnShutdownLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnShutdownLongPressMode(int i)`
  void setBtnShutdownLongPressMode(int i, ){
    
    _setBtnShutdownLongPressMode(reference.pointer, _id_setBtnShutdownLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnClickMode = _class.instanceMethodId(
    r'getBtnClickMode',
    r'()I',
  );

  static final _getBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnClickMode()`
  int getBtnClickMode(){
    
    return _getBtnClickMode(reference.pointer, _id_getBtnClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnClickMode = _class.instanceMethodId(
    r'setBtnClickMode',
    r'(I)V',
  );

  static final _setBtnClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnClickMode(int i)`
  void setBtnClickMode(int i, ){
    
    _setBtnClickMode(reference.pointer, _id_setBtnClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnDoubleClickMode = _class.instanceMethodId(
    r'getBtnDoubleClickMode',
    r'()I',
  );

  static final _getBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnDoubleClickMode()`
  int getBtnDoubleClickMode(){
    
    return _getBtnDoubleClickMode(reference.pointer, _id_getBtnDoubleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnDoubleClickMode = _class.instanceMethodId(
    r'setBtnDoubleClickMode',
    r'(I)V',
  );

  static final _setBtnDoubleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnDoubleClickMode(int i)`
  void setBtnDoubleClickMode(int i, ){
    
    _setBtnDoubleClickMode(reference.pointer, _id_setBtnDoubleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnTripleClickMode = _class.instanceMethodId(
    r'getBtnTripleClickMode',
    r'()I',
  );

  static final _getBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnTripleClickMode()`
  int getBtnTripleClickMode(){
    
    return _getBtnTripleClickMode(reference.pointer, _id_getBtnTripleClickMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnTripleClickMode = _class.instanceMethodId(
    r'setBtnTripleClickMode',
    r'(I)V',
  );

  static final _setBtnTripleClickMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnTripleClickMode(int i)`
  void setBtnTripleClickMode(int i, ){
    
    _setBtnTripleClickMode(reference.pointer, _id_setBtnTripleClickMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getBtnLongPressMode = _class.instanceMethodId(
    r'getBtnLongPressMode',
    r'()I',
  );

  static final _getBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBtnLongPressMode()`
  int getBtnLongPressMode(){
    
    return _getBtnLongPressMode(reference.pointer, _id_getBtnLongPressMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBtnLongPressMode = _class.instanceMethodId(
    r'setBtnLongPressMode',
    r'(I)V',
  );

  static final _setBtnLongPressMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setBtnLongPressMode(int i)`
  void setBtnLongPressMode(int i, ){
    
    _setBtnLongPressMode(reference.pointer, _id_setBtnLongPressMode as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_isMute = _class.instanceMethodId(
    r'isMute',
    r'()Z',
  );

  static final _isMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMute()`
  bool isMute(){
    
    return _isMute(reference.pointer, _id_isMute as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMute = _class.instanceMethodId(
    r'setMute',
    r'(Z)V',
  );

  static final _setMute = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMute(boolean z)`
  void setMute(bool z, ){
    
    _setMute(reference.pointer, _id_setMute as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getWifiInfo = _class.instanceMethodId(
    r'getWifiInfo',
    r'()Lcom/arashivision/onecamera/camerarequest/WifiInfo;',
  );

  static final _getWifiInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.WifiInfo getWifiInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWifiInfo(){
    
    return _getWifiInfo(reference.pointer, _id_getWifiInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setWifiPwd = _class.instanceMethodId(
    r'setWifiPwd',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiPwd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiPwd(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiPwd(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiPwd(reference.pointer, _id_setWifiPwd as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getButtonFollowOptions = _class.instanceMethodId(
    r'getButtonFollowOptions',
    r'()Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;',
  );

  static final _getButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.camerarequest.ButtonFollowOptions getButtonFollowOptions()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getButtonFollowOptions(){
    
    return _getButtonFollowOptions(reference.pointer, _id_getButtonFollowOptions as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setButtonFollowOptions = _class.instanceMethodId(
    r'setButtonFollowOptions',
    r'(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setButtonFollowOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setButtonFollowOptions(com.arashivision.onecamera.camerarequest.ButtonFollowOptions buttonFollowOptions, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setButtonFollowOptions(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setButtonFollowOptions(reference.pointer, _id_setButtonFollowOptions as _$jni.JMethodIDPtr, buttonFollowOptions.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getWifiChannelCountry = _class.instanceMethodId(
    r'getWifiChannelCountry',
    r'()Ljava/lang/String;',
  );

  static final _getWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getWifiChannelCountry()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getWifiChannelCountry(){
    
    return _getWifiChannelCountry(reference.pointer, _id_getWifiChannelCountry as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setWifiChannelCountry = _class.instanceMethodId(
    r'setWifiChannelCountry',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setWifiChannelCountry = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWifiChannelCountry(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setWifiChannelCountry(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setWifiChannelCountry(reference.pointer, _id_setWifiChannelCountry as _$jni.JMethodIDPtr, string.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_setCameraLanguage = _class.instanceMethodId(
    r'setCameraLanguage',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;Lcom/arashivision/camera/RequestOptions;)V',
  );

  static final _setCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraLanguage(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback, com.arashivision.camera.RequestOptions requestOptions)`
  void setCameraLanguage(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions, ){
    
    _setCameraLanguage(reference.pointer, _id_setCameraLanguage as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer, requestOptions.reference.pointer).check();
  }

  static final _id_getCameraLanguage = _class.instanceMethodId(
    r'getCameraLanguage',
    r'()I',
  );

  static final _getCameraLanguage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraLanguage()`
  int getCameraLanguage(){
    
    return _getCameraLanguage(reference.pointer, _id_getCameraLanguage as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getVideoResolution = _class.instanceMethodId(
    r'getVideoResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getVideoResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getVideoResolution(){
    
    return _getVideoResolution(reference.pointer, _id_getVideoResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_setVideoResolution = _class.instanceMethodId(
    r'setVideoResolution',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setVideoResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolution(com.arashivision.insta360.basecamera.camera.setting.VideoResolution videoResolution, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setVideoResolution(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setVideoResolution(reference.pointer, _id_setVideoResolution as _$jni.JMethodIDPtr, videoResolution.reference.pointer, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getVideoBitrate = _class.instanceMethodId(
    r'getVideoBitrate',
    r'()I',
  );

  static final _getVideoBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getVideoBitrate()`
  int getVideoBitrate(){
    
    return _getVideoBitrate(reference.pointer, _id_getVideoBitrate as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getSubVideoMode = _class.instanceMethodId(
    r'getSubVideoMode',
    r'()I',
  );

  static final _getSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubVideoMode()`
  int getSubVideoMode(){
    
    return _getSubVideoMode(reference.pointer, _id_getSubVideoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubVideoMode = _class.instanceMethodId(
    r'setSubVideoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubVideoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubVideoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubVideoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubVideoMode(reference.pointer, _id_setSubVideoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getSubPhotoMode = _class.instanceMethodId(
    r'getSubPhotoMode',
    r'()I',
  );

  static final _getSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSubPhotoMode()`
  int getSubPhotoMode(){
    
    return _getSubPhotoMode(reference.pointer, _id_getSubPhotoMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setSubPhotoMode = _class.instanceMethodId(
    r'setSubPhotoMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
  );

  static final _setSubPhotoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setSubPhotoMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$ISetOptionsCallback iSetOptionsCallback)`
  void setSubPhotoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, ){
    
    _setSubPhotoMode(reference.pointer, _id_setSubPhotoMode as _$jni.JMethodIDPtr, i, iSetOptionsCallback.reference.pointer).check();
  }

  static final _id_getExpectOutputType = _class.instanceMethodId(
    r'getExpectOutputType',
    r'()I',
  );

  static final _getExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getExpectOutputType()`
  int getExpectOutputType(){
    
    return _getExpectOutputType(reference.pointer, _id_getExpectOutputType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setExpectOutputType = _class.instanceMethodId(
    r'setExpectOutputType',
    r'(I)V',
  );

  static final _setExpectOutputType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setExpectOutputType(int i)`
  void setExpectOutputType(int i, ){
    
    _setExpectOutputType(reference.pointer, _id_setExpectOutputType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFocusSensor = _class.instanceMethodId(
    r'getFocusSensor',
    r'()I',
  );

  static final _getFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFocusSensor()`
  int getFocusSensor(){
    
    return _getFocusSensor(reference.pointer, _id_getFocusSensor as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setFocusSensor = _class.instanceMethodId(
    r'setFocusSensor',
    r'(I)V',
  );

  static final _setFocusSensor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFocusSensor(int i)`
  void setFocusSensor(int i, ){
    
    _setFocusSensor(reference.pointer, _id_setFocusSensor as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getSensorType = _class.instanceMethodId(
    r'getSensorType',
    r'()I',
  );

  static final _getSensorType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getSensorType()`
  int getSensorType(){
    
    return _getSensorType(reference.pointer, _id_getSensorType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_beginOptionsTransaction = _class.instanceMethodId(
    r'beginOptionsTransaction',
    r'()V',
  );

  static final _beginOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void beginOptionsTransaction()`
  void beginOptionsTransaction(){
    
    _beginOptionsTransaction(reference.pointer, _id_beginOptionsTransaction as _$jni.JMethodIDPtr).check();
  }

  static final _id_commitOptionsTransaction = _class.instanceMethodId(
    r'commitOptionsTransaction',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;)V',
  );

  static final _commitOptionsTransaction = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void commitOptionsTransaction(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0o o000O0o)`
  void commitOptionsTransaction(ICameraController_o000O0o o000O0o, ){
    
    _commitOptionsTransaction(reference.pointer, _id_commitOptionsTransaction as _$jni.JMethodIDPtr, o000O0o.reference.pointer).check();
  }

  static final _id_getTimelapseParams = _class.instanceMethodId(
    r'getTimelapseParams',
    r'(I)Lcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;',
  );

  static final _getTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.TimelapseParams getTimelapseParams(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  TimelapseParams getTimelapseParams(int i, ){
    
    return _getTimelapseParams(reference.pointer, _id_getTimelapseParams as _$jni.JMethodIDPtr, i).object(const $TimelapseParams$Type());
  }

  static final _id_setTimelapseParams = _class.instanceMethodId(
    r'setTimelapseParams',
    r'(ILcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;)V',
  );

  static final _setTimelapseParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setTimelapseParams(int i, com.arashivision.insta360.basecamera.camera.setting.TimelapseParams timelapseParams)`
  void setTimelapseParams(int i, TimelapseParams timelapseParams, ){
    
    _setTimelapseParams(reference.pointer, _id_setTimelapseParams as _$jni.JMethodIDPtr, i, timelapseParams.reference.pointer).check();
  }

  static final _id_getExposureMode = _class.instanceMethodId(
    r'getExposureMode',
    r'(IZ)I',
  );

  static final _getExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getExposureMode(int i, boolean z)`
  int getExposureMode(int i, bool z, ){
    
    return _getExposureMode(reference.pointer, _id_getExposureMode as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getISO = _class.instanceMethodId(
    r'getISO',
    r'(IZ)I',
  );

  static final _getISO = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public int getISO(int i, boolean z)`
  int getISO(int i, bool z, ){
    
    return _getISO(reference.pointer, _id_getISO as _$jni.JMethodIDPtr, i, z ? 1 : 0).integer;
  }

  static final _id_getShutter = _class.instanceMethodId(
    r'getShutter',
    r'(IZ)D',
  );

  static final _getShutter = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public double getShutter(int i, boolean z)`
  double getShutter(int i, bool z, ){
    
    return _getShutter(reference.pointer, _id_getShutter as _$jni.JMethodIDPtr, i, z ? 1 : 0).doubleFloat;
  }

  static final _id_setExposureOptions = _class.instanceMethodId(
    r'setExposureOptions',
    r'(IIIDZ)V',
  );

  static final _setExposureOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, double, int)>();
  /// from: `public void setExposureOptions(int i, int i1, int i2, double d, boolean z)`
  void setExposureOptions(int i, int i1, int i2, double d, bool z, ){
    
    _setExposureOptions(reference.pointer, _id_setExposureOptions as _$jni.JMethodIDPtr, i, i1, i2, d, z ? 1 : 0).check();
  }

  static final _id_getExposureEV = _class.instanceMethodId(
    r'getExposureEV',
    r'(I)I',
  );

  static final _getExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getExposureEV(int i)`
  int getExposureEV(int i, ){
    
    return _getExposureEV(reference.pointer, _id_getExposureEV as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setExposureEV = _class.instanceMethodId(
    r'setExposureEV',
    r'(II)V',
  );

  static final _setExposureEV = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setExposureEV(int i, int i1)`
  void setExposureEV(int i, int i1, ){
    
    _setExposureEV(reference.pointer, _id_setExposureEV as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFocalLengthValue = _class.instanceMethodId(
    r'getFocalLengthValue',
    r'(I)D',
  );

  static final _getFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getFocalLengthValue(int i)`
  double getFocalLengthValue(int i, ){
    
    return _getFocalLengthValue(reference.pointer, _id_getFocalLengthValue as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setFocalLengthValue = _class.instanceMethodId(
    r'setFocalLengthValue',
    r'(ID)V',
  );

  static final _setFocalLengthValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setFocalLengthValue(int i, double d)`
  void setFocalLengthValue(int i, double d, ){
    
    _setFocalLengthValue(reference.pointer, _id_setFocalLengthValue as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getVideoResolutionId = _class.instanceMethodId(
    r'getVideoResolutionId',
    r'(I)I',
  );

  static final _getVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoResolutionId(int i)`
  int getVideoResolutionId(int i, ){
    
    return _getVideoResolutionId(reference.pointer, _id_getVideoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoResolutionId = _class.instanceMethodId(
    r'setVideoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoResolutionId(reference.pointer, _id_setVideoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getResRecLimit = _class.instanceMethodId(
    r'getResRecLimit',
    r'(I)Ljava/util/List;',
  );

  static final _getResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public java.util.List getResRecLimit(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JList<_$jni.JObject> getResRecLimit(int i, ){
    
    return _getResRecLimit(reference.pointer, _id_getResRecLimit as _$jni.JMethodIDPtr, i).object(const _$jni.JListType(_$jni.JObjectType()));
  }

  static final _id_setResRecLimit = _class.instanceMethodId(
    r'setResRecLimit',
    r'(ILjava/util/List;)V',
  );

  static final _setResRecLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setResRecLimit(int i, java.util.List list)`
  void setResRecLimit(int i, _$jni.JList<_$jni.JObject> list, ){
    
    _setResRecLimit(reference.pointer, _id_setResRecLimit as _$jni.JMethodIDPtr, i, list.reference.pointer).check();
  }

  static final _id_getRemainingTime = _class.instanceMethodId(
    r'getRemainingTime',
    r'(I)I',
  );

  static final _getRemainingTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRemainingTime(int i)`
  int getRemainingTime(int i, ){
    
    return _getRemainingTime(reference.pointer, _id_getRemainingTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getISOTopLimit = _class.instanceMethodId(
    r'getISOTopLimit',
    r'(I)I',
  );

  static final _getISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getISOTopLimit(int i)`
  int getISOTopLimit(int i, ){
    
    return _getISOTopLimit(reference.pointer, _id_getISOTopLimit as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setISOTopLimit = _class.instanceMethodId(
    r'setISOTopLimit',
    r'(II)V',
  );

  static final _setISOTopLimit = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setISOTopLimit(int i, int i1)`
  void setISOTopLimit(int i, int i1, ){
    
    _setISOTopLimit(reference.pointer, _id_setISOTopLimit as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAEBCaptureNum = _class.instanceMethodId(
    r'getAEBCaptureNum',
    r'(I)I',
  );

  static final _getAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAEBCaptureNum(int i)`
  int getAEBCaptureNum(int i, ){
    
    return _getAEBCaptureNum(reference.pointer, _id_getAEBCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAEBCaptureNum = _class.instanceMethodId(
    r'setAEBCaptureNum',
    r'(II)V',
  );

  static final _setAEBCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAEBCaptureNum(int i, int i1)`
  void setAEBCaptureNum(int i, int i1, ){
    
    _setAEBCaptureNum(reference.pointer, _id_setAEBCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSize = _class.instanceMethodId(
    r'getPhotoSize',
    r'(I)I',
  );

  static final _getPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSize(int i)`
  int getPhotoSize(int i, ){
    
    return _getPhotoSize(reference.pointer, _id_getPhotoSize as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSize = _class.instanceMethodId(
    r'setPhotoSize',
    r'(II)V',
  );

  static final _setPhotoSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSize(int i, int i1)`
  void setPhotoSize(int i, int i1, ){
    
    _setPhotoSize(reference.pointer, _id_setPhotoSize as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoResolutionId = _class.instanceMethodId(
    r'getPhotoResolutionId',
    r'(I)I',
  );

  static final _getPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoResolutionId(int i)`
  int getPhotoResolutionId(int i, ){
    
    return _getPhotoResolutionId(reference.pointer, _id_getPhotoResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoResolutionId = _class.instanceMethodId(
    r'setPhotoResolutionId',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setPhotoResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPhotoResolutionId(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setPhotoResolutionId(int i, int i1, ICameraController_o00 o00, ){
    
    _setPhotoResolutionId(reference.pointer, _id_setPhotoResolutionId as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getWhiteBalanceId = _class.instanceMethodId(
    r'getWhiteBalanceId',
    r'(I)I',
  );

  static final _getWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceId(int i)`
  int getWhiteBalanceId(int i, ){
    
    return _getWhiteBalanceId(reference.pointer, _id_getWhiteBalanceId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceId = _class.instanceMethodId(
    r'setWhiteBalanceId',
    r'(II)V',
  );

  static final _setWhiteBalanceId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceId(int i, int i1)`
  void setWhiteBalanceId(int i, int i1, ){
    
    _setWhiteBalanceId(reference.pointer, _id_setWhiteBalanceId as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getWhiteBalanceValue = _class.instanceMethodId(
    r'getWhiteBalanceValue',
    r'(I)I',
  );

  static final _getWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getWhiteBalanceValue(int i)`
  int getWhiteBalanceValue(int i, ){
    
    return _getWhiteBalanceValue(reference.pointer, _id_getWhiteBalanceValue as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setWhiteBalanceValue = _class.instanceMethodId(
    r'setWhiteBalanceValue',
    r'(II)V',
  );

  static final _setWhiteBalanceValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setWhiteBalanceValue(int i, int i1)`
  void setWhiteBalanceValue(int i, int i1, ){
    
    _setWhiteBalanceValue(reference.pointer, _id_setWhiteBalanceValue as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getSportModeEnable = _class.instanceMethodId(
    r'getSportModeEnable',
    r'(I)Z',
  );

  static final _getSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getSportModeEnable(int i)`
  bool getSportModeEnable(int i, ){
    
    return _getSportModeEnable(reference.pointer, _id_getSportModeEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setSportModeEnable = _class.instanceMethodId(
    r'setSportModeEnable',
    r'(IZ)V',
  );

  static final _setSportModeEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeEnable(int i, boolean z)`
  void setSportModeEnable(int i, bool z, ){
    
    _setSportModeEnable(reference.pointer, _id_setSportModeEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getSportModeLevel = _class.instanceMethodId(
    r'getSportModeLevel',
    r'(I)I',
  );

  static final _getSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSportModeLevel(int i)`
  int getSportModeLevel(int i, ){
    
    return _getSportModeLevel(reference.pointer, _id_getSportModeLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSportModeLevel = _class.instanceMethodId(
    r'setSportModeLevel',
    r'(II)V',
  );

  static final _setSportModeLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSportModeLevel(int i, int i1)`
  void setSportModeLevel(int i, int i1, ){
    
    _setSportModeLevel(reference.pointer, _id_setSportModeLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getGammaMode = _class.instanceMethodId(
    r'getGammaMode',
    r'(I)I',
  );

  static final _getGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getGammaMode(int i)`
  int getGammaMode(int i, ){
    
    return _getGammaMode(reference.pointer, _id_getGammaMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setGammaMode = _class.instanceMethodId(
    r'setGammaMode',
    r'(II)V',
  );

  static final _setGammaMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setGammaMode(int i, int i1)`
  void setGammaMode(int i, int i1, ){
    
    _setGammaMode(reference.pointer, _id_setGammaMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRawType = _class.instanceMethodId(
    r'getRawType',
    r'(I)I',
  );

  static final _getRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRawType(int i)`
  int getRawType(int i, ){
    
    return _getRawType(reference.pointer, _id_getRawType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRawType = _class.instanceMethodId(
    r'setRawType',
    r'(II)V',
  );

  static final _setRawType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRawType(int i, int i1)`
  void setRawType(int i, int i1, ){
    
    _setRawType(reference.pointer, _id_setRawType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPhotoSelfTimer = _class.instanceMethodId(
    r'getPhotoSelfTimer',
    r'(I)I',
  );

  static final _getPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPhotoSelfTimer(int i)`
  int getPhotoSelfTimer(int i, ){
    
    return _getPhotoSelfTimer(reference.pointer, _id_getPhotoSelfTimer as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPhotoSelfTimer = _class.instanceMethodId(
    r'setPhotoSelfTimer',
    r'(II)V',
  );

  static final _setPhotoSelfTimer = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPhotoSelfTimer(int i, int i1)`
  void setPhotoSelfTimer(int i, int i1, ){
    
    _setPhotoSelfTimer(reference.pointer, _id_setPhotoSelfTimer as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getAccelerateFrequency = _class.instanceMethodId(
    r'getAccelerateFrequency',
    r'(I)I',
  );

  static final _getAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getAccelerateFrequency(int i)`
  int getAccelerateFrequency(int i, ){
    
    return _getAccelerateFrequency(reference.pointer, _id_getAccelerateFrequency as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setAccelerateFrequency = _class.instanceMethodId(
    r'setAccelerateFrequency',
    r'(II)V',
  );

  static final _setAccelerateFrequency = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setAccelerateFrequency(int i, int i1)`
  void setAccelerateFrequency(int i, int i1, ){
    
    _setAccelerateFrequency(reference.pointer, _id_setAccelerateFrequency as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getRecordDurationS = _class.instanceMethodId(
    r'getRecordDurationS',
    r'(I)I',
  );

  static final _getRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getRecordDurationS(int i)`
  int getRecordDurationS(int i, ){
    
    return _getRecordDurationS(reference.pointer, _id_getRecordDurationS as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setRecordDurationS = _class.instanceMethodId(
    r'setRecordDurationS',
    r'(II)V',
  );

  static final _setRecordDurationS = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setRecordDurationS(int i, int i1)`
  void setRecordDurationS(int i, int i1, ){
    
    _setRecordDurationS(reference.pointer, _id_setRecordDurationS as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlicker = _class.instanceMethodId(
    r'getFlicker',
    r'(I)I',
  );

  static final _getFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlicker(int i)`
  int getFlicker(int i, ){
    
    return _getFlicker(reference.pointer, _id_getFlicker as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlicker = _class.instanceMethodId(
    r'setFlicker',
    r'(II)V',
  );

  static final _setFlicker = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlicker(int i, int i1)`
  void setFlicker(int i, int i1, ){
    
    _setFlicker(reference.pointer, _id_setFlicker as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlowstateEnable = _class.instanceMethodId(
    r'getFlowstateEnable',
    r'(I)Z',
  );

  static final _getFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateEnable(int i)`
  bool getFlowstateEnable(int i, ){
    
    return _getFlowstateEnable(reference.pointer, _id_getFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateEnable = _class.instanceMethodId(
    r'setFlowstateEnable',
    r'(IZ)V',
  );

  static final _setFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateEnable(int i, boolean z)`
  void setFlowstateEnable(int i, bool z, ){
    
    _setFlowstateEnable(reference.pointer, _id_setFlowstateEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getUnDamageZoomEnable = _class.instanceMethodId(
    r'getUnDamageZoomEnable',
    r'(I)Z',
  );

  static final _getUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getUnDamageZoomEnable(int i)`
  bool getUnDamageZoomEnable(int i, ){
    
    return _getUnDamageZoomEnable(reference.pointer, _id_getUnDamageZoomEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setUnDamageZoomEnable = _class.instanceMethodId(
    r'setUnDamageZoomEnable',
    r'(IZ)V',
  );

  static final _setUnDamageZoomEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setUnDamageZoomEnable(int i, boolean z)`
  void setUnDamageZoomEnable(int i, bool z, ){
    
    _setUnDamageZoomEnable(reference.pointer, _id_setUnDamageZoomEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getFlowstateVideoEnable = _class.instanceMethodId(
    r'getFlowstateVideoEnable',
    r'(I)Z',
  );

  static final _getFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getFlowstateVideoEnable(int i)`
  bool getFlowstateVideoEnable(int i, ){
    
    return _getFlowstateVideoEnable(reference.pointer, _id_getFlowstateVideoEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setFlowstateVideoEnable = _class.instanceMethodId(
    r'setFlowstateVideoEnable',
    r'(IZ)V',
  );

  static final _setFlowstateVideoEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowstateVideoEnable(int i, boolean z)`
  void setFlowstateVideoEnable(int i, bool z, ){
    
    _setFlowstateVideoEnable(reference.pointer, _id_setFlowstateVideoEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getDarkEisEnable = _class.instanceMethodId(
    r'getDarkEisEnable',
    r'(I)Z',
  );

  static final _getDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getDarkEisEnable(int i)`
  bool getDarkEisEnable(int i, ){
    
    return _getDarkEisEnable(reference.pointer, _id_getDarkEisEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setDarkEisEnable = _class.instanceMethodId(
    r'setDarkEisEnable',
    r'(IZ)V',
  );

  static final _setDarkEisEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setDarkEisEnable(int i, boolean z)`
  void setDarkEisEnable(int i, bool z, ){
    
    _setDarkEisEnable(reference.pointer, _id_setDarkEisEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnable = _class.instanceMethodId(
    r'getMeteringEnable',
    r'(I)Z',
  );

  static final _getMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getMeteringEnable(int i)`
  bool getMeteringEnable(int i, ){
    
    return _getMeteringEnable(reference.pointer, _id_getMeteringEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setMeteringEnable = _class.instanceMethodId(
    r'setMeteringEnable',
    r'(IZ)V',
  );

  static final _setMeteringEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMeteringEnable(int i, boolean z)`
  void setMeteringEnable(int i, bool z, ){
    
    _setMeteringEnable(reference.pointer, _id_setMeteringEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getVideoSelfieMode = _class.instanceMethodId(
    r'getVideoSelfieMode',
    r'(I)I',
  );

  static final _getVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoSelfieMode(int i)`
  int getVideoSelfieMode(int i, ){
    
    return _getVideoSelfieMode(reference.pointer, _id_getVideoSelfieMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setVideoSelfieMode = _class.instanceMethodId(
    r'setVideoSelfieMode',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setVideoSelfieMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoSelfieMode(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setVideoSelfieMode(int i, int i1, ICameraController_o00 o00, ){
    
    _setVideoSelfieMode(reference.pointer, _id_setVideoSelfieMode as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getDarkEisStatus = _class.instanceMethodId(
    r'getDarkEisStatus',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;)V',
  );

  static final _getDarkEisStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getDarkEisStatus(com.arashivision.insta360.basecamera.camera.ICameraController$o0000oo o0000oo)`
  void getDarkEisStatus(ICameraController_o0000oo o0000oo, ){
    
    _getDarkEisStatus(reference.pointer, _id_getDarkEisStatus as _$jni.JMethodIDPtr, o0000oo.reference.pointer).check();
  }

  static final _id_getDarkEisEnableGlobal = _class.instanceMethodId(
    r'getDarkEisEnableGlobal',
    r'()Z',
  );

  static final _getDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getDarkEisEnableGlobal()`
  bool getDarkEisEnableGlobal(){
    
    return _getDarkEisEnableGlobal(reference.pointer, _id_getDarkEisEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setDarkEisEnableGlobal = _class.instanceMethodId(
    r'setDarkEisEnableGlobal',
    r'(Z)V',
  );

  static final _setDarkEisEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setDarkEisEnableGlobal(boolean z)`
  void setDarkEisEnableGlobal(bool z, ){
    
    _setDarkEisEnableGlobal(reference.pointer, _id_setDarkEisEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getMeteringEnableGlobal = _class.instanceMethodId(
    r'getMeteringEnableGlobal',
    r'()Z',
  );

  static final _getMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getMeteringEnableGlobal()`
  bool getMeteringEnableGlobal(){
    
    return _getMeteringEnableGlobal(reference.pointer, _id_getMeteringEnableGlobal as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setMeteringEnableGlobal = _class.instanceMethodId(
    r'setMeteringEnableGlobal',
    r'(Z)V',
  );

  static final _setMeteringEnableGlobal = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setMeteringEnableGlobal(boolean z)`
  void setMeteringEnableGlobal(bool z, ){
    
    _setMeteringEnableGlobal(reference.pointer, _id_setMeteringEnableGlobal as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getInternalSplicingEnable = _class.instanceMethodId(
    r'getInternalSplicingEnable',
    r'()Z',
  );

  static final _getInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean getInternalSplicingEnable()`
  bool getInternalSplicingEnable(){
    
    return _getInternalSplicingEnable(reference.pointer, _id_getInternalSplicingEnable as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setInternalSplicingEnable = _class.instanceMethodId(
    r'setInternalSplicingEnable',
    r'(Z)V',
  );

  static final _setInternalSplicingEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setInternalSplicingEnable(boolean z)`
  void setInternalSplicingEnable(bool z, ){
    
    _setInternalSplicingEnable(reference.pointer, _id_setInternalSplicingEnable as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getVideoBitrate$1 = _class.instanceMethodId(
    r'getVideoBitrate',
    r'(I)I',
  );

  static final _getVideoBitrate$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getVideoBitrate(int i)`
  int getVideoBitrate$1(int i, ){
    
    return _getVideoBitrate$1(reference.pointer, _id_getVideoBitrate$1 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_getFlowStateLevel = _class.instanceMethodId(
    r'getFlowStateLevel',
    r'(I)I',
  );

  static final _getFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevel(int i)`
  int getFlowStateLevel(int i, ){
    
    return _getFlowStateLevel(reference.pointer, _id_getFlowStateLevel as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlowStateLevel = _class.instanceMethodId(
    r'setFlowStateLevel',
    r'(II)V',
  );

  static final _setFlowStateLevel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevel(int i, int i1)`
  void setFlowStateLevel(int i, int i1, ){
    
    _setFlowStateLevel(reference.pointer, _id_setFlowStateLevel as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFlowStateLevelByCv5 = _class.instanceMethodId(
    r'getFlowStateLevelByCv5',
    r'(I)I',
  );

  static final _getFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFlowStateLevelByCv5(int i)`
  int getFlowStateLevelByCv5(int i, ){
    
    return _getFlowStateLevelByCv5(reference.pointer, _id_getFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFlowStateLevelByCv5 = _class.instanceMethodId(
    r'setFlowStateLevelByCv5',
    r'(II)V',
  );

  static final _setFlowStateLevelByCv5 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setFlowStateLevelByCv5(int i, int i1)`
  void setFlowStateLevelByCv5(int i, int i1, ){
    
    _setFlowStateLevelByCv5(reference.pointer, _id_setFlowStateLevelByCv5 as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getHdrStatus = _class.instanceMethodId(
    r'getHdrStatus',
    r'(I)Z',
  );

  static final _getHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getHdrStatus(int i)`
  bool getHdrStatus(int i, ){
    
    return _getHdrStatus(reference.pointer, _id_getHdrStatus as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setHdrStatus = _class.instanceMethodId(
    r'setHdrStatus',
    r'(IZ)V',
  );

  static final _setHdrStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setHdrStatus(int i, boolean z)`
  void setHdrStatus(int i, bool z, ){
    
    _setHdrStatus(reference.pointer, _id_setHdrStatus as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getSharpness = _class.instanceMethodId(
    r'getSharpness',
    r'(I)I',
  );

  static final _getSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getSharpness(int i)`
  int getSharpness(int i, ){
    
    return _getSharpness(reference.pointer, _id_getSharpness as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setSharpness = _class.instanceMethodId(
    r'setSharpness',
    r'(II)V',
  );

  static final _setSharpness = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setSharpness(int i, int i1)`
  void setSharpness(int i, int i1, ){
    
    _setSharpness(reference.pointer, _id_setSharpness as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getStarLapseExportType = _class.instanceMethodId(
    r'getStarLapseExportType',
    r'(I)I',
  );

  static final _getStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getStarLapseExportType(int i)`
  int getStarLapseExportType(int i, ){
    
    return _getStarLapseExportType(reference.pointer, _id_getStarLapseExportType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setStarLapseExportType = _class.instanceMethodId(
    r'setStarLapseExportType',
    r'(II)V',
  );

  static final _setStarLapseExportType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setStarLapseExportType(int i, int i1)`
  void setStarLapseExportType(int i, int i1, ){
    
    _setStarLapseExportType(reference.pointer, _id_setStarLapseExportType as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getPanoExposureMode = _class.instanceMethodId(
    r'getPanoExposureMode',
    r'(I)I',
  );

  static final _getPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getPanoExposureMode(int i)`
  int getPanoExposureMode(int i, ){
    
    return _getPanoExposureMode(reference.pointer, _id_getPanoExposureMode as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setPanoExposureMode = _class.instanceMethodId(
    r'setPanoExposureMode',
    r'(II)V',
  );

  static final _setPanoExposureMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setPanoExposureMode(int i, int i1)`
  void setPanoExposureMode(int i, int i1, ){
    
    _setPanoExposureMode(reference.pointer, _id_setPanoExposureMode as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getFovType = _class.instanceMethodId(
    r'getFovType',
    r'(I)I',
  );

  static final _getFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getFovType(int i)`
  int getFovType(int i, ){
    
    return _getFovType(reference.pointer, _id_getFovType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setFovType = _class.instanceMethodId(
    r'setFovType',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
  );

  static final _setFovType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFovType(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o00 o00)`
  void setFovType(int i, int i1, ICameraController_o00 o00, ){
    
    _setFovType(reference.pointer, _id_setFovType as _$jni.JMethodIDPtr, i, i1, o00.reference.pointer).check();
  }

  static final _id_getBurstCaptureNum = _class.instanceMethodId(
    r'getBurstCaptureNum',
    r'(I)I',
  );

  static final _getBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureNum(int i)`
  int getBurstCaptureNum(int i, ){
    
    return _getBurstCaptureNum(reference.pointer, _id_getBurstCaptureNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureNum = _class.instanceMethodId(
    r'setBurstCaptureNum',
    r'(II)V',
  );

  static final _setBurstCaptureNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureNum(int i, int i1)`
  void setBurstCaptureNum(int i, int i1, ){
    
    _setBurstCaptureNum(reference.pointer, _id_setBurstCaptureNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getBurstCacheNum = _class.instanceMethodId(
    r'getBurstCacheNum',
    r'(I)I',
  );

  static final _getBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCacheNum(int i)`
  int getBurstCacheNum(int i, ){
    
    return _getBurstCacheNum(reference.pointer, _id_getBurstCacheNum as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCacheNum = _class.instanceMethodId(
    r'setBurstCacheNum',
    r'(II)V',
  );

  static final _setBurstCacheNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCacheNum(int i, int i1)`
  void setBurstCacheNum(int i, int i1, ){
    
    _setBurstCacheNum(reference.pointer, _id_setBurstCacheNum as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getBurstCaptureTime = _class.instanceMethodId(
    r'getBurstCaptureTime',
    r'(I)I',
  );

  static final _getBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getBurstCaptureTime(int i)`
  int getBurstCaptureTime(int i, ){
    
    return _getBurstCaptureTime(reference.pointer, _id_getBurstCaptureTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setBurstCaptureTime = _class.instanceMethodId(
    r'setBurstCaptureTime',
    r'(II)V',
  );

  static final _setBurstCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setBurstCaptureTime(int i, int i1)`
  void setBurstCaptureTime(int i, int i1, ){
    
    _setBurstCaptureTime(reference.pointer, _id_setBurstCaptureTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_getCacheCaptureEnable = _class.instanceMethodId(
    r'getCacheCaptureEnable',
    r'(I)Z',
  );

  static final _getCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCacheCaptureEnable(int i)`
  bool getCacheCaptureEnable(int i, ){
    
    return _getCacheCaptureEnable(reference.pointer, _id_getCacheCaptureEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCacheCaptureEnable = _class.instanceMethodId(
    r'setCacheCaptureEnable',
    r'(IZ)V',
  );

  static final _setCacheCaptureEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setCacheCaptureEnable(int i, boolean z)`
  void setCacheCaptureEnable(int i, bool z, ){
    
    _setCacheCaptureEnable(reference.pointer, _id_setCacheCaptureEnable as _$jni.JMethodIDPtr, i, z ? 1 : 0).check();
  }

  static final _id_getZoomScale = _class.instanceMethodId(
    r'getZoomScale',
    r'(I)D',
  );

  static final _getZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public double getZoomScale(int i)`
  double getZoomScale(int i, ){
    
    return _getZoomScale(reference.pointer, _id_getZoomScale as _$jni.JMethodIDPtr, i).doubleFloat;
  }

  static final _id_setZoomScale = _class.instanceMethodId(
    r'setZoomScale',
    r'(ID)V',
  );

  static final _setZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, double)>();
  /// from: `public void setZoomScale(int i, double d)`
  void setZoomScale(int i, double d, ){
    
    _setZoomScale(reference.pointer, _id_setZoomScale as _$jni.JMethodIDPtr, i, d).check();
  }

  static final _id_getMaxRecordTime = _class.instanceMethodId(
    r'getMaxRecordTime',
    r'(I)I',
  );

  static final _getMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getMaxRecordTime(int i)`
  int getMaxRecordTime(int i, ){
    
    return _getMaxRecordTime(reference.pointer, _id_getMaxRecordTime as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setMaxRecordTime = _class.instanceMethodId(
    r'setMaxRecordTime',
    r'(II)V',
  );

  static final _setMaxRecordTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void setMaxRecordTime(int i, int i1)`
  void setMaxRecordTime(int i, int i1, ){
    
    _setMaxRecordTime(reference.pointer, _id_setMaxRecordTime as _$jni.JMethodIDPtr, i, i1).check();
  }

  static final _id_syncCameraSensorMode = _class.instanceMethodId(
    r'syncCameraSensorMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;)V',
  );

  static final _syncCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void syncCameraSensorMode(com.arashivision.insta360.basecamera.camera.ICameraController$o0000Ooo o0000Ooo)`
  void syncCameraSensorMode(ICameraController_o0000Ooo o0000Ooo, ){
    
    _syncCameraSensorMode(reference.pointer, _id_syncCameraSensorMode as _$jni.JMethodIDPtr, o0000Ooo.reference.pointer).check();
  }

  static final _id_getCameraSensorMode = _class.instanceMethodId(
    r'getCameraSensorMode',
    r'()I',
  );

  static final _getCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraSensorMode()`
  int getCameraSensorMode(){
    
    return _getCameraSensorMode(reference.pointer, _id_getCameraSensorMode as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setCameraSensorMode = _class.instanceMethodId(
    r'setCameraSensorMode',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;)V',
  );

  static final _setCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSensorMode(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO0O o000OO0O)`
  void setCameraSensorMode(int i, ICameraController_o000OO0O o000OO0O, ){
    
    _setCameraSensorMode(reference.pointer, _id_setCameraSensorMode as _$jni.JMethodIDPtr, i, o000OO0O.reference.pointer).check();
  }

  static final _id_supportSwitchCameraSensorMode = _class.instanceMethodId(
    r'supportSwitchCameraSensorMode',
    r'()Z',
  );

  static final _supportSwitchCameraSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportSwitchCameraSensorMode()`
  bool supportSwitchCameraSensorMode(){
    
    return _supportSwitchCameraSensorMode(reference.pointer, _id_supportSwitchCameraSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraSingleSensorMode = _class.instanceMethodId(
    r'isCameraSingleSensorMode',
    r'()Z',
  );

  static final _isCameraSingleSensorMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraSingleSensorMode()`
  bool isCameraSingleSensorMode(){
    
    return _isCameraSingleSensorMode(reference.pointer, _id_isCameraSingleSensorMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraPowerPanoMode = _class.instanceMethodId(
    r'isCameraPowerPanoMode',
    r'()Z',
  );

  static final _isCameraPowerPanoMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraPowerPanoMode()`
  bool isCameraPowerPanoMode(){
    
    return _isCameraPowerPanoMode(reference.pointer, _id_isCameraPowerPanoMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCameraSingleSensorResolutionId = _class.instanceMethodId(
    r'getCameraSingleSensorResolutionId',
    r'(I)I',
  );

  static final _getCameraSingleSensorResolutionId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorResolutionId(int i)`
  int getCameraSingleSensorResolutionId(int i, ){
    
    return _getCameraSingleSensorResolutionId(reference.pointer, _id_getCameraSingleSensorResolutionId as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorResolution = _class.instanceMethodId(
    r'setCameraSingleSensorResolution',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorResolution(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorResolution(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorResolution(reference.pointer, _id_setCameraSingleSensorResolution as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorFlowstateEnable = _class.instanceMethodId(
    r'getCameraSingleSensorFlowstateEnable',
    r'(I)Z',
  );

  static final _getCameraSingleSensorFlowstateEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public boolean getCameraSingleSensorFlowstateEnable(int i)`
  bool getCameraSingleSensorFlowstateEnable(int i, ){
    
    return _getCameraSingleSensorFlowstateEnable(reference.pointer, _id_getCameraSingleSensorFlowstateEnable as _$jni.JMethodIDPtr, i).boolean;
  }

  static final _id_setCameraSingleSensorFlowstate = _class.instanceMethodId(
    r'setCameraSingleSensorFlowstate',
    r'(IIZLcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorFlowstate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorFlowstate(int i, int i1, boolean z, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorFlowstate(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorFlowstate(reference.pointer, _id_setCameraSingleSensorFlowstate as _$jni.JMethodIDPtr, i, i1, z ? 1 : 0, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'getCameraSingleSensorDimensionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorDimensionType(int i)`
  int getCameraSingleSensorDimensionType(int i, ){
    
    return _getCameraSingleSensorDimensionType(reference.pointer, _id_getCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorDimensionType = _class.instanceMethodId(
    r'setCameraSingleSensorDimensionType',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
  );

  static final _setCameraSingleSensorDimensionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraSingleSensorDimensionType(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0O0 o000O0O0)`
  void setCameraSingleSensorDimensionType(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0, ){
    
    _setCameraSingleSensorDimensionType(reference.pointer, _id_setCameraSingleSensorDimensionType as _$jni.JMethodIDPtr, i, i1, i2, o000O0O0.reference.pointer).check();
  }

  static final _id_getCameraSingleSensorVisionType = _class.instanceMethodId(
    r'getCameraSingleSensorVisionType',
    r'(I)I',
  );

  static final _getCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public int getCameraSingleSensorVisionType(int i)`
  int getCameraSingleSensorVisionType(int i, ){
    
    return _getCameraSingleSensorVisionType(reference.pointer, _id_getCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i).integer;
  }

  static final _id_setCameraSingleSensorVisionType = _class.instanceMethodId(
    r'setCameraSingleSensorVisionType',
    r'(III)V',
  );

  static final _setCameraSingleSensorVisionType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void setCameraSingleSensorVisionType(int i, int i1, int i2)`
  void setCameraSingleSensorVisionType(int i, int i1, int i2, ){
    
    _setCameraSingleSensorVisionType(reference.pointer, _id_setCameraSingleSensorVisionType as _$jni.JMethodIDPtr, i, i1, i2).check();
  }

  static final _id_fetchCameraSingleSensorOptions = _class.instanceMethodId(
    r'fetchCameraSingleSensorOptions',
    r'([ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchCameraSingleSensorOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchCameraSingleSensorOptions(java.lang.Object[] is, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchCameraSingleSensorOptions(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchCameraSingleSensorOptions(reference.pointer, _id_fetchCameraSingleSensorOptions as _$jni.JMethodIDPtr, is$.reference.pointer, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_openPreviewStream = _class.instanceMethodId(
    r'openPreviewStream',
    r'(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;ILcom/arashivision/onecamera/render/RenderMode;ZIZLjava/lang/String;Z)V',
  );

  static final _openPreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void openPreviewStream(com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution, com.arashivision.insta360.basecamera.camera.setting.StreamResolution streamResolution1, int i, com.arashivision.onecamera.render.RenderMode renderMode, boolean z, int i1, boolean z1, java.lang.String string, boolean z2)`
  void openPreviewStream(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2, ){
    
    _openPreviewStream(reference.pointer, _id_openPreviewStream as _$jni.JMethodIDPtr, streamResolution.reference.pointer, streamResolution1.reference.pointer, i, renderMode.reference.pointer, z ? 1 : 0, i1, z1 ? 1 : 0, string.reference.pointer, z2 ? 1 : 0).check();
  }

  static final _id_closePreviewStream = _class.instanceMethodId(
    r'closePreviewStream',
    r'()V',
  );

  static final _closePreviewStream = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void closePreviewStream()`
  void closePreviewStream(){
    
    _closePreviewStream(reference.pointer, _id_closePreviewStream as _$jni.JMethodIDPtr).check();
  }

  static final _id_setPipeline = _class.instanceMethodId(
    r'setPipeline',
    r'(Lcom/arashivision/onestream/pipeline/ICameraPreviewPipeline;)V',
  );

  static final _setPipeline = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPipeline(com.arashivision.onestream.pipeline.ICameraPreviewPipeline iCameraPreviewPipeline)`
  void setPipeline(_$jni.JObject iCameraPreviewPipeline, ){
    
    _setPipeline(reference.pointer, _id_setPipeline as _$jni.JMethodIDPtr, iCameraPreviewPipeline.reference.pointer).check();
  }

  static final _id_setPreviewImageNotify = _class.instanceMethodId(
    r'setPreviewImageNotify',
    r'(Lcom/arashivision/camera/stream/PreviewImageNotify;Landroid/os/Handler;)V',
  );

  static final _setPreviewImageNotify = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPreviewImageNotify(com.arashivision.camera.stream.PreviewImageNotify previewImageNotify, android.os.Handler handler)`
  void setPreviewImageNotify(_$jni.JObject previewImageNotify, _$jni.JObject handler, ){
    
    _setPreviewImageNotify(reference.pointer, _id_setPreviewImageNotify as _$jni.JMethodIDPtr, previewImageNotify.reference.pointer, handler.reference.pointer).check();
  }

  static final _id_forcePutPreviewImage = _class.instanceMethodId(
    r'forcePutPreviewImage',
    r'([Lcom/arashivision/onestream/ImageData;)V',
  );

  static final _forcePutPreviewImage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void forcePutPreviewImage(com.arashivision.onestream.ImageData[] imageDatas)`
  void forcePutPreviewImage(_$jni.JArray<_$jni.JObject> imageDatas, ){
    
    _forcePutPreviewImage(reference.pointer, _id_forcePutPreviewImage as _$jni.JMethodIDPtr, imageDatas.reference.pointer).check();
  }

  static final _id_isStreamProcessing = _class.instanceMethodId(
    r'isStreamProcessing',
    r'()Z',
  );

  static final _isStreamProcessing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStreamProcessing()`
  bool isStreamProcessing(){
    
    return _isStreamProcessing(reference.pointer, _id_isStreamProcessing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isH265StreamEncode = _class.instanceMethodId(
    r'isH265StreamEncode',
    r'()Z',
  );

  static final _isH265StreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isH265StreamEncode()`
  bool isH265StreamEncode(){
    
    return _isH265StreamEncode(reference.pointer, _id_isH265StreamEncode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStreamEncode = _class.instanceMethodId(
    r'setStreamEncode',
    r'(Z)V',
  );

  static final _setStreamEncode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setStreamEncode(boolean z)`
  void setStreamEncode(bool z, ){
    
    _setStreamEncode(reference.pointer, _id_setStreamEncode as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_requestStreamIframe = _class.instanceMethodId(
    r'requestStreamIframe',
    r'()V',
  );

  static final _requestStreamIframe = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void requestStreamIframe()`
  void requestStreamIframe(){
    
    _requestStreamIframe(reference.pointer, _id_requestStreamIframe as _$jni.JMethodIDPtr).check();
  }

  static final _id_getPreviewStats = _class.instanceMethodId(
    r'getPreviewStats',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;',
  );

  static final _getPreviewStats = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$PreviewStatus getPreviewStats()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_PreviewStatus getPreviewStats(){
    
    return _getPreviewStats(reference.pointer, _id_getPreviewStats as _$jni.JMethodIDPtr).object(const $BaseCamera_PreviewStatus$Type());
  }

  static final _id_getCurFirstStreamResolution = _class.instanceMethodId(
    r'getCurFirstStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurFirstStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurFirstStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurFirstStreamResolution(){
    
    return _getCurFirstStreamResolution(reference.pointer, _id_getCurFirstStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurSecondStreamResolution = _class.instanceMethodId(
    r'getCurSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getCurSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getCurSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getCurSecondStreamResolution(){
    
    return _getCurSecondStreamResolution(reference.pointer, _id_getCurSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getCurRealCameraStreamResolution = _class.instanceMethodId(
    r'getCurRealCameraStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;',
  );

  static final _getCurRealCameraStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.VideoResolution getCurRealCameraStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  VideoResolution getCurRealCameraStreamResolution(){
    
    return _getCurRealCameraStreamResolution(reference.pointer, _id_getCurRealCameraStreamResolution as _$jni.JMethodIDPtr).object(const $VideoResolution$Type());
  }

  static final _id_getSecondStreamResolution = _class.instanceMethodId(
    r'getSecondStreamResolution',
    r'()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getSecondStreamResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getSecondStreamResolution()`
  /// The returned object must be released after use, by calling the [release] method.
  StreamResolution getSecondStreamResolution(){
    
    return _getSecondStreamResolution(reference.pointer, _id_getSecondStreamResolution as _$jni.JMethodIDPtr).object(const $StreamResolution$Type());
  }

  static final _id_getAudioCodec = _class.instanceMethodId(
    r'getAudioCodec',
    r'()I',
  );

  static final _getAudioCodec = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getAudioCodec()`
  int getAudioCodec(){
    
    return _getAudioCodec(reference.pointer, _id_getAudioCodec as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getPreviewNum = _class.instanceMethodId(
    r'getPreviewNum',
    r'()I',
  );

  static final _getPreviewNum = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getPreviewNum()`
  int getPreviewNum(){
    
    return _getPreviewNum(reference.pointer, _id_getPreviewNum as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getRenderMode = _class.instanceMethodId(
    r'getRenderMode',
    r'()Lcom/arashivision/onecamera/render/RenderMode;',
  );

  static final _getRenderMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.onecamera.render.RenderMode getRenderMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getRenderMode(){
    
    return _getRenderMode(reference.pointer, _id_getRenderMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_isCameraWorking = _class.instanceMethodId(
    r'isCameraWorking',
    r'()Z',
  );

  static final _isCameraWorking = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraWorking()`
  bool isCameraWorking(){
    
    return _isCameraWorking(reference.pointer, _id_isCameraWorking as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isCameraRecordOnPause = _class.instanceMethodId(
    r'isCameraRecordOnPause',
    r'()Z',
  );

  static final _isCameraRecordOnPause = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraRecordOnPause()`
  bool isCameraRecordOnPause(){
    
    return _isCameraRecordOnPause(reference.pointer, _id_isCameraRecordOnPause as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCaptureType = _class.instanceMethodId(
    r'getCaptureType',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;',
  );

  static final _getCaptureType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureType getCaptureType()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureType getCaptureType(){
    
    return _getCaptureType(reference.pointer, _id_getCaptureType as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureType$Type());
  }

  static final _id_getCaptureStatus = _class.instanceMethodId(
    r'getCaptureStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;',
  );

  static final _getCaptureStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureStatus getCaptureStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureStatus getCaptureStatus(){
    
    return _getCaptureStatus(reference.pointer, _id_getCaptureStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureStatus$Type());
  }

  static final _id_getCaptureSubStatus = _class.instanceMethodId(
    r'getCaptureSubStatus',
    r'()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;',
  );

  static final _getCaptureSubStatus = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basecamera.camera.BaseCamera$CaptureSubStatus getCaptureSubStatus()`
  /// The returned object must be released after use, by calling the [release] method.
  BaseCamera_CaptureSubStatus getCaptureSubStatus(){
    
    return _getCaptureSubStatus(reference.pointer, _id_getCaptureSubStatus as _$jni.JMethodIDPtr).object(const $BaseCamera_CaptureSubStatus$Type());
  }

  static final _id_getCaptureTime = _class.instanceMethodId(
    r'getCaptureTime',
    r'()J',
  );

  static final _getCaptureTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getCaptureTime()`
  int getCaptureTime(){
    
    return _getCaptureTime(reference.pointer, _id_getCaptureTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getCaptureCount = _class.instanceMethodId(
    r'getCaptureCount',
    r'()I',
  );

  static final _getCaptureCount = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCaptureCount()`
  int getCaptureCount(){
    
    return _getCaptureCount(reference.pointer, _id_getCaptureCount as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCaptureKeyTimePointDetail = _class.instanceMethodId(
    r'getCaptureKeyTimePointDetail',
    r'()Ljava/lang/String;',
  );

  static final _getCaptureKeyTimePointDetail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCaptureKeyTimePointDetail()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCaptureKeyTimePointDetail(){
    
    return _getCaptureKeyTimePointDetail(reference.pointer, _id_getCaptureKeyTimePointDetail as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_startNormalCapture = _class.instanceMethodId(
    r'startNormalCapture',
    r'(I[BI)V',
  );

  static final _startNormalCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalCapture(int i, byte[] bs, int i1)`
  void startNormalCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNormalCapture(reference.pointer, _id_startNormalCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_startCaptureWhileRecording = _class.instanceMethodId(
    r'startCaptureWhileRecording',
    r'(I[BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;)V',
  );

  static final _startCaptureWhileRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startCaptureWhileRecording(int i, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooO oooO)`
  void startCaptureWhileRecording(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO, ){
    
    _startCaptureWhileRecording(reference.pointer, _id_startCaptureWhileRecording as _$jni.JMethodIDPtr, i, bs.reference.pointer, oooO.reference.pointer).check();
  }

  static final _id_isNormalCapturing = _class.instanceMethodId(
    r'isNormalCapturing',
    r'()Z',
  );

  static final _isNormalCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalCapturing()`
  bool isNormalCapturing(){
    
    return _isNormalCapturing(reference.pointer, _id_isNormalCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalPanoCapture = _class.instanceMethodId(
    r'startNormalPanoCapture',
    r'(II[BI)V',
  );

  static final _startNormalPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNormalPanoCapture(int i, int i1, byte[] bs, int i2)`
  void startNormalPanoCapture(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startNormalPanoCapture(reference.pointer, _id_startNormalPanoCapture as _$jni.JMethodIDPtr, i, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isNormalPanoCapturing = _class.instanceMethodId(
    r'isNormalPanoCapturing',
    r'()Z',
  );

  static final _isNormalPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalPanoCapturing()`
  bool isNormalPanoCapturing(){
    
    return _isNormalPanoCapturing(reference.pointer, _id_isNormalPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRCapture = _class.instanceMethodId(
    r'startHDRCapture',
    r'([II[BI)V',
  );

  static final _startHDRCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRCapture(int[] is, int i, byte[] bs, int i1)`
  void startHDRCapture(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startHDRCapture(reference.pointer, _id_startHDRCapture as _$jni.JMethodIDPtr, is$.reference.pointer, i, bs.reference.pointer, i1).check();
  }

  static final _id_isHDRCapturing = _class.instanceMethodId(
    r'isHDRCapturing',
    r'()Z',
  );

  static final _isHDRCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRCapturing()`
  bool isHDRCapturing(){
    
    return _isHDRCapturing(reference.pointer, _id_isHDRCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRPanoCapture = _class.instanceMethodId(
    r'startHDRPanoCapture',
    r'(I[II[BI)V',
  );

  static final _startHDRPanoCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startHDRPanoCapture(int i, int[] is, int i1, byte[] bs, int i2)`
  void startHDRPanoCapture(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2, ){
    
    _startHDRPanoCapture(reference.pointer, _id_startHDRPanoCapture as _$jni.JMethodIDPtr, i, is$.reference.pointer, i1, bs.reference.pointer, i2).check();
  }

  static final _id_isHDRPanoCapturing = _class.instanceMethodId(
    r'isHDRPanoCapturing',
    r'()Z',
  );

  static final _isHDRPanoCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRPanoCapturing()`
  bool isHDRPanoCapturing(){
    
    return _isHDRPanoCapturing(reference.pointer, _id_isHDRPanoCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNightScene = _class.instanceMethodId(
    r'startNightScene',
    r'(I[BI)V',
  );

  static final _startNightScene = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startNightScene(int i, byte[] bs, int i1)`
  void startNightScene(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startNightScene(reference.pointer, _id_startNightScene as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isNightSceneCapturing = _class.instanceMethodId(
    r'isNightSceneCapturing',
    r'()Z',
  );

  static final _isNightSceneCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNightSceneCapturing()`
  bool isNightSceneCapturing(){
    
    return _isNightSceneCapturing(reference.pointer, _id_isNightSceneCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalShooting = _class.instanceMethodId(
    r'startIntervalShooting',
    r'([B)V',
  );

  static final _startIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalShooting(byte[] bs)`
  void startIntervalShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalShooting(reference.pointer, _id_startIntervalShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalShooting = _class.instanceMethodId(
    r'stopIntervalShooting',
    r'()V',
  );

  static final _stopIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalShooting()`
  void stopIntervalShooting(){
    
    _stopIntervalShooting(reference.pointer, _id_stopIntervalShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalShooting = _class.instanceMethodId(
    r'isIntervalShooting',
    r'()Z',
  );

  static final _isIntervalShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalShooting()`
  bool isIntervalShooting(){
    
    return _isIntervalShooting(reference.pointer, _id_isIntervalShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStarLapseShooting = _class.instanceMethodId(
    r'startStarLapseShooting',
    r'([B)V',
  );

  static final _startStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startStarLapseShooting(byte[] bs)`
  void startStarLapseShooting(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startStarLapseShooting(reference.pointer, _id_startStarLapseShooting as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopStarLapseShooting = _class.instanceMethodId(
    r'stopStarLapseShooting',
    r'()V',
  );

  static final _stopStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopStarLapseShooting()`
  void stopStarLapseShooting(){
    
    _stopStarLapseShooting(reference.pointer, _id_stopStarLapseShooting as _$jni.JMethodIDPtr).check();
  }

  static final _id_isStarLapseShooting = _class.instanceMethodId(
    r'isStarLapseShooting',
    r'()Z',
  );

  static final _isStarLapseShooting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStarLapseShooting()`
  bool isStarLapseShooting(){
    
    return _isStarLapseShooting(reference.pointer, _id_isStarLapseShooting as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBurstCapture = _class.instanceMethodId(
    r'startBurstCapture',
    r'(I[BI)V',
  );

  static final _startBurstCapture = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void startBurstCapture(int i, byte[] bs, int i1)`
  void startBurstCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1, ){
    
    _startBurstCapture(reference.pointer, _id_startBurstCapture as _$jni.JMethodIDPtr, i, bs.reference.pointer, i1).check();
  }

  static final _id_isBurstCapturing = _class.instanceMethodId(
    r'isBurstCapturing',
    r'()Z',
  );

  static final _isBurstCapturing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBurstCapturing()`
  bool isBurstCapturing(){
    
    return _isBurstCapturing(reference.pointer, _id_isBurstCapturing as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startNormalRecord = _class.instanceMethodId(
    r'startNormalRecord',
    r'()V',
  );

  static final _startNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startNormalRecord()`
  void startNormalRecord(){
    
    _startNormalRecord(reference.pointer, _id_startNormalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopNormalRecord = _class.instanceMethodId(
    r'stopNormalRecord',
    r'([B)V',
  );

  static final _stopNormalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopNormalRecord(byte[] bs)`
  void stopNormalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopNormalRecord(reference.pointer, _id_stopNormalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isNormalRecording = _class.instanceMethodId(
    r'isNormalRecording',
    r'()Z',
  );

  static final _isNormalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isNormalRecording()`
  bool isNormalRecording(){
    
    return _isNormalRecording(reference.pointer, _id_isNormalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSuperRecord = _class.instanceMethodId(
    r'startSuperRecord',
    r'()V',
  );

  static final _startSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSuperRecord()`
  void startSuperRecord(){
    
    _startSuperRecord(reference.pointer, _id_startSuperRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSuperRecord = _class.instanceMethodId(
    r'stopSuperRecord',
    r'([B)V',
  );

  static final _stopSuperRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSuperRecord(byte[] bs)`
  void stopSuperRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSuperRecord(reference.pointer, _id_stopSuperRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSuperRecording = _class.instanceMethodId(
    r'isSuperRecording',
    r'()Z',
  );

  static final _isSuperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSuperRecording()`
  bool isSuperRecording(){
    
    return _isSuperRecording(reference.pointer, _id_isSuperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startHDRRecord = _class.instanceMethodId(
    r'startHDRRecord',
    r'()V',
  );

  static final _startHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startHDRRecord()`
  void startHDRRecord(){
    
    _startHDRRecord(reference.pointer, _id_startHDRRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopHDRRecord = _class.instanceMethodId(
    r'stopHDRRecord',
    r'([B)V',
  );

  static final _stopHDRRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopHDRRecord(byte[] bs)`
  void stopHDRRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopHDRRecord(reference.pointer, _id_stopHDRRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isHDRRecording = _class.instanceMethodId(
    r'isHDRRecording',
    r'()Z',
  );

  static final _isHDRRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRRecording()`
  bool isHDRRecording(){
    
    return _isHDRRecording(reference.pointer, _id_isHDRRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startBulletTime = _class.instanceMethodId(
    r'startBulletTime',
    r'()V',
  );

  static final _startBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startBulletTime()`
  void startBulletTime(){
    
    _startBulletTime(reference.pointer, _id_startBulletTime as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopBulletTime = _class.instanceMethodId(
    r'stopBulletTime',
    r'([B)V',
  );

  static final _stopBulletTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopBulletTime(byte[] bs)`
  void stopBulletTime(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopBulletTime(reference.pointer, _id_stopBulletTime as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isBulletTimeRecording = _class.instanceMethodId(
    r'isBulletTimeRecording',
    r'()Z',
  );

  static final _isBulletTimeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isBulletTimeRecording()`
  bool isBulletTimeRecording(){
    
    return _isBulletTimeRecording(reference.pointer, _id_isBulletTimeRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimeShift = _class.instanceMethodId(
    r'startTimeShift',
    r'()V',
  );

  static final _startTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimeShift()`
  void startTimeShift(){
    
    _startTimeShift(reference.pointer, _id_startTimeShift as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimeShift = _class.instanceMethodId(
    r'stopTimeShift',
    r'([B)V',
  );

  static final _stopTimeShift = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimeShift(byte[] bs)`
  void stopTimeShift(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimeShift(reference.pointer, _id_stopTimeShift as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimeShiftRecording = _class.instanceMethodId(
    r'isTimeShiftRecording',
    r'()Z',
  );

  static final _isTimeShiftRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimeShiftRecording()`
  bool isTimeShiftRecording(){
    
    return _isTimeShiftRecording(reference.pointer, _id_isTimeShiftRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startLooperRecording = _class.instanceMethodId(
    r'startLooperRecording',
    r'()V',
  );

  static final _startLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startLooperRecording()`
  void startLooperRecording(){
    
    _startLooperRecording(reference.pointer, _id_startLooperRecording as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopLooperRecording = _class.instanceMethodId(
    r'stopLooperRecording',
    r'([B)V',
  );

  static final _stopLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopLooperRecording(byte[] bs)`
  void stopLooperRecording(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopLooperRecording(reference.pointer, _id_stopLooperRecording as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isLooperRecording = _class.instanceMethodId(
    r'isLooperRecording',
    r'()Z',
  );

  static final _isLooperRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLooperRecording()`
  bool isLooperRecording(){
    
    return _isLooperRecording(reference.pointer, _id_isLooperRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startFpvRecord = _class.instanceMethodId(
    r'startFpvRecord',
    r'()V',
  );

  static final _startFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFpvRecord()`
  void startFpvRecord(){
    
    _startFpvRecord(reference.pointer, _id_startFpvRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopFpvRecord = _class.instanceMethodId(
    r'stopFpvRecord',
    r'([B)V',
  );

  static final _stopFpvRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFpvRecord(byte[] bs)`
  void stopFpvRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopFpvRecord(reference.pointer, _id_stopFpvRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isFpvRecording = _class.instanceMethodId(
    r'isFpvRecording',
    r'()Z',
  );

  static final _isFpvRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFpvRecording()`
  bool isFpvRecording(){
    
    return _isFpvRecording(reference.pointer, _id_isFpvRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startMovieRecord = _class.instanceMethodId(
    r'startMovieRecord',
    r'()V',
  );

  static final _startMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startMovieRecord()`
  void startMovieRecord(){
    
    _startMovieRecord(reference.pointer, _id_startMovieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopMovieRecord = _class.instanceMethodId(
    r'stopMovieRecord',
    r'([B)V',
  );

  static final _stopMovieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopMovieRecord(byte[] bs)`
  void stopMovieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopMovieRecord(reference.pointer, _id_stopMovieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isMovieRecording = _class.instanceMethodId(
    r'isMovieRecording',
    r'()Z',
  );

  static final _isMovieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isMovieRecording()`
  bool isMovieRecording(){
    
    return _isMovieRecording(reference.pointer, _id_isMovieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSlowMotionRecord = _class.instanceMethodId(
    r'startSlowMotionRecord',
    r'()V',
  );

  static final _startSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSlowMotionRecord()`
  void startSlowMotionRecord(){
    
    _startSlowMotionRecord(reference.pointer, _id_startSlowMotionRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSlowMotionRecord = _class.instanceMethodId(
    r'stopSlowMotionRecord',
    r'([B)V',
  );

  static final _stopSlowMotionRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSlowMotionRecord(byte[] bs)`
  void stopSlowMotionRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSlowMotionRecord(reference.pointer, _id_stopSlowMotionRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSlowMotionRecording = _class.instanceMethodId(
    r'isSlowMotionRecording',
    r'()Z',
  );

  static final _isSlowMotionRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSlowMotionRecording()`
  bool isSlowMotionRecording(){
    
    return _isSlowMotionRecording(reference.pointer, _id_isSlowMotionRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startSelfieRecord = _class.instanceMethodId(
    r'startSelfieRecord',
    r'()V',
  );

  static final _startSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startSelfieRecord()`
  void startSelfieRecord(){
    
    _startSelfieRecord(reference.pointer, _id_startSelfieRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopSelfieRecord = _class.instanceMethodId(
    r'stopSelfieRecord',
    r'([B)V',
  );

  static final _stopSelfieRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopSelfieRecord(byte[] bs)`
  void stopSelfieRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopSelfieRecord(reference.pointer, _id_stopSelfieRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isSelfieRecording = _class.instanceMethodId(
    r'isSelfieRecording',
    r'()Z',
  );

  static final _isSelfieRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSelfieRecording()`
  bool isSelfieRecording(){
    
    return _isSelfieRecording(reference.pointer, _id_isSelfieRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startPureRecord = _class.instanceMethodId(
    r'startPureRecord',
    r'()V',
  );

  static final _startPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startPureRecord()`
  void startPureRecord(){
    
    _startPureRecord(reference.pointer, _id_startPureRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopPureRecord = _class.instanceMethodId(
    r'stopPureRecord',
    r'([B)V',
  );

  static final _stopPureRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopPureRecord(byte[] bs)`
  void stopPureRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopPureRecord(reference.pointer, _id_stopPureRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isPureRecording = _class.instanceMethodId(
    r'isPureRecording',
    r'()Z',
  );

  static final _isPureRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPureRecording()`
  bool isPureRecording(){
    
    return _isPureRecording(reference.pointer, _id_isPureRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startIntervalRecord = _class.instanceMethodId(
    r'startIntervalRecord',
    r'([B)V',
  );

  static final _startIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startIntervalRecord(byte[] bs)`
  void startIntervalRecord(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _startIntervalRecord(reference.pointer, _id_startIntervalRecord as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_stopIntervalRecord = _class.instanceMethodId(
    r'stopIntervalRecord',
    r'()V',
  );

  static final _stopIntervalRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopIntervalRecord()`
  void stopIntervalRecord(){
    
    _stopIntervalRecord(reference.pointer, _id_stopIntervalRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_isIntervalRecording = _class.instanceMethodId(
    r'isIntervalRecording',
    r'()Z',
  );

  static final _isIntervalRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isIntervalRecording()`
  bool isIntervalRecording(){
    
    return _isIntervalRecording(reference.pointer, _id_isIntervalRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startTimelapse = _class.instanceMethodId(
    r'startTimelapse',
    r'()V',
  );

  static final _startTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startTimelapse()`
  void startTimelapse(){
    
    _startTimelapse(reference.pointer, _id_startTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopTimelapse = _class.instanceMethodId(
    r'stopTimelapse',
    r'([B)V',
  );

  static final _stopTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopTimelapse(byte[] bs)`
  void stopTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopTimelapse(reference.pointer, _id_stopTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isTimelapseRecording = _class.instanceMethodId(
    r'isTimelapseRecording',
    r'()Z',
  );

  static final _isTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isTimelapseRecording()`
  bool isTimelapseRecording(){
    
    return _isTimelapseRecording(reference.pointer, _id_isTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_startStaticTimelapse = _class.instanceMethodId(
    r'startStaticTimelapse',
    r'()V',
  );

  static final _startStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startStaticTimelapse()`
  void startStaticTimelapse(){
    
    _startStaticTimelapse(reference.pointer, _id_startStaticTimelapse as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopStaticTimelapse = _class.instanceMethodId(
    r'stopStaticTimelapse',
    r'([B)V',
  );

  static final _stopStaticTimelapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopStaticTimelapse(byte[] bs)`
  void stopStaticTimelapse(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _stopStaticTimelapse(reference.pointer, _id_stopStaticTimelapse as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_isStaticTimelapseRecording = _class.instanceMethodId(
    r'isStaticTimelapseRecording',
    r'()Z',
  );

  static final _isStaticTimelapseRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStaticTimelapseRecording()`
  bool isStaticTimelapseRecording(){
    
    return _isStaticTimelapseRecording(reference.pointer, _id_isStaticTimelapseRecording as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_pauseRecord = _class.instanceMethodId(
    r'pauseRecord',
    r'()V',
  );

  static final _pauseRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void pauseRecord()`
  void pauseRecord(){
    
    _pauseRecord(reference.pointer, _id_pauseRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_startLive = _class.instanceMethodId(
    r'startLive',
    r'(IIIILjava/lang/String;IJZZ)V',
  );

  static final _startLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int64, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, int, _$jni.Pointer<_$jni.Void>, int, int, int, int)>();
  /// from: `public void startLive(int i, int i1, int i2, int i3, java.lang.String string, int i4, long j, boolean z, boolean z1)`
  void startLive(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1, ){
    
    _startLive(reference.pointer, _id_startLive as _$jni.JMethodIDPtr, i, i1, i2, i3, string.reference.pointer, i4, j, z ? 1 : 0, z1 ? 1 : 0).check();
  }

  static final _id_stopLive = _class.instanceMethodId(
    r'stopLive',
    r'()V',
  );

  static final _stopLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopLive()`
  void stopLive(){
    
    _stopLive(reference.pointer, _id_stopLive as _$jni.JMethodIDPtr).check();
  }

  static final _id_resetRecord = _class.instanceMethodId(
    r'resetRecord',
    r'()V',
  );

  static final _resetRecord = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void resetRecord()`
  void resetRecord(){
    
    _resetRecord(reference.pointer, _id_resetRecord as _$jni.JMethodIDPtr).check();
  }

  static final _id_fetchAllOptions = _class.instanceMethodId(
    r'fetchAllOptions',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchAllOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchAllOptions(com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchAllOptions(ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchAllOptions(reference.pointer, _id_fetchAllOptions as _$jni.JMethodIDPtr, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchOptions = _class.instanceMethodId(
    r'fetchOptions',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchOptions(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchOptions(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchOptions(reference.pointer, _id_fetchOptions as _$jni.JMethodIDPtr, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchPhotoOptions = _class.instanceMethodId(
    r'fetchPhotoOptions',
    r'(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
  );

  static final _fetchPhotoOptions = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void fetchPhotoOptions(int i, java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$IFetchOptionsListener iFetchOptionsListener)`
  void fetchPhotoOptions(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener, ){
    
    _fetchPhotoOptions(reference.pointer, _id_fetchPhotoOptions as _$jni.JMethodIDPtr, i, list.reference.pointer, iFetchOptionsListener.reference.pointer).check();
  }

  static final _id_fetchStorageState = _class.instanceMethodId(
    r'fetchStorageState',
    r'()V',
  );

  static final _fetchStorageState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchStorageState()`
  void fetchStorageState(){
    
    _fetchStorageState(reference.pointer, _id_fetchStorageState as _$jni.JMethodIDPtr).check();
  }

  static final _id_fetchBatteryState = _class.instanceMethodId(
    r'fetchBatteryState',
    r'()V',
  );

  static final _fetchBatteryState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fetchBatteryState()`
  void fetchBatteryState(){
    
    _fetchBatteryState(reference.pointer, _id_fetchBatteryState as _$jni.JMethodIDPtr).check();
  }

  static final _id_formatStorage = _class.instanceMethodId(
    r'formatStorage',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;)V',
  );

  static final _formatStorage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void formatStorage(com.arashivision.insta360.basecamera.camera.ICameraController$o00000O o00000O)`
  void formatStorage(ICameraController_o00000O o00000O, ){
    
    _formatStorage(reference.pointer, _id_formatStorage as _$jni.JMethodIDPtr, o00000O.reference.pointer).check();
  }

  static final _id_setAccessCameraFileState = _class.instanceMethodId(
    r'setAccessCameraFileState',
    r'(I)V',
  );

  static final _setAccessCameraFileState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setAccessCameraFileState(int i)`
  void setAccessCameraFileState(int i, ){
    
    _setAccessCameraFileState(reference.pointer, _id_setAccessCameraFileState as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getCameraFile = _class.instanceMethodId(
    r'getCameraFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _getCameraFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getCameraFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void getCameraFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _getCameraFile(reference.pointer, _id_getCameraFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_packLogFile = _class.instanceMethodId(
    r'packLogFile',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
  );

  static final _packLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void packLogFile(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o00000OO o00000OO)`
  void packLogFile(int i, ICameraController_o00000OO o00000OO, ){
    
    _packLogFile(reference.pointer, _id_packLogFile as _$jni.JMethodIDPtr, i, o00000OO.reference.pointer).check();
  }

  static final _id_setLogFileTransferState = _class.instanceMethodId(
    r'setLogFileTransferState',
    r'(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;)V',
  );

  static final _setLogFileTransferState = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLogFileTransferState(int i, int i1, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo0 o000OOo0)`
  void setLogFileTransferState(int i, int i1, ICameraController_o000OOo0 o000OOo0, ){
    
    _setLogFileTransferState(reference.pointer, _id_setLogFileTransferState as _$jni.JMethodIDPtr, i, i1, o000OOo0.reference.pointer).check();
  }

  static final _id_deleteLogFile = _class.instanceMethodId(
    r'deleteLogFile',
    r'(I)V',
  );

  static final _deleteLogFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void deleteLogFile(int i)`
  void deleteLogFile(int i, ){
    
    _deleteLogFile(reference.pointer, _id_deleteLogFile as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_getFileList = _class.instanceMethodId(
    r'getFileList',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileList(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileList(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileList(reference.pointer, _id_getFileList as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileListIncludeRecording = _class.instanceMethodId(
    r'getFileListIncludeRecording',
    r'(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
  );

  static final _getFileListIncludeRecording = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileListIncludeRecording(int i, int i1, int i2, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO o000OO)`
  void getFileListIncludeRecording(int i, int i1, int i2, ICameraController_o000OO o000OO, ){
    
    _getFileListIncludeRecording(reference.pointer, _id_getFileListIncludeRecording as _$jni.JMethodIDPtr, i, i1, i2, o000OO.reference.pointer).check();
  }

  static final _id_getFileInfoList = _class.instanceMethodId(
    r'getFileInfoList',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;)V',
  );

  static final _getFileInfoList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileInfoList(com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0O o0000O0O)`
  void getFileInfoList(ICameraController_o0000O0O o0000O0O, ){
    
    _getFileInfoList(reference.pointer, _id_getFileInfoList as _$jni.JMethodIDPtr, o0000O0O.reference.pointer).check();
  }

  static final _id_deleteFileList = _class.instanceMethodId(
    r'deleteFileList',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;Ljava/util/List;)V',
  );

  static final _deleteFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void deleteFileList(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO0 oooOOO0, java.util.List list)`
  void deleteFileList(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list, ){
    
    _deleteFileList(reference.pointer, _id_deleteFileList as _$jni.JMethodIDPtr, oooOOO0.reference.pointer, list.reference.pointer).check();
  }

  static final _id_calibrateGyro = _class.instanceMethodId(
    r'calibrateGyro',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;)V',
  );

  static final _calibrateGyro = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void calibrateGyro(com.arashivision.insta360.basecamera.camera.ICameraController$ICalibrateGyroCallback iCalibrateGyroCallback)`
  void calibrateGyro(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback, ){
    
    _calibrateGyro(reference.pointer, _id_calibrateGyro as _$jni.JMethodIDPtr, iCalibrateGyroCallback.reference.pointer).check();
  }

  static final _id_getFileGps = _class.instanceMethodId(
    r'getFileGps',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGps(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGps(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGps(reference.pointer, _id_getFileGps as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnail = _class.instanceMethodId(
    r'getFileThumbnail',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnail(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnail(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnail(reference.pointer, _id_getFileThumbnail as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileThumbnailExt = _class.instanceMethodId(
    r'getFileThumbnailExt',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileThumbnailExt = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileThumbnailExt(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileThumbnailExt(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileThumbnailExt(reference.pointer, _id_getFileThumbnailExt as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExposureTimeData = _class.instanceMethodId(
    r'getFileExposureTimeData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExposureTimeData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExposureTimeData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExposureTimeData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExposureTimeData(reference.pointer, _id_getFileExposureTimeData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileGyroData = _class.instanceMethodId(
    r'getFileGyroData',
    r'(Ljava/lang/String;JJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileGyroData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int64, _$jni.Int64, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileGyroData(java.lang.String string, long j, long j1, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileGyroData(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0, ){
    
    _getFileGyroData(reference.pointer, _id_getFileGyroData as _$jni.JMethodIDPtr, string.reference.pointer, j, j1, o0000O0.reference.pointer).check();
  }

  static final _id_getFileTimelapseTimestamp = _class.instanceMethodId(
    r'getFileTimelapseTimestamp',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileTimelapseTimestamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileTimelapseTimestamp(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileTimelapseTimestamp(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileTimelapseTimestamp(reference.pointer, _id_getFileTimelapseTimestamp as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraMetaData = _class.instanceMethodId(
    r'getFileExtraMetaData',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraMetaData(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraMetaData(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraMetaData(reference.pointer, _id_getFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_setFileExtraMetaData = _class.instanceMethodId(
    r'setFileExtraMetaData',
    r'(Ljava/lang/String;[BLcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;)V',
  );

  static final _setFileExtraMetaData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFileExtraMetaData(java.lang.String string, byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o000OO00 o000OO00)`
  void setFileExtraMetaData(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00, ){
    
    _setFileExtraMetaData(reference.pointer, _id_setFileExtraMetaData as _$jni.JMethodIDPtr, string.reference.pointer, bs.reference.pointer, o000OO00.reference.pointer).check();
  }

  static final _id_getFileExtraHighlight = _class.instanceMethodId(
    r'getFileExtraHighlight',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraHighlight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraHighlight(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraHighlight(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraHighlight(reference.pointer, _id_getFileExtraHighlight as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_getFileExtraAutoEditor = _class.instanceMethodId(
    r'getFileExtraAutoEditor',
    r'(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
  );

  static final _getFileExtraAutoEditor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFileExtraAutoEditor(java.lang.String string, com.arashivision.insta360.basecamera.camera.ICameraController$o0000O0 o0000O0)`
  void getFileExtraAutoEditor(_$jni.JString string, ICameraController_o0000O0 o0000O0, ){
    
    _getFileExtraAutoEditor(reference.pointer, _id_getFileExtraAutoEditor as _$jni.JMethodIDPtr, string.reference.pointer, o0000O0.reference.pointer).check();
  }

  static final _id_cancelAuthorization = _class.instanceMethodId(
    r'cancelAuthorization',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelAuthorization(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelAuthorization(ICameraController_OooO0o oooO0o, ){
    
    _cancelAuthorization(reference.pointer, _id_cancelAuthorization as _$jni.JMethodIDPtr, oooO0o.reference.pointer).check();
  }

  static final _id_requestAuthorization = _class.instanceMethodId(
    r'requestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;)V',
  );

  static final _requestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void requestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O0 o000O0)`
  void requestAuthorization(int i, ICameraController_o000O0 o000O0, ){
    
    _requestAuthorization(reference.pointer, _id_requestAuthorization as _$jni.JMethodIDPtr, i, o000O0.reference.pointer).check();
  }

  static final _id_cancelRequestAuthorization = _class.instanceMethodId(
    r'cancelRequestAuthorization',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
  );

  static final _cancelRequestAuthorization = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void cancelRequestAuthorization(int i, com.arashivision.insta360.basecamera.camera.ICameraController$OooO0o oooO0o)`
  void cancelRequestAuthorization(int i, ICameraController_OooO0o oooO0o, ){
    
    _cancelRequestAuthorization(reference.pointer, _id_cancelRequestAuthorization as _$jni.JMethodIDPtr, i, oooO0o.reference.pointer).check();
  }

  static final _id_setGpsData = _class.instanceMethodId(
    r'setGpsData',
    r'([B)V',
  );

  static final _setGpsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGpsData(byte[] bs)`
  void setGpsData(_$jni.JArray<_$jni.jbyte> bs, ){
    
    _setGpsData(reference.pointer, _id_setGpsData as _$jni.JMethodIDPtr, bs.reference.pointer).check();
  }

  static final _id_setKeyTimePoint = _class.instanceMethodId(
    r'setKeyTimePoint',
    r'(JILjava/lang/String;)V',
  );

  static final _setKeyTimePoint = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setKeyTimePoint(long j, int i, java.lang.String string)`
  void setKeyTimePoint(int j, int i, _$jni.JString string, ){
    
    _setKeyTimePoint(reference.pointer, _id_setKeyTimePoint as _$jni.JMethodIDPtr, j, i, string.reference.pointer).check();
  }

  static final _id_setBleRemoteControllerListener = _class.instanceMethodId(
    r'setBleRemoteControllerListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;)V',
  );

  static final _setBleRemoteControllerListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteControllerListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooO0OO oooO0OO)`
  void setBleRemoteControllerListener(ICameraController_OooO0OO oooO0OO, ){
    
    _setBleRemoteControllerListener(reference.pointer, _id_setBleRemoteControllerListener as _$jni.JMethodIDPtr, oooO0OO.reference.pointer).check();
  }

  static final _id_scanBleRemoteController = _class.instanceMethodId(
    r'scanBleRemoteController',
    r'()V',
  );

  static final _scanBleRemoteController = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void scanBleRemoteController()`
  void scanBleRemoteController(){
    
    _scanBleRemoteController(reference.pointer, _id_scanBleRemoteController as _$jni.JMethodIDPtr).check();
  }

  static final _id_connectBleRemoteControl = _class.instanceMethodId(
    r'connectBleRemoteControl',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _connectBleRemoteControl = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void connectBleRemoteControl(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void connectBleRemoteControl(_$jni.JObject bTPeripheral, ){
    
    _connectBleRemoteControl(reference.pointer, _id_connectBleRemoteControl as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_disconnectBle = _class.instanceMethodId(
    r'disconnectBle',
    r'(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
  );

  static final _disconnectBle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disconnectBle(com.arashivision.onecamera.cameranotification.BTPeripheral bTPeripheral)`
  void disconnectBle(_$jni.JObject bTPeripheral, ){
    
    _disconnectBle(reference.pointer, _id_disconnectBle as _$jni.JMethodIDPtr, bTPeripheral.reference.pointer).check();
  }

  static final _id_getBleRemoteVersion = _class.instanceMethodId(
    r'getBleRemoteVersion',
    r'()Ljava/lang/String;',
  );

  static final _getBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getBleRemoteVersion()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getBleRemoteVersion(){
    
    return _getBleRemoteVersion(reference.pointer, _id_getBleRemoteVersion as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setBleRemoteVersion = _class.instanceMethodId(
    r'setBleRemoteVersion',
    r'(Ljava/lang/String;)V',
  );

  static final _setBleRemoteVersion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setBleRemoteVersion(java.lang.String string)`
  void setBleRemoteVersion(_$jni.JString string, ){
    
    _setBleRemoteVersion(reference.pointer, _id_setBleRemoteVersion as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_getBleRemoteType = _class.instanceMethodId(
    r'getBleRemoteType',
    r'()I',
  );

  static final _getBleRemoteType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBleRemoteType()`
  int getBleRemoteType(){
    
    return _getBleRemoteType(reference.pointer, _id_getBleRemoteType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_openCameraWifi = _class.instanceMethodId(
    r'openCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;)V',
  );

  static final _openCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void openCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00O o000O00O)`
  void openCameraWifi(ICameraController_o000O00O o000O00O, ){
    
    _openCameraWifi(reference.pointer, _id_openCameraWifi as _$jni.JMethodIDPtr, o000O00O.reference.pointer).check();
  }

  static final _id_closeCameraWifi = _class.instanceMethodId(
    r'closeCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;)V',
  );

  static final _closeCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void closeCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$OooOO0O oooOO0O)`
  void closeCameraWifi(ICameraController_OooOO0O oooOO0O, ){
    
    _closeCameraWifi(reference.pointer, _id_closeCameraWifi as _$jni.JMethodIDPtr, oooOO0O.reference.pointer).check();
  }

  static final _id_resetCameraWifi = _class.instanceMethodId(
    r'resetCameraWifi',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;)V',
  );

  static final _resetCameraWifi = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetCameraWifi(com.arashivision.insta360.basecamera.camera.ICameraController$o000O0Oo o000O0Oo)`
  void resetCameraWifi(ICameraController_o000O0Oo o000O0Oo, ){
    
    _resetCameraWifi(reference.pointer, _id_resetCameraWifi as _$jni.JMethodIDPtr, o000O0Oo.reference.pointer).check();
  }

  static final _id_notifyOTAError = _class.instanceMethodId(
    r'notifyOTAError',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;)V',
  );

  static final _notifyOTAError = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void notifyOTAError(com.arashivision.insta360.basecamera.camera.ICameraController$o000O00 o000O00)`
  void notifyOTAError(ICameraController_o000O00 o000O00, ){
    
    _notifyOTAError(reference.pointer, _id_notifyOTAError as _$jni.JMethodIDPtr, o000O00.reference.pointer).check();
  }

  static final _id_setCameraWifiSeizable = _class.instanceMethodId(
    r'setCameraWifiSeizable',
    r'(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;)V',
  );

  static final _setCameraWifiSeizable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setCameraWifiSeizable(int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000O o000O)`
  void setCameraWifiSeizable(int i, ICameraController_o000O o000O, ){
    
    _setCameraWifiSeizable(reference.pointer, _id_setCameraWifiSeizable as _$jni.JMethodIDPtr, i, o000O.reference.pointer).check();
  }

  static final _id_uploadScriptJson = _class.instanceMethodId(
    r'uploadScriptJson',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptJson = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptJson(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptJson(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptJson(reference.pointer, _id_uploadScriptJson as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_uploadScriptCmd = _class.instanceMethodId(
    r'uploadScriptCmd',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _uploadScriptCmd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void uploadScriptCmd(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void uploadScriptCmd(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO, ){
    
    _uploadScriptCmd(reference.pointer, _id_uploadScriptCmd as _$jni.JMethodIDPtr, bs.reference.pointer, oooOOO.reference.pointer).check();
  }

  static final _id_refreshScript = _class.instanceMethodId(
    r'refreshScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _refreshScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void refreshScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void refreshScript(ICameraController_OooOOO oooOOO, ){
    
    _refreshScript(reference.pointer, _id_refreshScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_runScript = _class.instanceMethodId(
    r'runScript',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
  );

  static final _runScript = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void runScript(com.arashivision.insta360.basecamera.camera.ICameraController$OooOOO oooOOO)`
  void runScript(ICameraController_OooOOO oooOOO, ){
    
    _runScript(reference.pointer, _id_runScript as _$jni.JMethodIDPtr, oooOOO.reference.pointer).check();
  }

  static final _id_addFmgButtonClickListener = _class.instanceMethodId(
    r'addFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _addFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void addFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void addFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _addFmgButtonClickListener(reference.pointer, _id_addFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_removeFmgButtonClickListener = _class.instanceMethodId(
    r'removeFmgButtonClickListener',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
  );

  static final _removeFmgButtonClickListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void removeFmgButtonClickListener(com.arashivision.insta360.basecamera.camera.ICameraController$OooOo00 oooOo00)`
  void removeFmgButtonClickListener(ICameraController_OooOo00 oooOo00, ){
    
    _removeFmgButtonClickListener(reference.pointer, _id_removeFmgButtonClickListener as _$jni.JMethodIDPtr, oooOo00.reference.pointer).check();
  }

  static final _id_startFmgUpgrade = _class.instanceMethodId(
    r'startFmgUpgrade',
    r'([BLcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;)V',
  );

  static final _startFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgUpgrade(byte[] bs, com.arashivision.insta360.basecamera.camera.ICameraController$o00000O0 o00000O0)`
  void startFmgUpgrade(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0, ){
    
    _startFmgUpgrade(reference.pointer, _id_startFmgUpgrade as _$jni.JMethodIDPtr, bs.reference.pointer, o00000O0.reference.pointer).check();
  }

  static final _id_cancelFmgUpgrade = _class.instanceMethodId(
    r'cancelFmgUpgrade',
    r'()V',
  );

  static final _cancelFmgUpgrade = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void cancelFmgUpgrade()`
  void cancelFmgUpgrade(){
    
    _cancelFmgUpgrade(reference.pointer, _id_cancelFmgUpgrade as _$jni.JMethodIDPtr).check();
  }

  static final _id_getFmgMode = _class.instanceMethodId(
    r'getFmgMode',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;',
  );

  static final _getFmgMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzMode getFmgMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgMode(){
    
    return _getFmgMode(reference.pointer, _id_getFmgMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgMode = _class.instanceMethodId(
    r'setFmgMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;)V',
  );

  static final _setFmgMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgMode(com.arashivision.fmg.response.model.FmgModel$PtzMode ptzMode)`
  void setFmgMode(_$jni.JObject ptzMode, ){
    
    _setFmgMode(reference.pointer, _id_setFmgMode as _$jni.JMethodIDPtr, ptzMode.reference.pointer).check();
  }

  static final _id_isFmgSportMode = _class.instanceMethodId(
    r'isFmgSportMode',
    r'()Z',
  );

  static final _isFmgSportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgSportMode()`
  bool isFmgSportMode(){
    
    return _isFmgSportMode(reference.pointer, _id_isFmgSportMode as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgImbalance = _class.instanceMethodId(
    r'isFmgImbalance',
    r'()Z',
  );

  static final _isFmgImbalance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgImbalance()`
  bool isFmgImbalance(){
    
    return _isFmgImbalance(reference.pointer, _id_isFmgImbalance as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getFmgFollowSpeed = _class.instanceMethodId(
    r'getFmgFollowSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;',
  );

  static final _getFmgFollowSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzFollowSpeed getFmgFollowSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgFollowSpeed(){
    
    return _getFmgFollowSpeed(reference.pointer, _id_getFmgFollowSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgFollowSpeed = _class.instanceMethodId(
    r'setFmgFollowSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;)V',
  );

  static final _setFmgFollowSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgFollowSpeed(com.arashivision.fmg.response.model.FmgModel$PtzFollowSpeed ptzFollowSpeed)`
  void setFmgFollowSpeed(_$jni.JObject ptzFollowSpeed, ){
    
    _setFmgFollowSpeed(reference.pointer, _id_setFmgFollowSpeed as _$jni.JMethodIDPtr, ptzFollowSpeed.reference.pointer).check();
  }

  static final _id_getFmgRcSpeed = _class.instanceMethodId(
    r'getFmgRcSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;',
  );

  static final _getFmgRcSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcSpeed getFmgRcSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgRcSpeed(){
    
    return _getFmgRcSpeed(reference.pointer, _id_getFmgRcSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgButtonEnabled = _class.instanceMethodId(
    r'setFmgButtonEnabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonEnabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonEnabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonEnabled(reference.pointer, _id_setFmgButtonEnabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_setFmgButtonDisabled = _class.instanceMethodId(
    r'setFmgButtonDisabled',
    r'(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
  );

  static final _setFmgButtonDisabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgButtonDisabled(com.arashivision.fmg.response.model.FmgButtonAbleParams fmgButtonAbleParams)`
  void setFmgButtonDisabled(_$jni.JObject fmgButtonAbleParams, ){
    
    _setFmgButtonDisabled(reference.pointer, _id_setFmgButtonDisabled as _$jni.JMethodIDPtr, fmgButtonAbleParams.reference.pointer).check();
  }

  static final _id_setFmgRcSpeed = _class.instanceMethodId(
    r'setFmgRcSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;)V',
  );

  static final _setFmgRcSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgRcSpeed(com.arashivision.fmg.response.model.FmgModel$PtzRcSpeed ptzRcSpeed)`
  void setFmgRcSpeed(_$jni.JObject ptzRcSpeed, ){
    
    _setFmgRcSpeed(reference.pointer, _id_setFmgRcSpeed as _$jni.JMethodIDPtr, ptzRcSpeed.reference.pointer).check();
  }

  static final _id_getFmgZoomSpeed = _class.instanceMethodId(
    r'getFmgZoomSpeed',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;',
  );

  static final _getFmgZoomSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzZoomSpeed getFmgZoomSpeed()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgZoomSpeed(){
    
    return _getFmgZoomSpeed(reference.pointer, _id_getFmgZoomSpeed as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgZoomSpeed = _class.instanceMethodId(
    r'setFmgZoomSpeed',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;)V',
  );

  static final _setFmgZoomSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgZoomSpeed(com.arashivision.fmg.response.model.FmgModel$PtzZoomSpeed ptzZoomSpeed)`
  void setFmgZoomSpeed(_$jni.JObject ptzZoomSpeed, ){
    
    _setFmgZoomSpeed(reference.pointer, _id_setFmgZoomSpeed as _$jni.JMethodIDPtr, ptzZoomSpeed.reference.pointer).check();
  }

  static final _id_getFmgHorizontalDir = _class.instanceMethodId(
    r'getFmgHorizontalDir',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;',
  );

  static final _getFmgHorizontalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcHorizontalDir getFmgHorizontalDir()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgHorizontalDir(){
    
    return _getFmgHorizontalDir(reference.pointer, _id_getFmgHorizontalDir as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgHorizontalDir = _class.instanceMethodId(
    r'setFmgHorizontalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;)V',
  );

  static final _setFmgHorizontalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHorizontalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcHorizontalDir ptzRcHorizontalDir)`
  void setFmgHorizontalDir(_$jni.JObject ptzRcHorizontalDir, ){
    
    _setFmgHorizontalDir(reference.pointer, _id_setFmgHorizontalDir as _$jni.JMethodIDPtr, ptzRcHorizontalDir.reference.pointer).check();
  }

  static final _id_getFmgVerticalDir = _class.instanceMethodId(
    r'getFmgVerticalDir',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;',
  );

  static final _getFmgVerticalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzRcVerticalDir getFmgVerticalDir()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgVerticalDir(){
    
    return _getFmgVerticalDir(reference.pointer, _id_getFmgVerticalDir as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgVerticalDir = _class.instanceMethodId(
    r'setFmgVerticalDir',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;)V',
  );

  static final _setFmgVerticalDir = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgVerticalDir(com.arashivision.fmg.response.model.FmgModel$PtzRcVerticalDir ptzRcVerticalDir)`
  void setFmgVerticalDir(_$jni.JObject ptzRcVerticalDir, ){
    
    _setFmgVerticalDir(reference.pointer, _id_setFmgVerticalDir as _$jni.JMethodIDPtr, ptzRcVerticalDir.reference.pointer).check();
  }

  static final _id_getFmgSoundEnable = _class.instanceMethodId(
    r'getFmgSoundEnable',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;',
  );

  static final _getFmgSoundEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzSoundMode getFmgSoundEnable()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgSoundEnable(){
    
    return _getFmgSoundEnable(reference.pointer, _id_getFmgSoundEnable as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getFmgSwitchModeWay = _class.instanceMethodId(
    r'getFmgSwitchModeWay',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;',
  );

  static final _getFmgSwitchModeWay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzSwitchModeWay getFmgSwitchModeWay()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgSwitchModeWay(){
    
    return _getFmgSwitchModeWay(reference.pointer, _id_getFmgSwitchModeWay as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgSwitchModeWay = _class.instanceMethodId(
    r'setFmgSwitchModeWay',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;)V',
  );

  static final _setFmgSwitchModeWay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSwitchModeWay(com.arashivision.fmg.response.model.FmgModel$PtzSwitchModeWay ptzSwitchModeWay)`
  void setFmgSwitchModeWay(_$jni.JObject ptzSwitchModeWay, ){
    
    _setFmgSwitchModeWay(reference.pointer, _id_setFmgSwitchModeWay as _$jni.JMethodIDPtr, ptzSwitchModeWay.reference.pointer).check();
  }

  static final _id_setFmgSoundEnable = _class.instanceMethodId(
    r'setFmgSoundEnable',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;)V',
  );

  static final _setFmgSoundEnable = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSoundEnable(com.arashivision.fmg.response.model.FmgModel$PtzSoundMode ptzSoundMode)`
  void setFmgSoundEnable(_$jni.JObject ptzSoundMode, ){
    
    _setFmgSoundEnable(reference.pointer, _id_setFmgSoundEnable as _$jni.JMethodIDPtr, ptzSoundMode.reference.pointer).check();
  }

  static final _id_getFmgHvMode = _class.instanceMethodId(
    r'getFmgHvMode',
    r'()Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;',
  );

  static final _getFmgHvMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.fmg.response.model.FmgModel$PtzHvMode getFmgHvMode()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getFmgHvMode(){
    
    return _getFmgHvMode(reference.pointer, _id_getFmgHvMode as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setFmgHvMode = _class.instanceMethodId(
    r'setFmgHvMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;)V',
  );

  static final _setFmgHvMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgHvMode(com.arashivision.fmg.response.model.FmgModel$PtzHvMode ptzHvMode)`
  void setFmgHvMode(_$jni.JObject ptzHvMode, ){
    
    _setFmgHvMode(reference.pointer, _id_setFmgHvMode as _$jni.JMethodIDPtr, ptzHvMode.reference.pointer).check();
  }

  static final _id_isFmgLimitedYaw = _class.instanceMethodId(
    r'isFmgLimitedYaw',
    r'()Z',
  );

  static final _isFmgLimitedYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgLimitedYaw()`
  bool isFmgLimitedYaw(){
    
    return _isFmgLimitedYaw(reference.pointer, _id_isFmgLimitedYaw as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgLimitedPitch = _class.instanceMethodId(
    r'isFmgLimitedPitch',
    r'()Z',
  );

  static final _isFmgLimitedPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgLimitedPitch()`
  bool isFmgLimitedPitch(){
    
    return _isFmgLimitedPitch(reference.pointer, _id_isFmgLimitedPitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgSleep = _class.instanceMethodId(
    r'isFmgSleep',
    r'()Z',
  );

  static final _isFmgSleep = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgSleep()`
  bool isFmgSleep(){
    
    return _isFmgSleep(reference.pointer, _id_isFmgSleep as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgStalled = _class.instanceMethodId(
    r'isFmgStalled',
    r'()Z',
  );

  static final _isFmgStalled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgStalled()`
  bool isFmgStalled(){
    
    return _isFmgStalled(reference.pointer, _id_isFmgStalled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isFmgPayload = _class.instanceMethodId(
    r'isFmgPayload',
    r'()Z',
  );

  static final _isFmgPayload = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isFmgPayload()`
  bool isFmgPayload(){
    
    return _isFmgPayload(reference.pointer, _id_isFmgPayload as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getFmgVerticalTrimDegree = _class.instanceMethodId(
    r'getFmgVerticalTrimDegree',
    r'()F',
  );

  static final _getFmgVerticalTrimDegree = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFmgVerticalTrimDegree()`
  double getFmgVerticalTrimDegree(){
    
    return _getFmgVerticalTrimDegree(reference.pointer, _id_getFmgVerticalTrimDegree as _$jni.JMethodIDPtr).float;
  }

  static final _id_setFmgVerticalTrimDegree = _class.instanceMethodId(
    r'setFmgVerticalTrimDegree',
    r'(F)V',
  );

  static final _setFmgVerticalTrimDegree = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setFmgVerticalTrimDegree(float f)`
  void setFmgVerticalTrimDegree(double f, ){
    
    _setFmgVerticalTrimDegree(reference.pointer, _id_setFmgVerticalTrimDegree as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_startOrUpdateFmgTargetFollow = _class.instanceMethodId(
    r'startOrUpdateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _startOrUpdateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startOrUpdateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void startOrUpdateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _startOrUpdateFmgTargetFollow(reference.pointer, _id_startOrUpdateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_lostFmgTargetFollow = _class.instanceMethodId(
    r'lostFmgTargetFollow',
    r'()V',
  );

  static final _lostFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void lostFmgTargetFollow()`
  void lostFmgTargetFollow(){
    
    _lostFmgTargetFollow(reference.pointer, _id_lostFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_exitFmgTargetFollow = _class.instanceMethodId(
    r'exitFmgTargetFollow',
    r'()V',
  );

  static final _exitFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void exitFmgTargetFollow()`
  void exitFmgTargetFollow(){
    
    _exitFmgTargetFollow(reference.pointer, _id_exitFmgTargetFollow as _$jni.JMethodIDPtr).check();
  }

  static final _id_speculateFmgTargetFollow = _class.instanceMethodId(
    r'speculateFmgTargetFollow',
    r'(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
  );

  static final _speculateFmgTargetFollow = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void speculateFmgTargetFollow(com.arashivision.fmg.response.model.FmgTargetFollowParams fmgTargetFollowParams)`
  void speculateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams, ){
    
    _speculateFmgTargetFollow(reference.pointer, _id_speculateFmgTargetFollow as _$jni.JMethodIDPtr, fmgTargetFollowParams.reference.pointer).check();
  }

  static final _id_setFmgZoomScale = _class.instanceMethodId(
    r'setFmgZoomScale',
    r'(S)V',
  );

  static final _setFmgZoomScale = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgZoomScale(short s)`
  void setFmgZoomScale(int s, ){
    
    _setFmgZoomScale(reference.pointer, _id_setFmgZoomScale as _$jni.JMethodIDPtr, s).check();
  }

  static final _id_getFmgAngle = _class.instanceMethodId(
    r'getFmgAngle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;)V',
  );

  static final _getFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAngle(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo0 oooo0)`
  void getFmgAngle(ICameraController_Oooo0 oooo0, ){
    
    _getFmgAngle(reference.pointer, _id_getFmgAngle as _$jni.JMethodIDPtr, oooo0.reference.pointer).check();
  }

  static final _id_getFmgSpeed = _class.instanceMethodId(
    r'getFmgSpeed',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;)V',
  );

  static final _getFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgSpeed(com.arashivision.insta360.basecamera.camera.ICameraController$o00O0O o00O0O)`
  void getFmgSpeed(ICameraController_o00O0O o00O0O, ){
    
    _getFmgSpeed(reference.pointer, _id_getFmgSpeed as _$jni.JMethodIDPtr, o00O0O.reference.pointer).check();
  }

  static final _id_setFmgAngle = _class.instanceMethodId(
    r'setFmgAngle',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;)V',
  );

  static final _setFmgAngle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngle(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0ooOOo o0ooOOo)`
  void setFmgAngle(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo, ){
    
    _setFmgAngle(reference.pointer, _id_setFmgAngle as _$jni.JMethodIDPtr, f, f1, f2, o0ooOOo.reference.pointer).check();
  }

  static final _id_setFmgSpeed = _class.instanceMethodId(
    r'setFmgSpeed',
    r'(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;)V',
  );

  static final _setFmgSpeed = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgSpeed(float f, float f1, float f2, com.arashivision.insta360.basecamera.camera.ICameraController$o0O0O00 o0O0O00)`
  void setFmgSpeed(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00, ){
    
    _setFmgSpeed(reference.pointer, _id_setFmgSpeed as _$jni.JMethodIDPtr, f, f1, f2, o0O0O00.reference.pointer).check();
  }

  static final _id_setFmgIdle = _class.instanceMethodId(
    r'setFmgIdle',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;)V',
  );

  static final _setFmgIdle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgIdle(com.arashivision.insta360.basecamera.camera.ICameraController$o0Oo0oo o0Oo0oo)`
  void setFmgIdle(ICameraController_o0Oo0oo o0Oo0oo, ){
    
    _setFmgIdle(reference.pointer, _id_setFmgIdle as _$jni.JMethodIDPtr, o0Oo0oo.reference.pointer).check();
  }

  static final _id_setFmgTimeElapse = _class.instanceMethodId(
    r'setFmgTimeElapse',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTemMode;Lcom/arashivision/fmg/response/model/FmgModel$PtzTemState;ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;)V',
  );

  static final _setFmgTimeElapse = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTimeElapse(com.arashivision.fmg.response.model.FmgModel$PtzTemMode ptzTemMode, com.arashivision.fmg.response.model.FmgModel$PtzTemState ptzTemState, int i, com.arashivision.insta360.basecamera.camera.ICameraController$o000OOo o000OOo)`
  void setFmgTimeElapse(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo, ){
    
    _setFmgTimeElapse(reference.pointer, _id_setFmgTimeElapse as _$jni.JMethodIDPtr, ptzTemMode.reference.pointer, ptzTemState.reference.pointer, i, o000OOo.reference.pointer).check();
  }

  static final _id_setFmgPano = _class.instanceMethodId(
    r'setFmgPano',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzPanoMode;)V',
  );

  static final _setFmgPano = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgPano(com.arashivision.fmg.response.model.FmgModel$PtzPanoMode ptzPanoMode)`
  void setFmgPano(_$jni.JObject ptzPanoMode, ){
    
    _setFmgPano(reference.pointer, _id_setFmgPano as _$jni.JMethodIDPtr, ptzPanoMode.reference.pointer).check();
  }

  static final _id_resetFmgDefaultSettings = _class.instanceMethodId(
    r'resetFmgDefaultSettings',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;)V',
  );

  static final _resetFmgDefaultSettings = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void resetFmgDefaultSettings(com.arashivision.insta360.basecamera.camera.ICameraController$o0OO00O o0OO00O)`
  void resetFmgDefaultSettings(ICameraController_o0OO00O o0OO00O, ){
    
    _resetFmgDefaultSettings(reference.pointer, _id_resetFmgDefaultSettings as _$jni.JMethodIDPtr, o0OO00O.reference.pointer).check();
  }

  static final _id_getFmgTrackSensitivityMode = _class.instanceMethodId(
    r'getFmgTrackSensitivityMode',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;)V',
  );

  static final _getFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgTrackSensitivityMode(com.arashivision.insta360.basecamera.camera.ICameraController$o00Oo0 o00Oo0)`
  void getFmgTrackSensitivityMode(ICameraController_o00Oo0 o00Oo0, ){
    
    _getFmgTrackSensitivityMode(reference.pointer, _id_getFmgTrackSensitivityMode as _$jni.JMethodIDPtr, o00Oo0.reference.pointer).check();
  }

  static final _id_setFmgTrackSensitivityMode = _class.instanceMethodId(
    r'setFmgTrackSensitivityMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;)V',
  );

  static final _setFmgTrackSensitivityMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgTrackSensitivityMode(com.arashivision.fmg.response.model.FmgModel$PtzTrackSensitivityMode ptzTrackSensitivityMode, com.arashivision.insta360.basecamera.camera.ICameraController$o000000 o000000)`
  void setFmgTrackSensitivityMode(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000, ){
    
    _setFmgTrackSensitivityMode(reference.pointer, _id_setFmgTrackSensitivityMode as _$jni.JMethodIDPtr, ptzTrackSensitivityMode.reference.pointer, o000000.reference.pointer).check();
  }

  static final _id_startFmgRecMode = _class.instanceMethodId(
    r'startFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _startFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void startFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void startFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _startFmgRecMode(reference.pointer, _id_startFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_stopFmgRecMode = _class.instanceMethodId(
    r'stopFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _stopFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void stopFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void stopFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _stopFmgRecMode(reference.pointer, _id_stopFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_initFmgRecMode = _class.instanceMethodId(
    r'initFmgRecMode',
    r'(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
  );

  static final _initFmgRecMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void initFmgRecMode(com.arashivision.fmg.response.model.FmgModel$PtzRecMode ptzRecMode)`
  void initFmgRecMode(_$jni.JObject ptzRecMode, ){
    
    _initFmgRecMode(reference.pointer, _id_initFmgRecMode as _$jni.JMethodIDPtr, ptzRecMode.reference.pointer).check();
  }

  static final _id_fmgVibration = _class.instanceMethodId(
    r'fmgVibration',
    r'()V',
  );

  static final _fmgVibration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void fmgVibration()`
  void fmgVibration(){
    
    _fmgVibration(reference.pointer, _id_fmgVibration as _$jni.JMethodIDPtr).check();
  }

  static final _id_enableFmgHandDrag = _class.instanceMethodId(
    r'enableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _enableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void enableFmgHandDrag(java.util.ArrayList arrayList)`
  void enableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _enableFmgHandDrag(reference.pointer, _id_enableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_disableFmgHandDrag = _class.instanceMethodId(
    r'disableFmgHandDrag',
    r'(Ljava/util/ArrayList;)V',
  );

  static final _disableFmgHandDrag = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void disableFmgHandDrag(java.util.ArrayList arrayList)`
  void disableFmgHandDrag(_$jni.JObject arrayList, ){
    
    _disableFmgHandDrag(reference.pointer, _id_disableFmgHandDrag as _$jni.JMethodIDPtr, arrayList.reference.pointer).check();
  }

  static final _id_setFmgCameraFacing = _class.instanceMethodId(
    r'setFmgCameraFacing',
    r'(Z)V',
  );

  static final _setFmgCameraFacing = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setFmgCameraFacing(boolean z)`
  void setFmgCameraFacing(bool z, ){
    
    _setFmgCameraFacing(reference.pointer, _id_setFmgCameraFacing as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_updateFmgPhoneImu = _class.instanceMethodId(
    r'updateFmgPhoneImu',
    r'([F)V',
  );

  static final _updateFmgPhoneImu = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void updateFmgPhoneImu(float[] fs)`
  void updateFmgPhoneImu(_$jni.JArray<_$jni.jfloat> fs, ){
    
    _updateFmgPhoneImu(reference.pointer, _id_updateFmgPhoneImu as _$jni.JMethodIDPtr, fs.reference.pointer).check();
  }

  static final _id_getFmgAnalyticsData = _class.instanceMethodId(
    r'getFmgAnalyticsData',
    r'(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;)V',
  );

  static final _getFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void getFmgAnalyticsData(com.arashivision.insta360.basecamera.camera.ICameraController$Oooo000 oooo000)`
  void getFmgAnalyticsData(ICameraController_Oooo000 oooo000, ){
    
    _getFmgAnalyticsData(reference.pointer, _id_getFmgAnalyticsData as _$jni.JMethodIDPtr, oooo000.reference.pointer).check();
  }

  static final _id_setFmgAngleSeq = _class.instanceMethodId(
    r'setFmgAngleSeq',
    r'(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;)V',
  );

  static final _setFmgAngleSeq = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setFmgAngleSeq(java.util.List list, com.arashivision.insta360.basecamera.camera.ICameraController$o0OOO0o o0OOO0o)`
  void setFmgAngleSeq(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o, ){
    
    _setFmgAngleSeq(reference.pointer, _id_setFmgAngleSeq as _$jni.JMethodIDPtr, list.reference.pointer, o0OOO0o.reference.pointer).check();
  }

  static final _id_clearFmgAnalyticsData = _class.instanceMethodId(
    r'clearFmgAnalyticsData',
    r'()V',
  );

  static final _clearFmgAnalyticsData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void clearFmgAnalyticsData()`
  void clearFmgAnalyticsData(){
    
    _clearFmgAnalyticsData(reference.pointer, _id_clearFmgAnalyticsData as _$jni.JMethodIDPtr).check();
  }

  static final _id_startFmgHeartBeat = _class.instanceMethodId(
    r'startFmgHeartBeat',
    r'()V',
  );

  static final _startFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void startFmgHeartBeat()`
  void startFmgHeartBeat(){
    
    _startFmgHeartBeat(reference.pointer, _id_startFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  static final _id_stopFmgHeartBeat = _class.instanceMethodId(
    r'stopFmgHeartBeat',
    r'()V',
  );

  static final _stopFmgHeartBeat = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void stopFmgHeartBeat()`
  void stopFmgHeartBeat(){
    
    _stopFmgHeartBeat(reference.pointer, _id_stopFmgHeartBeat as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraController> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'init()V') {
          _$impls[$p]!.init(
          );
          return _$jni.nullptr;
        }
        if ($d == r'destroy()V') {
          _$impls[$p]!.destroy(
          );
          return _$jni.nullptr;
        }
        if ($d == r'setInstaCamera(Lcom/arashivision/camera/InstaCamera;)V') {
          _$impls[$p]!.setInstaCamera(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setBaseCamera(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V') {
          _$impls[$p]!.setBaseCamera(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setBaseCameraChangedCallback(Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;)V') {
          _$impls[$p]!.setBaseCameraChangedCallback(
$a[0].as(const $IBaseCameraChangedCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setSyncStatusChangeListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;)V') {
          _$impls[$p]!.setSyncStatusChangeListener(
$a[0].as(const $ICameraController_o00oOoo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setCaptureStatusChangeListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;)V') {
          _$impls[$p]!.setCaptureStatusChangeListener(
$a[0].as(const $ICameraController_ICaptureStatusChangedListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setPreviewStatusChangedListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;)V') {
          _$impls[$p]!.setPreviewStatusChangedListener(
$a[0].as(const $ICameraController_IPreviewStatusChangedListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setDeveloperConfigProvider(LOooO00o/OooO00o/OooO00o/OooO00o/OooO00o;)V') {
          _$impls[$p]!.setDeveloperConfigProvider(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setCameraLiveListener(Lcom/arashivision/camera/listener/ICameraLiveStateListener;Lcom/arashivision/onecamera/InfoUpdateListener;)V') {
          _$impls[$p]!.setCameraLiveListener(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCameraInfoNotify(IILjava/lang/Object;)V') {
          _$impls[$p]!.onCameraInfoNotify(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraHost()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraHost(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getPort()I') {
          final $r = _$impls[$p]!.getPort(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getFirmwareUploadPath()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getFirmwareUploadPath(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraFileUploadPath()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraFileUploadPath(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'supportUploadFileToCamera()Z') {
          final $r = _$impls[$p]!.supportUploadFileToCamera(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getVersionValidLength()I') {
          final $r = _$impls[$p]!.getVersionValidLength(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setAssistiveGridEnable(Z)V') {
          _$impls[$p]!.setAssistiveGridEnable(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getAssistiveGridEnable()Z') {
          final $r = _$impls[$p]!.getAssistiveGridEnable(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setFreeFrameGridEnable(Z)V') {
          _$impls[$p]!.setFreeFrameGridEnable(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFreeFrameGridEnable()Z') {
          final $r = _$impls[$p]!.getFreeFrameGridEnable(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'freeze()V') {
          _$impls[$p]!.freeze(
          );
          return _$jni.nullptr;
        }
        if ($d == r'unfreeze()V') {
          _$impls[$p]!.unfreeze(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isFrozen()Z') {
          final $r = _$impls[$p]!.isFrozen(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'changeCameraSyncStatus(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;)V') {
          _$impls[$p]!.changeCameraSyncStatus(
$a[0].as(const $BaseCamera_CameraSyncStatus$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCurCameraSyncStatus()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;') {
          final $r = _$impls[$p]!.getCurCameraSyncStatus(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getLastCameraSyncStatus()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;') {
          final $r = _$impls[$p]!.getLastCameraSyncStatus(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'isCameraBusy()Z') {
          final $r = _$impls[$p]!.isCameraBusy(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setConnectType(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V') {
          _$impls[$p]!.setConnectType(
$a[0].as(const $BaseCamera_ConnectType$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onlySupportBleConnect()Z') {
          final $r = _$impls[$p]!.onlySupportBleConnect(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isCaptureByUser()Z') {
          final $r = _$impls[$p]!.isCaptureByUser(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'fetchCameraType(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO;)V') {
          _$impls[$p]!.fetchCameraType(
$a[0].as(const $ICameraController_OooOOOO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startSync()V') {
          _$impls[$p]!.startSync(
          );
          return _$jni.nullptr;
        }
        if ($d == r'setAuthorizationChecker(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;)V') {
          _$impls[$p]!.setAuthorizationChecker(
$a[0].as(const $ICameraController_OooO00o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setCheckActivationList(Ljava/util/List;)V') {
          _$impls[$p]!.setCheckActivationList(
$a[0].as(const _$jni.JListType($ICameraCheck$Type()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'continueCameraCheck()V') {
          _$impls[$p]!.continueCameraCheck(
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSerial()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getSerial(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setSerial(Ljava/lang/String;)V') {
          _$impls[$p]!.setSerial(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getUUID()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getUUID(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getVR360Senor0Serial()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getVR360Senor0Serial(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getVR360Senor1Serial()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getVR360Senor1Serial(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getVR180SenorSerial()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getVR180SenorSerial(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getSensorSerials()[Ljava/lang/String;') {
          final $r = _$impls[$p]!.getSensorSerials(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraType()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraType(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraName()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraName(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getFWVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getFWVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraFwVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraFwVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCameraBleVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCameraBleVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getChargeBoxFwVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getChargeBoxFwVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getChargeBoxBleVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getChargeBoxBleVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setMediaOffset(Ljava/lang/String;)V') {
          _$impls[$p]!.setMediaOffset(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getMediaOffset()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getMediaOffset(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getMediaOffsetV2()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getMediaOffsetV2(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getMediaOffsetV3()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getMediaOffsetV3(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setOriginalOffset(Ljava/lang/String;)V') {
          _$impls[$p]!.setOriginalOffset(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getOriginalOffset()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getOriginalOffset(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getOriginalOffsetV2()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getOriginalOffsetV2(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getOriginalOffsetV3()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getOriginalOffsetV3(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setAllOffset(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V') {
          _$impls[$p]!.setAllOffset(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
$a[2].as(const _$jni.JStringType(), releaseOriginal: true),
$a[3].as(const _$jni.JStringType(), releaseOriginal: true),
$a[4].as(const _$jni.JStringType(), releaseOriginal: true),
$a[5].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getOffsetState()I') {
          final $r = _$impls[$p]!.getOffsetState(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getActiveTime()J') {
          final $r = _$impls[$p]!.getActiveTime(
          );
          return _$jni.JLong($r).reference.toPointer();
        }
        if ($d == r'setActiveTime(JLcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setActiveTime(
$a[0].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBatteryLevel()I') {
          final $r = _$impls[$p]!.getBatteryLevel(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'isCharging()Z') {
          final $r = _$impls[$p]!.isCharging(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isHighTemperature()Z') {
          final $r = _$impls[$p]!.isHighTemperature(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isLowTemperature()Z') {
          final $r = _$impls[$p]!.isLowTemperature(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getBatteryType()I') {
          final $r = _$impls[$p]!.getBatteryType(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'isChargeBoxConnected()Z') {
          final $r = _$impls[$p]!.isChargeBoxConnected(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getChargeBoxUsbConnectedState()I') {
          final $r = _$impls[$p]!.getChargeBoxUsbConnectedState(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'isChargeBoxConnectedWhenCaptureStart()Z') {
          final $r = _$impls[$p]!.isChargeBoxConnectedWhenCaptureStart(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getChargeBoxBatteryLevel()I') {
          final $r = _$impls[$p]!.getChargeBoxBatteryLevel(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'isChargeBoxCharging()Z') {
          final $r = _$impls[$p]!.isChargeBoxCharging(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getStorageCardState()I') {
          final $r = _$impls[$p]!.getStorageCardState(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getStorageCardLocation()I') {
          final $r = _$impls[$p]!.getStorageCardLocation(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getStorageTotalSpace()J') {
          final $r = _$impls[$p]!.getStorageTotalSpace(
          );
          return _$jni.JLong($r).reference.toPointer();
        }
        if ($d == r'getStorageFreeSpace()J') {
          final $r = _$impls[$p]!.getStorageFreeSpace(
          );
          return _$jni.JLong($r).reference.toPointer();
        }
        if ($d == r'getVideoEncodeType()I') {
          final $r = _$impls[$p]!.getVideoEncodeType(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setVideoEncodeType(I)V') {
          _$impls[$p]!.setVideoEncodeType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isSelfie()Z') {
          final $r = _$impls[$p]!.isSelfie(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getCameraPosture()I') {
          final $r = _$impls[$p]!.getCameraPosture(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getCameraPostureWhenCaptureStart()I') {
          final $r = _$impls[$p]!.getCameraPostureWhenCaptureStart(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getBtWakeupSwState()I') {
          final $r = _$impls[$p]!.getBtWakeupSwState(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtWakeupSwState(I)V') {
          _$impls[$p]!.setBtWakeupSwState(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getGyroTimeStamp()D') {
          final $r = _$impls[$p]!.getGyroTimeStamp(
          );
          return _$jni.JDouble($r).reference.toPointer();
        }
        if ($d == r'getWindowCropInfo()Lcom/arashivision/onecamera/camerarequest/WindowCropInfo;') {
          final $r = _$impls[$p]!.getWindowCropInfo(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getImageFlicker()I') {
          final $r = _$impls[$p]!.getImageFlicker(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setImageFlicker(I)V') {
          _$impls[$p]!.setImageFlicker(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setStandByMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;)V') {
          _$impls[$p]!.setStandByMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o00O0000$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getQuickCaptureEnable()Z') {
          final $r = _$impls[$p]!.getQuickCaptureEnable(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setQuickCaptureEnable(Z)V') {
          _$impls[$p]!.setQuickCaptureEnable(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnShutdownClickMode()I') {
          final $r = _$impls[$p]!.getBtnShutdownClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnShutdownClickMode(I)V') {
          _$impls[$p]!.setBtnShutdownClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnShutdownDoubleClickMode()I') {
          final $r = _$impls[$p]!.getBtnShutdownDoubleClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnShutdownDoubleClickMode(I)V') {
          _$impls[$p]!.setBtnShutdownDoubleClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnShutdownTripleClickMode()I') {
          final $r = _$impls[$p]!.getBtnShutdownTripleClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnShutdownTripleClickMode(I)V') {
          _$impls[$p]!.setBtnShutdownTripleClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnShutdownLongPressMode()I') {
          final $r = _$impls[$p]!.getBtnShutdownLongPressMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnShutdownLongPressMode(I)V') {
          _$impls[$p]!.setBtnShutdownLongPressMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnClickMode()I') {
          final $r = _$impls[$p]!.getBtnClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnClickMode(I)V') {
          _$impls[$p]!.setBtnClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnDoubleClickMode()I') {
          final $r = _$impls[$p]!.getBtnDoubleClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnDoubleClickMode(I)V') {
          _$impls[$p]!.setBtnDoubleClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnTripleClickMode()I') {
          final $r = _$impls[$p]!.getBtnTripleClickMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnTripleClickMode(I)V') {
          _$impls[$p]!.setBtnTripleClickMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBtnLongPressMode()I') {
          final $r = _$impls[$p]!.getBtnLongPressMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBtnLongPressMode(I)V') {
          _$impls[$p]!.setBtnLongPressMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isMute()Z') {
          final $r = _$impls[$p]!.isMute(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setMute(Z)V') {
          _$impls[$p]!.setMute(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getWifiInfo()Lcom/arashivision/onecamera/camerarequest/WifiInfo;') {
          final $r = _$impls[$p]!.getWifiInfo(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setWifiPwd(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setWifiPwd(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getButtonFollowOptions()Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;') {
          final $r = _$impls[$p]!.getButtonFollowOptions(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setButtonFollowOptions(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setButtonFollowOptions(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getWifiChannelCountry()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getWifiChannelCountry(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setWifiChannelCountry(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setWifiChannelCountry(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setCameraLanguage(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;Lcom/arashivision/camera/RequestOptions;)V') {
          _$impls[$p]!.setCameraLanguage(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraLanguage()I') {
          final $r = _$impls[$p]!.getCameraLanguage(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getVideoResolution()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;') {
          final $r = _$impls[$p]!.getVideoResolution(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setVideoResolution(Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setVideoResolution(
$a[0].as(const $VideoResolution$Type(), releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getVideoBitrate()I') {
          final $r = _$impls[$p]!.getVideoBitrate(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getSubVideoMode()I') {
          final $r = _$impls[$p]!.getSubVideoMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setSubVideoMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setSubVideoMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSubPhotoMode()I') {
          final $r = _$impls[$p]!.getSubPhotoMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setSubPhotoMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V') {
          _$impls[$p]!.setSubPhotoMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_ISetOptionsCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getExpectOutputType()I') {
          final $r = _$impls[$p]!.getExpectOutputType(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setExpectOutputType(I)V') {
          _$impls[$p]!.setExpectOutputType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFocusSensor()I') {
          final $r = _$impls[$p]!.getFocusSensor(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setFocusSensor(I)V') {
          _$impls[$p]!.setFocusSensor(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSensorType()I') {
          final $r = _$impls[$p]!.getSensorType(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'beginOptionsTransaction()V') {
          _$impls[$p]!.beginOptionsTransaction(
          );
          return _$jni.nullptr;
        }
        if ($d == r'commitOptionsTransaction(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;)V') {
          _$impls[$p]!.commitOptionsTransaction(
$a[0].as(const $ICameraController_o000O0o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getTimelapseParams(I)Lcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;') {
          final $r = _$impls[$p]!.getTimelapseParams(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setTimelapseParams(ILcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;)V') {
          _$impls[$p]!.setTimelapseParams(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $TimelapseParams$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getExposureMode(IZ)I') {
          final $r = _$impls[$p]!.getExposureMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getISO(IZ)I') {
          final $r = _$impls[$p]!.getISO(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getShutter(IZ)D') {
          final $r = _$impls[$p]!.getShutter(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.JDouble($r).reference.toPointer();
        }
        if ($d == r'setExposureOptions(IIIDZ)V') {
          _$impls[$p]!.setExposureOptions(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const _$jni.JDoubleType(), releaseOriginal: true).doubleValue(releaseOriginal: true),
$a[4].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getExposureEV(I)I') {
          final $r = _$impls[$p]!.getExposureEV(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setExposureEV(II)V') {
          _$impls[$p]!.setExposureEV(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFocalLengthValue(I)D') {
          final $r = _$impls[$p]!.getFocalLengthValue(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JDouble($r).reference.toPointer();
        }
        if ($d == r'setFocalLengthValue(ID)V') {
          _$impls[$p]!.setFocalLengthValue(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JDoubleType(), releaseOriginal: true).doubleValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getVideoResolutionId(I)I') {
          final $r = _$impls[$p]!.getVideoResolutionId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setVideoResolutionId(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V') {
          _$impls[$p]!.setVideoResolutionId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const $ICameraController_o00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getResRecLimit(I)Ljava/util/List;') {
          final $r = _$impls[$p]!.getResRecLimit(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setResRecLimit(ILjava/util/List;)V') {
          _$impls[$p]!.setResRecLimit(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getRemainingTime(I)I') {
          final $r = _$impls[$p]!.getRemainingTime(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getISOTopLimit(I)I') {
          final $r = _$impls[$p]!.getISOTopLimit(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setISOTopLimit(II)V') {
          _$impls[$p]!.setISOTopLimit(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getAEBCaptureNum(I)I') {
          final $r = _$impls[$p]!.getAEBCaptureNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setAEBCaptureNum(II)V') {
          _$impls[$p]!.setAEBCaptureNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getPhotoSize(I)I') {
          final $r = _$impls[$p]!.getPhotoSize(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setPhotoSize(II)V') {
          _$impls[$p]!.setPhotoSize(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getPhotoResolutionId(I)I') {
          final $r = _$impls[$p]!.getPhotoResolutionId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setPhotoResolutionId(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V') {
          _$impls[$p]!.setPhotoResolutionId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const $ICameraController_o00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getWhiteBalanceId(I)I') {
          final $r = _$impls[$p]!.getWhiteBalanceId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setWhiteBalanceId(II)V') {
          _$impls[$p]!.setWhiteBalanceId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getWhiteBalanceValue(I)I') {
          final $r = _$impls[$p]!.getWhiteBalanceValue(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setWhiteBalanceValue(II)V') {
          _$impls[$p]!.setWhiteBalanceValue(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSportModeEnable(I)Z') {
          final $r = _$impls[$p]!.getSportModeEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setSportModeEnable(IZ)V') {
          _$impls[$p]!.setSportModeEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSportModeLevel(I)I') {
          final $r = _$impls[$p]!.getSportModeLevel(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setSportModeLevel(II)V') {
          _$impls[$p]!.setSportModeLevel(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getGammaMode(I)I') {
          final $r = _$impls[$p]!.getGammaMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setGammaMode(II)V') {
          _$impls[$p]!.setGammaMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getRawType(I)I') {
          final $r = _$impls[$p]!.getRawType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setRawType(II)V') {
          _$impls[$p]!.setRawType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getPhotoSelfTimer(I)I') {
          final $r = _$impls[$p]!.getPhotoSelfTimer(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setPhotoSelfTimer(II)V') {
          _$impls[$p]!.setPhotoSelfTimer(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getAccelerateFrequency(I)I') {
          final $r = _$impls[$p]!.getAccelerateFrequency(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setAccelerateFrequency(II)V') {
          _$impls[$p]!.setAccelerateFrequency(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getRecordDurationS(I)I') {
          final $r = _$impls[$p]!.getRecordDurationS(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setRecordDurationS(II)V') {
          _$impls[$p]!.setRecordDurationS(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFlicker(I)I') {
          final $r = _$impls[$p]!.getFlicker(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setFlicker(II)V') {
          _$impls[$p]!.setFlicker(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFlowstateEnable(I)Z') {
          final $r = _$impls[$p]!.getFlowstateEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setFlowstateEnable(IZ)V') {
          _$impls[$p]!.setFlowstateEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getUnDamageZoomEnable(I)Z') {
          final $r = _$impls[$p]!.getUnDamageZoomEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setUnDamageZoomEnable(IZ)V') {
          _$impls[$p]!.setUnDamageZoomEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFlowstateVideoEnable(I)Z') {
          final $r = _$impls[$p]!.getFlowstateVideoEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setFlowstateVideoEnable(IZ)V') {
          _$impls[$p]!.setFlowstateVideoEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getDarkEisEnable(I)Z') {
          final $r = _$impls[$p]!.getDarkEisEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setDarkEisEnable(IZ)V') {
          _$impls[$p]!.setDarkEisEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getMeteringEnable(I)Z') {
          final $r = _$impls[$p]!.getMeteringEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setMeteringEnable(IZ)V') {
          _$impls[$p]!.setMeteringEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getVideoSelfieMode(I)I') {
          final $r = _$impls[$p]!.getVideoSelfieMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setVideoSelfieMode(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V') {
          _$impls[$p]!.setVideoSelfieMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const $ICameraController_o00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getDarkEisStatus(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;)V') {
          _$impls[$p]!.getDarkEisStatus(
$a[0].as(const $ICameraController_o0000oo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getDarkEisEnableGlobal()Z') {
          final $r = _$impls[$p]!.getDarkEisEnableGlobal(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setDarkEisEnableGlobal(Z)V') {
          _$impls[$p]!.setDarkEisEnableGlobal(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getMeteringEnableGlobal()Z') {
          final $r = _$impls[$p]!.getMeteringEnableGlobal(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setMeteringEnableGlobal(Z)V') {
          _$impls[$p]!.setMeteringEnableGlobal(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getInternalSplicingEnable()Z') {
          final $r = _$impls[$p]!.getInternalSplicingEnable(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setInternalSplicingEnable(Z)V') {
          _$impls[$p]!.setInternalSplicingEnable(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getVideoBitrate(I)I') {
          final $r = _$impls[$p]!.getVideoBitrate$1(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getFlowStateLevel(I)I') {
          final $r = _$impls[$p]!.getFlowStateLevel(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setFlowStateLevel(II)V') {
          _$impls[$p]!.setFlowStateLevel(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFlowStateLevelByCv5(I)I') {
          final $r = _$impls[$p]!.getFlowStateLevelByCv5(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setFlowStateLevelByCv5(II)V') {
          _$impls[$p]!.setFlowStateLevelByCv5(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getHdrStatus(I)Z') {
          final $r = _$impls[$p]!.getHdrStatus(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setHdrStatus(IZ)V') {
          _$impls[$p]!.setHdrStatus(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getSharpness(I)I') {
          final $r = _$impls[$p]!.getSharpness(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setSharpness(II)V') {
          _$impls[$p]!.setSharpness(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getStarLapseExportType(I)I') {
          final $r = _$impls[$p]!.getStarLapseExportType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setStarLapseExportType(II)V') {
          _$impls[$p]!.setStarLapseExportType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getPanoExposureMode(I)I') {
          final $r = _$impls[$p]!.getPanoExposureMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setPanoExposureMode(II)V') {
          _$impls[$p]!.setPanoExposureMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFovType(I)I') {
          final $r = _$impls[$p]!.getFovType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setFovType(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V') {
          _$impls[$p]!.setFovType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const $ICameraController_o00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBurstCaptureNum(I)I') {
          final $r = _$impls[$p]!.getBurstCaptureNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBurstCaptureNum(II)V') {
          _$impls[$p]!.setBurstCaptureNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBurstCacheNum(I)I') {
          final $r = _$impls[$p]!.getBurstCacheNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBurstCacheNum(II)V') {
          _$impls[$p]!.setBurstCacheNum(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBurstCaptureTime(I)I') {
          final $r = _$impls[$p]!.getBurstCaptureTime(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setBurstCaptureTime(II)V') {
          _$impls[$p]!.setBurstCaptureTime(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCacheCaptureEnable(I)Z') {
          final $r = _$impls[$p]!.getCacheCaptureEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setCacheCaptureEnable(IZ)V') {
          _$impls[$p]!.setCacheCaptureEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getZoomScale(I)D') {
          final $r = _$impls[$p]!.getZoomScale(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JDouble($r).reference.toPointer();
        }
        if ($d == r'setZoomScale(ID)V') {
          _$impls[$p]!.setZoomScale(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JDoubleType(), releaseOriginal: true).doubleValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getMaxRecordTime(I)I') {
          final $r = _$impls[$p]!.getMaxRecordTime(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setMaxRecordTime(II)V') {
          _$impls[$p]!.setMaxRecordTime(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'syncCameraSensorMode(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;)V') {
          _$impls[$p]!.syncCameraSensorMode(
$a[0].as(const $ICameraController_o0000Ooo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraSensorMode()I') {
          final $r = _$impls[$p]!.getCameraSensorMode(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setCameraSensorMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;)V') {
          _$impls[$p]!.setCameraSensorMode(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o000OO0O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'supportSwitchCameraSensorMode()Z') {
          final $r = _$impls[$p]!.supportSwitchCameraSensorMode(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isCameraSingleSensorMode()Z') {
          final $r = _$impls[$p]!.isCameraSingleSensorMode(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isCameraPowerPanoMode()Z') {
          final $r = _$impls[$p]!.isCameraPowerPanoMode(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getCameraSingleSensorResolutionId(I)I') {
          final $r = _$impls[$p]!.getCameraSingleSensorResolutionId(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setCameraSingleSensorResolution(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V') {
          _$impls[$p]!.setCameraSingleSensorResolution(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000O0O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraSingleSensorFlowstateEnable(I)Z') {
          final $r = _$impls[$p]!.getCameraSingleSensorFlowstateEnable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setCameraSingleSensorFlowstate(IIZLcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V') {
          _$impls[$p]!.setCameraSingleSensorFlowstate(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000O0O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraSingleSensorDimensionType(I)I') {
          final $r = _$impls[$p]!.getCameraSingleSensorDimensionType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setCameraSingleSensorDimensionType(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V') {
          _$impls[$p]!.setCameraSingleSensorDimensionType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000O0O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraSingleSensorVisionType(I)I') {
          final $r = _$impls[$p]!.getCameraSingleSensorVisionType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'setCameraSingleSensorVisionType(III)V') {
          _$impls[$p]!.setCameraSingleSensorVisionType(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchCameraSingleSensorOptions([ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V') {
          _$impls[$p]!.fetchCameraSingleSensorOptions(
$a[0].as(const _$jni.JArrayType(_$jni.jintType()), releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JStringType()), releaseOriginal: true),
$a[2].as(const $ICameraController_IFetchOptionsListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'openPreviewStream(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;ILcom/arashivision/onecamera/render/RenderMode;ZIZLjava/lang/String;Z)V') {
          _$impls[$p]!.openPreviewStream(
$a[0].as(const $StreamResolution$Type(), releaseOriginal: true),
$a[1].as(const $StreamResolution$Type(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[4].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
$a[5].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[6].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
$a[7].as(const _$jni.JStringType(), releaseOriginal: true),
$a[8].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'closePreviewStream()V') {
          _$impls[$p]!.closePreviewStream(
          );
          return _$jni.nullptr;
        }
        if ($d == r'setPipeline(Lcom/arashivision/onestream/pipeline/ICameraPreviewPipeline;)V') {
          _$impls[$p]!.setPipeline(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setPreviewImageNotify(Lcom/arashivision/camera/stream/PreviewImageNotify;Landroid/os/Handler;)V') {
          _$impls[$p]!.setPreviewImageNotify(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'forcePutPreviewImage([Lcom/arashivision/onestream/ImageData;)V') {
          _$impls[$p]!.forcePutPreviewImage(
$a[0].as(const _$jni.JArrayType(_$jni.JObjectType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isStreamProcessing()Z') {
          final $r = _$impls[$p]!.isStreamProcessing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isH265StreamEncode()Z') {
          final $r = _$impls[$p]!.isH265StreamEncode(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'setStreamEncode(Z)V') {
          _$impls[$p]!.setStreamEncode(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'requestStreamIframe()V') {
          _$impls[$p]!.requestStreamIframe(
          );
          return _$jni.nullptr;
        }
        if ($d == r'getPreviewStats()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$PreviewStatus;') {
          final $r = _$impls[$p]!.getPreviewStats(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCurFirstStreamResolution()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;') {
          final $r = _$impls[$p]!.getCurFirstStreamResolution(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCurSecondStreamResolution()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;') {
          final $r = _$impls[$p]!.getCurSecondStreamResolution(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCurRealCameraStreamResolution()Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;') {
          final $r = _$impls[$p]!.getCurRealCameraStreamResolution(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getSecondStreamResolution()Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;') {
          final $r = _$impls[$p]!.getSecondStreamResolution(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getAudioCodec()I') {
          final $r = _$impls[$p]!.getAudioCodec(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getPreviewNum()I') {
          final $r = _$impls[$p]!.getPreviewNum(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getRenderMode()Lcom/arashivision/onecamera/render/RenderMode;') {
          final $r = _$impls[$p]!.getRenderMode(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'isCameraWorking()Z') {
          final $r = _$impls[$p]!.isCameraWorking(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isCameraRecordOnPause()Z') {
          final $r = _$impls[$p]!.isCameraRecordOnPause(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getCaptureType()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureType;') {
          final $r = _$impls[$p]!.getCaptureType(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCaptureStatus()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureStatus;') {
          final $r = _$impls[$p]!.getCaptureStatus(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCaptureSubStatus()Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CaptureSubStatus;') {
          final $r = _$impls[$p]!.getCaptureSubStatus(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getCaptureTime()J') {
          final $r = _$impls[$p]!.getCaptureTime(
          );
          return _$jni.JLong($r).reference.toPointer();
        }
        if ($d == r'getCaptureCount()I') {
          final $r = _$impls[$p]!.getCaptureCount(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'getCaptureKeyTimePointDetail()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getCaptureKeyTimePointDetail(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'startNormalCapture(I[BI)V') {
          _$impls[$p]!.startNormalCapture(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startCaptureWhileRecording(I[BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;)V') {
          _$impls[$p]!.startCaptureWhileRecording(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[2].as(const $ICameraController_OooO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isNormalCapturing()Z') {
          final $r = _$impls[$p]!.isNormalCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startNormalPanoCapture(II[BI)V') {
          _$impls[$p]!.startNormalPanoCapture(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[3].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isNormalPanoCapturing()Z') {
          final $r = _$impls[$p]!.isNormalPanoCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startHDRCapture([II[BI)V') {
          _$impls[$p]!.startHDRCapture(
$a[0].as(const _$jni.JArrayType(_$jni.jintType()), releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[3].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isHDRCapturing()Z') {
          final $r = _$impls[$p]!.isHDRCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startHDRPanoCapture(I[II[BI)V') {
          _$impls[$p]!.startHDRPanoCapture(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jintType()), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[4].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isHDRPanoCapturing()Z') {
          final $r = _$impls[$p]!.isHDRPanoCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startNightScene(I[BI)V') {
          _$impls[$p]!.startNightScene(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isNightSceneCapturing()Z') {
          final $r = _$impls[$p]!.isNightSceneCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startIntervalShooting([B)V') {
          _$impls[$p]!.startIntervalShooting(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopIntervalShooting()V') {
          _$impls[$p]!.stopIntervalShooting(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isIntervalShooting()Z') {
          final $r = _$impls[$p]!.isIntervalShooting(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startStarLapseShooting([B)V') {
          _$impls[$p]!.startStarLapseShooting(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopStarLapseShooting()V') {
          _$impls[$p]!.stopStarLapseShooting(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isStarLapseShooting()Z') {
          final $r = _$impls[$p]!.isStarLapseShooting(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startBurstCapture(I[BI)V') {
          _$impls[$p]!.startBurstCapture(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isBurstCapturing()Z') {
          final $r = _$impls[$p]!.isBurstCapturing(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startNormalRecord()V') {
          _$impls[$p]!.startNormalRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopNormalRecord([B)V') {
          _$impls[$p]!.stopNormalRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isNormalRecording()Z') {
          final $r = _$impls[$p]!.isNormalRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startSuperRecord()V') {
          _$impls[$p]!.startSuperRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopSuperRecord([B)V') {
          _$impls[$p]!.stopSuperRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isSuperRecording()Z') {
          final $r = _$impls[$p]!.isSuperRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startHDRRecord()V') {
          _$impls[$p]!.startHDRRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopHDRRecord([B)V') {
          _$impls[$p]!.stopHDRRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isHDRRecording()Z') {
          final $r = _$impls[$p]!.isHDRRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startBulletTime()V') {
          _$impls[$p]!.startBulletTime(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopBulletTime([B)V') {
          _$impls[$p]!.stopBulletTime(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isBulletTimeRecording()Z') {
          final $r = _$impls[$p]!.isBulletTimeRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startTimeShift()V') {
          _$impls[$p]!.startTimeShift(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopTimeShift([B)V') {
          _$impls[$p]!.stopTimeShift(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isTimeShiftRecording()Z') {
          final $r = _$impls[$p]!.isTimeShiftRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startLooperRecording()V') {
          _$impls[$p]!.startLooperRecording(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopLooperRecording([B)V') {
          _$impls[$p]!.stopLooperRecording(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isLooperRecording()Z') {
          final $r = _$impls[$p]!.isLooperRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startFpvRecord()V') {
          _$impls[$p]!.startFpvRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopFpvRecord([B)V') {
          _$impls[$p]!.stopFpvRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isFpvRecording()Z') {
          final $r = _$impls[$p]!.isFpvRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startMovieRecord()V') {
          _$impls[$p]!.startMovieRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopMovieRecord([B)V') {
          _$impls[$p]!.stopMovieRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isMovieRecording()Z') {
          final $r = _$impls[$p]!.isMovieRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startSlowMotionRecord()V') {
          _$impls[$p]!.startSlowMotionRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopSlowMotionRecord([B)V') {
          _$impls[$p]!.stopSlowMotionRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isSlowMotionRecording()Z') {
          final $r = _$impls[$p]!.isSlowMotionRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startSelfieRecord()V') {
          _$impls[$p]!.startSelfieRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopSelfieRecord([B)V') {
          _$impls[$p]!.stopSelfieRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isSelfieRecording()Z') {
          final $r = _$impls[$p]!.isSelfieRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startPureRecord()V') {
          _$impls[$p]!.startPureRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopPureRecord([B)V') {
          _$impls[$p]!.stopPureRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isPureRecording()Z') {
          final $r = _$impls[$p]!.isPureRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startIntervalRecord([B)V') {
          _$impls[$p]!.startIntervalRecord(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopIntervalRecord()V') {
          _$impls[$p]!.stopIntervalRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isIntervalRecording()Z') {
          final $r = _$impls[$p]!.isIntervalRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startTimelapse()V') {
          _$impls[$p]!.startTimelapse(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopTimelapse([B)V') {
          _$impls[$p]!.stopTimelapse(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isTimelapseRecording()Z') {
          final $r = _$impls[$p]!.isTimelapseRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'startStaticTimelapse()V') {
          _$impls[$p]!.startStaticTimelapse(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopStaticTimelapse([B)V') {
          _$impls[$p]!.stopStaticTimelapse(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isStaticTimelapseRecording()Z') {
          final $r = _$impls[$p]!.isStaticTimelapseRecording(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'pauseRecord()V') {
          _$impls[$p]!.pauseRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'startLive(IIIILjava/lang/String;IJZZ)V') {
          _$impls[$p]!.startLive(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[4].as(const _$jni.JStringType(), releaseOriginal: true),
$a[5].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[6].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[7].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
$a[8].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopLive()V') {
          _$impls[$p]!.stopLive(
          );
          return _$jni.nullptr;
        }
        if ($d == r'resetRecord()V') {
          _$impls[$p]!.resetRecord(
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchAllOptions(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V') {
          _$impls[$p]!.fetchAllOptions(
$a[0].as(const $ICameraController_IFetchOptionsListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchOptions(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V') {
          _$impls[$p]!.fetchOptions(
$a[0].as(const _$jni.JListType(_$jni.JStringType()), releaseOriginal: true),
$a[1].as(const $ICameraController_IFetchOptionsListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchPhotoOptions(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V') {
          _$impls[$p]!.fetchPhotoOptions(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JStringType()), releaseOriginal: true),
$a[2].as(const $ICameraController_IFetchOptionsListener$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchStorageState()V') {
          _$impls[$p]!.fetchStorageState(
          );
          return _$jni.nullptr;
        }
        if ($d == r'fetchBatteryState()V') {
          _$impls[$p]!.fetchBatteryState(
          );
          return _$jni.nullptr;
        }
        if ($d == r'formatStorage(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;)V') {
          _$impls[$p]!.formatStorage(
$a[0].as(const $ICameraController_o00000O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setAccessCameraFileState(I)V') {
          _$impls[$p]!.setAccessCameraFileState(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getCameraFile(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V') {
          _$impls[$p]!.getCameraFile(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o00000OO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'packLogFile(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V') {
          _$impls[$p]!.packLogFile(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o00000OO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setLogFileTransferState(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;)V') {
          _$impls[$p]!.setLogFileTransferState(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const $ICameraController_o000OOo0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'deleteLogFile(I)V') {
          _$impls[$p]!.deleteLogFile(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileList(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V') {
          _$impls[$p]!.getFileList(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000OO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileListIncludeRecording(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V') {
          _$impls[$p]!.getFileListIncludeRecording(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000OO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileInfoList(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;)V') {
          _$impls[$p]!.getFileInfoList(
$a[0].as(const $ICameraController_o0000O0O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'deleteFileList(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;Ljava/util/List;)V') {
          _$impls[$p]!.deleteFileList(
$a[0].as(const $ICameraController_OooOOO0$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JListType(_$jni.JStringType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'calibrateGyro(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;)V') {
          _$impls[$p]!.calibrateGyro(
$a[0].as(const $ICameraController_ICalibrateGyroCallback$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileGps(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileGps(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileThumbnail(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileThumbnail(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileThumbnailExt(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileThumbnailExt(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileExposureTimeData(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileExposureTimeData(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileGyroData(Ljava/lang/String;JJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileGyroData(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[2].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileTimelapseTimestamp(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileTimelapseTimestamp(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileExtraMetaData(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileExtraMetaData(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFileExtraMetaData(Ljava/lang/String;[BLcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;)V') {
          _$impls[$p]!.setFileExtraMetaData(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[2].as(const $ICameraController_o000OO00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileExtraHighlight(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileExtraHighlight(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFileExtraAutoEditor(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V') {
          _$impls[$p]!.getFileExtraAutoEditor(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o0000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'cancelAuthorization(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V') {
          _$impls[$p]!.cancelAuthorization(
$a[0].as(const $ICameraController_OooO0o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'requestAuthorization(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;)V') {
          _$impls[$p]!.requestAuthorization(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'cancelRequestAuthorization(ILcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V') {
          _$impls[$p]!.cancelRequestAuthorization(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_OooO0o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setGpsData([B)V') {
          _$impls[$p]!.setGpsData(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setKeyTimePoint(JILjava/lang/String;)V') {
          _$impls[$p]!.setKeyTimePoint(
$a[0].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[1].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[2].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setBleRemoteControllerListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;)V') {
          _$impls[$p]!.setBleRemoteControllerListener(
$a[0].as(const $ICameraController_OooO0OO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'scanBleRemoteController()V') {
          _$impls[$p]!.scanBleRemoteController(
          );
          return _$jni.nullptr;
        }
        if ($d == r'connectBleRemoteControl(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V') {
          _$impls[$p]!.connectBleRemoteControl(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'disconnectBle(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V') {
          _$impls[$p]!.disconnectBle(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBleRemoteVersion()Ljava/lang/String;') {
          final $r = _$impls[$p]!.getBleRemoteVersion(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setBleRemoteVersion(Ljava/lang/String;)V') {
          _$impls[$p]!.setBleRemoteVersion(
$a[0].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getBleRemoteType()I') {
          final $r = _$impls[$p]!.getBleRemoteType(
          );
          return _$jni.JInteger($r).reference.toPointer();
        }
        if ($d == r'openCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;)V') {
          _$impls[$p]!.openCameraWifi(
$a[0].as(const $ICameraController_o000O00O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'closeCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;)V') {
          _$impls[$p]!.closeCameraWifi(
$a[0].as(const $ICameraController_OooOO0O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'resetCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;)V') {
          _$impls[$p]!.resetCameraWifi(
$a[0].as(const $ICameraController_o000O0Oo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'notifyOTAError(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;)V') {
          _$impls[$p]!.notifyOTAError(
$a[0].as(const $ICameraController_o000O00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setCameraWifiSeizable(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;)V') {
          _$impls[$p]!.setCameraWifiSeizable(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const $ICameraController_o000O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'uploadScriptJson([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V') {
          _$impls[$p]!.uploadScriptJson(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[1].as(const $ICameraController_OooOOO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'uploadScriptCmd([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V') {
          _$impls[$p]!.uploadScriptCmd(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[1].as(const $ICameraController_OooOOO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'refreshScript(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V') {
          _$impls[$p]!.refreshScript(
$a[0].as(const $ICameraController_OooOOO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'runScript(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V') {
          _$impls[$p]!.runScript(
$a[0].as(const $ICameraController_OooOOO$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'addFmgButtonClickListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V') {
          _$impls[$p]!.addFmgButtonClickListener(
$a[0].as(const $ICameraController_OooOo00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'removeFmgButtonClickListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V') {
          _$impls[$p]!.removeFmgButtonClickListener(
$a[0].as(const $ICameraController_OooOo00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startFmgUpgrade([BLcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;)V') {
          _$impls[$p]!.startFmgUpgrade(
$a[0].as(const _$jni.JArrayType(_$jni.jbyteType()), releaseOriginal: true),
$a[1].as(const $ICameraController_o00000O0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'cancelFmgUpgrade()V') {
          _$impls[$p]!.cancelFmgUpgrade(
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgMode()Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;') {
          final $r = _$impls[$p]!.getFmgMode(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;)V') {
          _$impls[$p]!.setFmgMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isFmgSportMode()Z') {
          final $r = _$impls[$p]!.isFmgSportMode(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isFmgImbalance()Z') {
          final $r = _$impls[$p]!.isFmgImbalance(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getFmgFollowSpeed()Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;') {
          final $r = _$impls[$p]!.getFmgFollowSpeed(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgFollowSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;)V') {
          _$impls[$p]!.setFmgFollowSpeed(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgRcSpeed()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;') {
          final $r = _$impls[$p]!.getFmgRcSpeed(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgButtonEnabled(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V') {
          _$impls[$p]!.setFmgButtonEnabled(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgButtonDisabled(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V') {
          _$impls[$p]!.setFmgButtonDisabled(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgRcSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;)V') {
          _$impls[$p]!.setFmgRcSpeed(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgZoomSpeed()Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;') {
          final $r = _$impls[$p]!.getFmgZoomSpeed(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgZoomSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;)V') {
          _$impls[$p]!.setFmgZoomSpeed(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgHorizontalDir()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;') {
          final $r = _$impls[$p]!.getFmgHorizontalDir(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgHorizontalDir(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;)V') {
          _$impls[$p]!.setFmgHorizontalDir(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgVerticalDir()Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;') {
          final $r = _$impls[$p]!.getFmgVerticalDir(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgVerticalDir(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;)V') {
          _$impls[$p]!.setFmgVerticalDir(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgSoundEnable()Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;') {
          final $r = _$impls[$p]!.getFmgSoundEnable(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'getFmgSwitchModeWay()Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;') {
          final $r = _$impls[$p]!.getFmgSwitchModeWay(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgSwitchModeWay(Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;)V') {
          _$impls[$p]!.setFmgSwitchModeWay(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgSoundEnable(Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;)V') {
          _$impls[$p]!.setFmgSoundEnable(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgHvMode()Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;') {
          final $r = _$impls[$p]!.getFmgHvMode(
          );
          return ($r as _$jni.JObject).as(const _$jni.JObjectType()).reference.toPointer();
        }
        if ($d == r'setFmgHvMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;)V') {
          _$impls[$p]!.setFmgHvMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'isFmgLimitedYaw()Z') {
          final $r = _$impls[$p]!.isFmgLimitedYaw(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isFmgLimitedPitch()Z') {
          final $r = _$impls[$p]!.isFmgLimitedPitch(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isFmgSleep()Z') {
          final $r = _$impls[$p]!.isFmgSleep(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isFmgStalled()Z') {
          final $r = _$impls[$p]!.isFmgStalled(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'isFmgPayload()Z') {
          final $r = _$impls[$p]!.isFmgPayload(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'getFmgVerticalTrimDegree()F') {
          final $r = _$impls[$p]!.getFmgVerticalTrimDegree(
          );
          return _$jni.JFloat($r).reference.toPointer();
        }
        if ($d == r'setFmgVerticalTrimDegree(F)V') {
          _$impls[$p]!.setFmgVerticalTrimDegree(
$a[0].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startOrUpdateFmgTargetFollow(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V') {
          _$impls[$p]!.startOrUpdateFmgTargetFollow(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'lostFmgTargetFollow()V') {
          _$impls[$p]!.lostFmgTargetFollow(
          );
          return _$jni.nullptr;
        }
        if ($d == r'exitFmgTargetFollow()V') {
          _$impls[$p]!.exitFmgTargetFollow(
          );
          return _$jni.nullptr;
        }
        if ($d == r'speculateFmgTargetFollow(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V') {
          _$impls[$p]!.speculateFmgTargetFollow(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgZoomScale(S)V') {
          _$impls[$p]!.setFmgZoomScale(
$a[0].as(const _$jni.JShortType(), releaseOriginal: true).shortValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgAngle(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;)V') {
          _$impls[$p]!.getFmgAngle(
$a[0].as(const $ICameraController_Oooo0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgSpeed(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;)V') {
          _$impls[$p]!.getFmgSpeed(
$a[0].as(const $ICameraController_o00O0O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgAngle(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;)V') {
          _$impls[$p]!.setFmgAngle(
$a[0].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[1].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[2].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o0ooOOo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgSpeed(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;)V') {
          _$impls[$p]!.setFmgSpeed(
$a[0].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[1].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[2].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o0O0O00$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgIdle(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;)V') {
          _$impls[$p]!.setFmgIdle(
$a[0].as(const $ICameraController_o0Oo0oo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgTimeElapse(Lcom/arashivision/fmg/response/model/FmgModel$PtzTemMode;Lcom/arashivision/fmg/response/model/FmgModel$PtzTemState;ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;)V') {
          _$impls[$p]!.setFmgTimeElapse(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[2].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[3].as(const $ICameraController_o000OOo$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgPano(Lcom/arashivision/fmg/response/model/FmgModel$PtzPanoMode;)V') {
          _$impls[$p]!.setFmgPano(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'resetFmgDefaultSettings(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;)V') {
          _$impls[$p]!.resetFmgDefaultSettings(
$a[0].as(const $ICameraController_o0OO00O$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgTrackSensitivityMode(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;)V') {
          _$impls[$p]!.getFmgTrackSensitivityMode(
$a[0].as(const $ICameraController_o00Oo0$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgTrackSensitivityMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;)V') {
          _$impls[$p]!.setFmgTrackSensitivityMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
$a[1].as(const $ICameraController_o000000$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'startFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V') {
          _$impls[$p]!.startFmgRecMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V') {
          _$impls[$p]!.stopFmgRecMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'initFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V') {
          _$impls[$p]!.initFmgRecMode(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'fmgVibration()V') {
          _$impls[$p]!.fmgVibration(
          );
          return _$jni.nullptr;
        }
        if ($d == r'enableFmgHandDrag(Ljava/util/ArrayList;)V') {
          _$impls[$p]!.enableFmgHandDrag(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'disableFmgHandDrag(Ljava/util/ArrayList;)V') {
          _$impls[$p]!.disableFmgHandDrag(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgCameraFacing(Z)V') {
          _$impls[$p]!.setFmgCameraFacing(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'updateFmgPhoneImu([F)V') {
          _$impls[$p]!.updateFmgPhoneImu(
$a[0].as(const _$jni.JArrayType(_$jni.jfloatType()), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'getFmgAnalyticsData(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;)V') {
          _$impls[$p]!.getFmgAnalyticsData(
$a[0].as(const $ICameraController_Oooo000$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'setFmgAngleSeq(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;)V') {
          _$impls[$p]!.setFmgAngleSeq(
$a[0].as(const _$jni.JListType(_$jni.JObjectType()), releaseOriginal: true),
$a[1].as(const $ICameraController_o0OOO0o$Type(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'clearFmgAnalyticsData()V') {
          _$impls[$p]!.clearFmgAnalyticsData(
          );
          return _$jni.nullptr;
        }
        if ($d == r'startFmgHeartBeat()V') {
          _$impls[$p]!.startFmgHeartBeat(
          );
          return _$jni.nullptr;
        }
        if ($d == r'stopFmgHeartBeat()V') {
          _$impls[$p]!.stopFmgHeartBeat(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraController $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.ICameraController',
      $p,
      _$invokePointer,
      [
        if ($impl.init$async) r'init()V',
        if ($impl.destroy$async) r'destroy()V',
        if ($impl.setInstaCamera$async) r'setInstaCamera(Lcom/arashivision/camera/InstaCamera;)V',
        if ($impl.setBaseCamera$async) r'setBaseCamera(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)V',
        if ($impl.setBaseCameraChangedCallback$async) r'setBaseCameraChangedCallback(Lcom/arashivision/insta360/basecamera/camera/IBaseCameraChangedCallback;)V',
        if ($impl.setSyncStatusChangeListener$async) r'setSyncStatusChangeListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00oOoo;)V',
        if ($impl.setCaptureStatusChangeListener$async) r'setCaptureStatusChangeListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICaptureStatusChangedListener;)V',
        if ($impl.setPreviewStatusChangedListener$async) r'setPreviewStatusChangedListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IPreviewStatusChangedListener;)V',
        if ($impl.setDeveloperConfigProvider$async) r'setDeveloperConfigProvider(LOooO00o/OooO00o/OooO00o/OooO00o/OooO00o;)V',
        if ($impl.setCameraLiveListener$async) r'setCameraLiveListener(Lcom/arashivision/camera/listener/ICameraLiveStateListener;Lcom/arashivision/onecamera/InfoUpdateListener;)V',
        if ($impl.onCameraInfoNotify$async) r'onCameraInfoNotify(IILjava/lang/Object;)V',
        if ($impl.setAssistiveGridEnable$async) r'setAssistiveGridEnable(Z)V',
        if ($impl.setFreeFrameGridEnable$async) r'setFreeFrameGridEnable(Z)V',
        if ($impl.freeze$async) r'freeze()V',
        if ($impl.unfreeze$async) r'unfreeze()V',
        if ($impl.changeCameraSyncStatus$async) r'changeCameraSyncStatus(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$CameraSyncStatus;)V',
        if ($impl.setConnectType$async) r'setConnectType(Lcom/arashivision/insta360/basecamera/camera/BaseCamera$ConnectType;)V',
        if ($impl.fetchCameraType$async) r'fetchCameraType(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOOO;)V',
        if ($impl.startSync$async) r'startSync()V',
        if ($impl.setAuthorizationChecker$async) r'setAuthorizationChecker(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO00o;)V',
        if ($impl.setCheckActivationList$async) r'setCheckActivationList(Ljava/util/List;)V',
        if ($impl.continueCameraCheck$async) r'continueCameraCheck()V',
        if ($impl.setSerial$async) r'setSerial(Ljava/lang/String;)V',
        if ($impl.setMediaOffset$async) r'setMediaOffset(Ljava/lang/String;)V',
        if ($impl.setOriginalOffset$async) r'setOriginalOffset(Ljava/lang/String;)V',
        if ($impl.setAllOffset$async) r'setAllOffset(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V',
        if ($impl.setActiveTime$async) r'setActiveTime(JLcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setVideoEncodeType$async) r'setVideoEncodeType(I)V',
        if ($impl.setBtWakeupSwState$async) r'setBtWakeupSwState(I)V',
        if ($impl.setImageFlicker$async) r'setImageFlicker(I)V',
        if ($impl.setStandByMode$async) r'setStandByMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0000;)V',
        if ($impl.setQuickCaptureEnable$async) r'setQuickCaptureEnable(Z)V',
        if ($impl.setBtnShutdownClickMode$async) r'setBtnShutdownClickMode(I)V',
        if ($impl.setBtnShutdownDoubleClickMode$async) r'setBtnShutdownDoubleClickMode(I)V',
        if ($impl.setBtnShutdownTripleClickMode$async) r'setBtnShutdownTripleClickMode(I)V',
        if ($impl.setBtnShutdownLongPressMode$async) r'setBtnShutdownLongPressMode(I)V',
        if ($impl.setBtnClickMode$async) r'setBtnClickMode(I)V',
        if ($impl.setBtnDoubleClickMode$async) r'setBtnDoubleClickMode(I)V',
        if ($impl.setBtnTripleClickMode$async) r'setBtnTripleClickMode(I)V',
        if ($impl.setBtnLongPressMode$async) r'setBtnLongPressMode(I)V',
        if ($impl.setMute$async) r'setMute(Z)V',
        if ($impl.setWifiPwd$async) r'setWifiPwd(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setButtonFollowOptions$async) r'setButtonFollowOptions(Lcom/arashivision/onecamera/camerarequest/ButtonFollowOptions;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setWifiChannelCountry$async) r'setWifiChannelCountry(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setCameraLanguage$async) r'setCameraLanguage(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;Lcom/arashivision/camera/RequestOptions;)V',
        if ($impl.setVideoResolution$async) r'setVideoResolution(Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;Lcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setSubVideoMode$async) r'setSubVideoMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setSubPhotoMode$async) r'setSubPhotoMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$ISetOptionsCallback;)V',
        if ($impl.setExpectOutputType$async) r'setExpectOutputType(I)V',
        if ($impl.setFocusSensor$async) r'setFocusSensor(I)V',
        if ($impl.beginOptionsTransaction$async) r'beginOptionsTransaction()V',
        if ($impl.commitOptionsTransaction$async) r'commitOptionsTransaction(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0o;)V',
        if ($impl.setTimelapseParams$async) r'setTimelapseParams(ILcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;)V',
        if ($impl.setExposureOptions$async) r'setExposureOptions(IIIDZ)V',
        if ($impl.setExposureEV$async) r'setExposureEV(II)V',
        if ($impl.setFocalLengthValue$async) r'setFocalLengthValue(ID)V',
        if ($impl.setVideoResolutionId$async) r'setVideoResolutionId(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
        if ($impl.setResRecLimit$async) r'setResRecLimit(ILjava/util/List;)V',
        if ($impl.setISOTopLimit$async) r'setISOTopLimit(II)V',
        if ($impl.setAEBCaptureNum$async) r'setAEBCaptureNum(II)V',
        if ($impl.setPhotoSize$async) r'setPhotoSize(II)V',
        if ($impl.setPhotoResolutionId$async) r'setPhotoResolutionId(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
        if ($impl.setWhiteBalanceId$async) r'setWhiteBalanceId(II)V',
        if ($impl.setWhiteBalanceValue$async) r'setWhiteBalanceValue(II)V',
        if ($impl.setSportModeEnable$async) r'setSportModeEnable(IZ)V',
        if ($impl.setSportModeLevel$async) r'setSportModeLevel(II)V',
        if ($impl.setGammaMode$async) r'setGammaMode(II)V',
        if ($impl.setRawType$async) r'setRawType(II)V',
        if ($impl.setPhotoSelfTimer$async) r'setPhotoSelfTimer(II)V',
        if ($impl.setAccelerateFrequency$async) r'setAccelerateFrequency(II)V',
        if ($impl.setRecordDurationS$async) r'setRecordDurationS(II)V',
        if ($impl.setFlicker$async) r'setFlicker(II)V',
        if ($impl.setFlowstateEnable$async) r'setFlowstateEnable(IZ)V',
        if ($impl.setUnDamageZoomEnable$async) r'setUnDamageZoomEnable(IZ)V',
        if ($impl.setFlowstateVideoEnable$async) r'setFlowstateVideoEnable(IZ)V',
        if ($impl.setDarkEisEnable$async) r'setDarkEisEnable(IZ)V',
        if ($impl.setMeteringEnable$async) r'setMeteringEnable(IZ)V',
        if ($impl.setVideoSelfieMode$async) r'setVideoSelfieMode(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
        if ($impl.getDarkEisStatus$async) r'getDarkEisStatus(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000oo;)V',
        if ($impl.setDarkEisEnableGlobal$async) r'setDarkEisEnableGlobal(Z)V',
        if ($impl.setMeteringEnableGlobal$async) r'setMeteringEnableGlobal(Z)V',
        if ($impl.setInternalSplicingEnable$async) r'setInternalSplicingEnable(Z)V',
        if ($impl.setFlowStateLevel$async) r'setFlowStateLevel(II)V',
        if ($impl.setFlowStateLevelByCv5$async) r'setFlowStateLevelByCv5(II)V',
        if ($impl.setHdrStatus$async) r'setHdrStatus(IZ)V',
        if ($impl.setSharpness$async) r'setSharpness(II)V',
        if ($impl.setStarLapseExportType$async) r'setStarLapseExportType(II)V',
        if ($impl.setPanoExposureMode$async) r'setPanoExposureMode(II)V',
        if ($impl.setFovType$async) r'setFovType(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o00;)V',
        if ($impl.setBurstCaptureNum$async) r'setBurstCaptureNum(II)V',
        if ($impl.setBurstCacheNum$async) r'setBurstCacheNum(II)V',
        if ($impl.setBurstCaptureTime$async) r'setBurstCaptureTime(II)V',
        if ($impl.setCacheCaptureEnable$async) r'setCacheCaptureEnable(IZ)V',
        if ($impl.setZoomScale$async) r'setZoomScale(ID)V',
        if ($impl.setMaxRecordTime$async) r'setMaxRecordTime(II)V',
        if ($impl.syncCameraSensorMode$async) r'syncCameraSensorMode(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000Ooo;)V',
        if ($impl.setCameraSensorMode$async) r'setCameraSensorMode(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO0O;)V',
        if ($impl.setCameraSingleSensorResolution$async) r'setCameraSingleSensorResolution(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
        if ($impl.setCameraSingleSensorFlowstate$async) r'setCameraSingleSensorFlowstate(IIZLcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
        if ($impl.setCameraSingleSensorDimensionType$async) r'setCameraSingleSensorDimensionType(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0O0;)V',
        if ($impl.setCameraSingleSensorVisionType$async) r'setCameraSingleSensorVisionType(III)V',
        if ($impl.fetchCameraSingleSensorOptions$async) r'fetchCameraSingleSensorOptions([ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
        if ($impl.openPreviewStream$async) r'openPreviewStream(Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;ILcom/arashivision/onecamera/render/RenderMode;ZIZLjava/lang/String;Z)V',
        if ($impl.closePreviewStream$async) r'closePreviewStream()V',
        if ($impl.setPipeline$async) r'setPipeline(Lcom/arashivision/onestream/pipeline/ICameraPreviewPipeline;)V',
        if ($impl.setPreviewImageNotify$async) r'setPreviewImageNotify(Lcom/arashivision/camera/stream/PreviewImageNotify;Landroid/os/Handler;)V',
        if ($impl.forcePutPreviewImage$async) r'forcePutPreviewImage([Lcom/arashivision/onestream/ImageData;)V',
        if ($impl.setStreamEncode$async) r'setStreamEncode(Z)V',
        if ($impl.requestStreamIframe$async) r'requestStreamIframe()V',
        if ($impl.startNormalCapture$async) r'startNormalCapture(I[BI)V',
        if ($impl.startCaptureWhileRecording$async) r'startCaptureWhileRecording(I[BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooO;)V',
        if ($impl.startNormalPanoCapture$async) r'startNormalPanoCapture(II[BI)V',
        if ($impl.startHDRCapture$async) r'startHDRCapture([II[BI)V',
        if ($impl.startHDRPanoCapture$async) r'startHDRPanoCapture(I[II[BI)V',
        if ($impl.startNightScene$async) r'startNightScene(I[BI)V',
        if ($impl.startIntervalShooting$async) r'startIntervalShooting([B)V',
        if ($impl.stopIntervalShooting$async) r'stopIntervalShooting()V',
        if ($impl.startStarLapseShooting$async) r'startStarLapseShooting([B)V',
        if ($impl.stopStarLapseShooting$async) r'stopStarLapseShooting()V',
        if ($impl.startBurstCapture$async) r'startBurstCapture(I[BI)V',
        if ($impl.startNormalRecord$async) r'startNormalRecord()V',
        if ($impl.stopNormalRecord$async) r'stopNormalRecord([B)V',
        if ($impl.startSuperRecord$async) r'startSuperRecord()V',
        if ($impl.stopSuperRecord$async) r'stopSuperRecord([B)V',
        if ($impl.startHDRRecord$async) r'startHDRRecord()V',
        if ($impl.stopHDRRecord$async) r'stopHDRRecord([B)V',
        if ($impl.startBulletTime$async) r'startBulletTime()V',
        if ($impl.stopBulletTime$async) r'stopBulletTime([B)V',
        if ($impl.startTimeShift$async) r'startTimeShift()V',
        if ($impl.stopTimeShift$async) r'stopTimeShift([B)V',
        if ($impl.startLooperRecording$async) r'startLooperRecording()V',
        if ($impl.stopLooperRecording$async) r'stopLooperRecording([B)V',
        if ($impl.startFpvRecord$async) r'startFpvRecord()V',
        if ($impl.stopFpvRecord$async) r'stopFpvRecord([B)V',
        if ($impl.startMovieRecord$async) r'startMovieRecord()V',
        if ($impl.stopMovieRecord$async) r'stopMovieRecord([B)V',
        if ($impl.startSlowMotionRecord$async) r'startSlowMotionRecord()V',
        if ($impl.stopSlowMotionRecord$async) r'stopSlowMotionRecord([B)V',
        if ($impl.startSelfieRecord$async) r'startSelfieRecord()V',
        if ($impl.stopSelfieRecord$async) r'stopSelfieRecord([B)V',
        if ($impl.startPureRecord$async) r'startPureRecord()V',
        if ($impl.stopPureRecord$async) r'stopPureRecord([B)V',
        if ($impl.startIntervalRecord$async) r'startIntervalRecord([B)V',
        if ($impl.stopIntervalRecord$async) r'stopIntervalRecord()V',
        if ($impl.startTimelapse$async) r'startTimelapse()V',
        if ($impl.stopTimelapse$async) r'stopTimelapse([B)V',
        if ($impl.startStaticTimelapse$async) r'startStaticTimelapse()V',
        if ($impl.stopStaticTimelapse$async) r'stopStaticTimelapse([B)V',
        if ($impl.pauseRecord$async) r'pauseRecord()V',
        if ($impl.startLive$async) r'startLive(IIIILjava/lang/String;IJZZ)V',
        if ($impl.stopLive$async) r'stopLive()V',
        if ($impl.resetRecord$async) r'resetRecord()V',
        if ($impl.fetchAllOptions$async) r'fetchAllOptions(Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
        if ($impl.fetchOptions$async) r'fetchOptions(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
        if ($impl.fetchPhotoOptions$async) r'fetchPhotoOptions(ILjava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$IFetchOptionsListener;)V',
        if ($impl.fetchStorageState$async) r'fetchStorageState()V',
        if ($impl.fetchBatteryState$async) r'fetchBatteryState()V',
        if ($impl.formatStorage$async) r'formatStorage(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O;)V',
        if ($impl.setAccessCameraFileState$async) r'setAccessCameraFileState(I)V',
        if ($impl.getCameraFile$async) r'getCameraFile(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
        if ($impl.packLogFile$async) r'packLogFile(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o00000OO;)V',
        if ($impl.setLogFileTransferState$async) r'setLogFileTransferState(IILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo0;)V',
        if ($impl.deleteLogFile$async) r'deleteLogFile(I)V',
        if ($impl.getFileList$async) r'getFileList(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
        if ($impl.getFileListIncludeRecording$async) r'getFileListIncludeRecording(IIILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO;)V',
        if ($impl.getFileInfoList$async) r'getFileInfoList(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0O;)V',
        if ($impl.deleteFileList$async) r'deleteFileList(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO0;Ljava/util/List;)V',
        if ($impl.calibrateGyro$async) r'calibrateGyro(Lcom/arashivision/insta360/basecamera/camera/ICameraController$ICalibrateGyroCallback;)V',
        if ($impl.getFileGps$async) r'getFileGps(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileThumbnail$async) r'getFileThumbnail(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileThumbnailExt$async) r'getFileThumbnailExt(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileExposureTimeData$async) r'getFileExposureTimeData(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileGyroData$async) r'getFileGyroData(Ljava/lang/String;JJLcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileTimelapseTimestamp$async) r'getFileTimelapseTimestamp(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileExtraMetaData$async) r'getFileExtraMetaData(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.setFileExtraMetaData$async) r'setFileExtraMetaData(Ljava/lang/String;[BLcom/arashivision/insta360/basecamera/camera/ICameraController$o000OO00;)V',
        if ($impl.getFileExtraHighlight$async) r'getFileExtraHighlight(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.getFileExtraAutoEditor$async) r'getFileExtraAutoEditor(Ljava/lang/String;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0000O0;)V',
        if ($impl.cancelAuthorization$async) r'cancelAuthorization(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
        if ($impl.requestAuthorization$async) r'requestAuthorization(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0;)V',
        if ($impl.cancelRequestAuthorization$async) r'cancelRequestAuthorization(ILcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0o;)V',
        if ($impl.setGpsData$async) r'setGpsData([B)V',
        if ($impl.setKeyTimePoint$async) r'setKeyTimePoint(JILjava/lang/String;)V',
        if ($impl.setBleRemoteControllerListener$async) r'setBleRemoteControllerListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooO0OO;)V',
        if ($impl.scanBleRemoteController$async) r'scanBleRemoteController()V',
        if ($impl.connectBleRemoteControl$async) r'connectBleRemoteControl(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
        if ($impl.disconnectBle$async) r'disconnectBle(Lcom/arashivision/onecamera/cameranotification/BTPeripheral;)V',
        if ($impl.setBleRemoteVersion$async) r'setBleRemoteVersion(Ljava/lang/String;)V',
        if ($impl.openCameraWifi$async) r'openCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00O;)V',
        if ($impl.closeCameraWifi$async) r'closeCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOO0O;)V',
        if ($impl.resetCameraWifi$async) r'resetCameraWifi(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O0Oo;)V',
        if ($impl.notifyOTAError$async) r'notifyOTAError(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000O00;)V',
        if ($impl.setCameraWifiSeizable$async) r'setCameraWifiSeizable(ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000O;)V',
        if ($impl.uploadScriptJson$async) r'uploadScriptJson([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
        if ($impl.uploadScriptCmd$async) r'uploadScriptCmd([BLcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
        if ($impl.refreshScript$async) r'refreshScript(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
        if ($impl.runScript$async) r'runScript(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOOO;)V',
        if ($impl.addFmgButtonClickListener$async) r'addFmgButtonClickListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
        if ($impl.removeFmgButtonClickListener$async) r'removeFmgButtonClickListener(Lcom/arashivision/insta360/basecamera/camera/ICameraController$OooOo00;)V',
        if ($impl.startFmgUpgrade$async) r'startFmgUpgrade([BLcom/arashivision/insta360/basecamera/camera/ICameraController$o00000O0;)V',
        if ($impl.cancelFmgUpgrade$async) r'cancelFmgUpgrade()V',
        if ($impl.setFmgMode$async) r'setFmgMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzMode;)V',
        if ($impl.setFmgFollowSpeed$async) r'setFmgFollowSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzFollowSpeed;)V',
        if ($impl.setFmgButtonEnabled$async) r'setFmgButtonEnabled(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
        if ($impl.setFmgButtonDisabled$async) r'setFmgButtonDisabled(Lcom/arashivision/fmg/response/model/FmgButtonAbleParams;)V',
        if ($impl.setFmgRcSpeed$async) r'setFmgRcSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcSpeed;)V',
        if ($impl.setFmgZoomSpeed$async) r'setFmgZoomSpeed(Lcom/arashivision/fmg/response/model/FmgModel$PtzZoomSpeed;)V',
        if ($impl.setFmgHorizontalDir$async) r'setFmgHorizontalDir(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcHorizontalDir;)V',
        if ($impl.setFmgVerticalDir$async) r'setFmgVerticalDir(Lcom/arashivision/fmg/response/model/FmgModel$PtzRcVerticalDir;)V',
        if ($impl.setFmgSwitchModeWay$async) r'setFmgSwitchModeWay(Lcom/arashivision/fmg/response/model/FmgModel$PtzSwitchModeWay;)V',
        if ($impl.setFmgSoundEnable$async) r'setFmgSoundEnable(Lcom/arashivision/fmg/response/model/FmgModel$PtzSoundMode;)V',
        if ($impl.setFmgHvMode$async) r'setFmgHvMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzHvMode;)V',
        if ($impl.setFmgVerticalTrimDegree$async) r'setFmgVerticalTrimDegree(F)V',
        if ($impl.startOrUpdateFmgTargetFollow$async) r'startOrUpdateFmgTargetFollow(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
        if ($impl.lostFmgTargetFollow$async) r'lostFmgTargetFollow()V',
        if ($impl.exitFmgTargetFollow$async) r'exitFmgTargetFollow()V',
        if ($impl.speculateFmgTargetFollow$async) r'speculateFmgTargetFollow(Lcom/arashivision/fmg/response/model/FmgTargetFollowParams;)V',
        if ($impl.setFmgZoomScale$async) r'setFmgZoomScale(S)V',
        if ($impl.getFmgAngle$async) r'getFmgAngle(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo0;)V',
        if ($impl.getFmgSpeed$async) r'getFmgSpeed(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00O0O;)V',
        if ($impl.setFmgAngle$async) r'setFmgAngle(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0ooOOo;)V',
        if ($impl.setFmgSpeed$async) r'setFmgSpeed(FFFLcom/arashivision/insta360/basecamera/camera/ICameraController$o0O0O00;)V',
        if ($impl.setFmgIdle$async) r'setFmgIdle(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0Oo0oo;)V',
        if ($impl.setFmgTimeElapse$async) r'setFmgTimeElapse(Lcom/arashivision/fmg/response/model/FmgModel$PtzTemMode;Lcom/arashivision/fmg/response/model/FmgModel$PtzTemState;ILcom/arashivision/insta360/basecamera/camera/ICameraController$o000OOo;)V',
        if ($impl.setFmgPano$async) r'setFmgPano(Lcom/arashivision/fmg/response/model/FmgModel$PtzPanoMode;)V',
        if ($impl.resetFmgDefaultSettings$async) r'resetFmgDefaultSettings(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OO00O;)V',
        if ($impl.getFmgTrackSensitivityMode$async) r'getFmgTrackSensitivityMode(Lcom/arashivision/insta360/basecamera/camera/ICameraController$o00Oo0;)V',
        if ($impl.setFmgTrackSensitivityMode$async) r'setFmgTrackSensitivityMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzTrackSensitivityMode;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o000000;)V',
        if ($impl.startFmgRecMode$async) r'startFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
        if ($impl.stopFmgRecMode$async) r'stopFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
        if ($impl.initFmgRecMode$async) r'initFmgRecMode(Lcom/arashivision/fmg/response/model/FmgModel$PtzRecMode;)V',
        if ($impl.fmgVibration$async) r'fmgVibration()V',
        if ($impl.enableFmgHandDrag$async) r'enableFmgHandDrag(Ljava/util/ArrayList;)V',
        if ($impl.disableFmgHandDrag$async) r'disableFmgHandDrag(Ljava/util/ArrayList;)V',
        if ($impl.setFmgCameraFacing$async) r'setFmgCameraFacing(Z)V',
        if ($impl.updateFmgPhoneImu$async) r'updateFmgPhoneImu([F)V',
        if ($impl.getFmgAnalyticsData$async) r'getFmgAnalyticsData(Lcom/arashivision/insta360/basecamera/camera/ICameraController$Oooo000;)V',
        if ($impl.setFmgAngleSeq$async) r'setFmgAngleSeq(Ljava/util/List;Lcom/arashivision/insta360/basecamera/camera/ICameraController$o0OOO0o;)V',
        if ($impl.clearFmgAnalyticsData$async) r'clearFmgAnalyticsData()V',
        if ($impl.startFmgHeartBeat$async) r'startFmgHeartBeat()V',
        if ($impl.stopFmgHeartBeat$async) r'stopFmgHeartBeat()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraController.implement(
    $ICameraController $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraController.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraController {
  factory $ICameraController(
    {required void Function() init, bool init$async,
    required void Function() destroy, bool destroy$async,
    required void Function(_$jni.JObject instaCamera) setInstaCamera, bool setInstaCamera$async,
    required void Function(BaseCamera baseCamera) setBaseCamera, bool setBaseCamera$async,
    required void Function(IBaseCameraChangedCallback iBaseCameraChangedCallback) setBaseCameraChangedCallback, bool setBaseCameraChangedCallback$async,
    required void Function(ICameraController_o00oOoo o00oOoo) setSyncStatusChangeListener, bool setSyncStatusChangeListener$async,
    required void Function(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener) setCaptureStatusChangeListener, bool setCaptureStatusChangeListener$async,
    required void Function(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener) setPreviewStatusChangedListener, bool setPreviewStatusChangedListener$async,
    required void Function(_$jni.JObject oooO00o) setDeveloperConfigProvider, bool setDeveloperConfigProvider$async,
    required void Function(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener) setCameraLiveListener, bool setCameraLiveListener$async,
    required void Function(int i, int i1, _$jni.JObject object) onCameraInfoNotify, bool onCameraInfoNotify$async,
    required _$jni.JString Function() getCameraHost,
    required int Function() getPort,
    required _$jni.JString Function() getFirmwareUploadPath,
    required _$jni.JString Function() getCameraFileUploadPath,
    required bool Function() supportUploadFileToCamera,
    required int Function() getVersionValidLength,
    required void Function(bool z) setAssistiveGridEnable, bool setAssistiveGridEnable$async,
    required bool Function() getAssistiveGridEnable,
    required void Function(bool z) setFreeFrameGridEnable, bool setFreeFrameGridEnable$async,
    required bool Function() getFreeFrameGridEnable,
    required void Function() freeze, bool freeze$async,
    required void Function() unfreeze, bool unfreeze$async,
    required bool Function() isFrozen,
    required void Function(BaseCamera_CameraSyncStatus cameraSyncStatus) changeCameraSyncStatus, bool changeCameraSyncStatus$async,
    required BaseCamera_CameraSyncStatus Function() getCurCameraSyncStatus,
    required BaseCamera_CameraSyncStatus Function() getLastCameraSyncStatus,
    required bool Function() isCameraBusy,
    required void Function(BaseCamera_ConnectType connectType) setConnectType, bool setConnectType$async,
    required bool Function() onlySupportBleConnect,
    required bool Function() isCaptureByUser,
    required void Function(ICameraController_OooOOOO oooOOOO) fetchCameraType, bool fetchCameraType$async,
    required void Function() startSync, bool startSync$async,
    required void Function(ICameraController_OooO00o oooO00o) setAuthorizationChecker, bool setAuthorizationChecker$async,
    required void Function(_$jni.JList<ICameraCheck> list) setCheckActivationList, bool setCheckActivationList$async,
    required void Function() continueCameraCheck, bool continueCameraCheck$async,
    required _$jni.JString Function() getSerial,
    required void Function(_$jni.JString string) setSerial, bool setSerial$async,
    required _$jni.JString Function() getUUID,
    required _$jni.JString Function() getVR360Senor0Serial,
    required _$jni.JString Function() getVR360Senor1Serial,
    required _$jni.JString Function() getVR180SenorSerial,
    required _$jni.JArray<_$jni.JString> Function() getSensorSerials,
    required _$jni.JString Function() getCameraType,
    required _$jni.JString Function() getCameraName,
    required _$jni.JString Function() getFWVersion,
    required _$jni.JString Function() getCameraFwVersion,
    required _$jni.JString Function() getCameraBleVersion,
    required _$jni.JString Function() getChargeBoxFwVersion,
    required _$jni.JString Function() getChargeBoxBleVersion,
    required void Function(_$jni.JString string) setMediaOffset, bool setMediaOffset$async,
    required _$jni.JString Function() getMediaOffset,
    required _$jni.JString Function() getMediaOffsetV2,
    required _$jni.JString Function() getMediaOffsetV3,
    required void Function(_$jni.JString string) setOriginalOffset, bool setOriginalOffset$async,
    required _$jni.JString Function() getOriginalOffset,
    required _$jni.JString Function() getOriginalOffsetV2,
    required _$jni.JString Function() getOriginalOffsetV3,
    required void Function(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5) setAllOffset, bool setAllOffset$async,
    required int Function() getOffsetState,
    required int Function() getActiveTime,
    required void Function(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback) setActiveTime, bool setActiveTime$async,
    required int Function() getBatteryLevel,
    required bool Function() isCharging,
    required bool Function() isHighTemperature,
    required bool Function() isLowTemperature,
    required int Function() getBatteryType,
    required bool Function() isChargeBoxConnected,
    required int Function() getChargeBoxUsbConnectedState,
    required bool Function() isChargeBoxConnectedWhenCaptureStart,
    required int Function() getChargeBoxBatteryLevel,
    required bool Function() isChargeBoxCharging,
    required int Function() getStorageCardState,
    required int Function() getStorageCardLocation,
    required int Function() getStorageTotalSpace,
    required int Function() getStorageFreeSpace,
    required int Function() getVideoEncodeType,
    required void Function(int i) setVideoEncodeType, bool setVideoEncodeType$async,
    required bool Function() isSelfie,
    required int Function() getCameraPosture,
    required int Function() getCameraPostureWhenCaptureStart,
    required int Function() getBtWakeupSwState,
    required void Function(int i) setBtWakeupSwState, bool setBtWakeupSwState$async,
    required double Function() getGyroTimeStamp,
    required _$jni.JObject Function() getWindowCropInfo,
    required int Function() getImageFlicker,
    required void Function(int i) setImageFlicker, bool setImageFlicker$async,
    required void Function(int i, ICameraController_o00O0000 o00O0000) setStandByMode, bool setStandByMode$async,
    required bool Function() getQuickCaptureEnable,
    required void Function(bool z) setQuickCaptureEnable, bool setQuickCaptureEnable$async,
    required int Function() getBtnShutdownClickMode,
    required void Function(int i) setBtnShutdownClickMode, bool setBtnShutdownClickMode$async,
    required int Function() getBtnShutdownDoubleClickMode,
    required void Function(int i) setBtnShutdownDoubleClickMode, bool setBtnShutdownDoubleClickMode$async,
    required int Function() getBtnShutdownTripleClickMode,
    required void Function(int i) setBtnShutdownTripleClickMode, bool setBtnShutdownTripleClickMode$async,
    required int Function() getBtnShutdownLongPressMode,
    required void Function(int i) setBtnShutdownLongPressMode, bool setBtnShutdownLongPressMode$async,
    required int Function() getBtnClickMode,
    required void Function(int i) setBtnClickMode, bool setBtnClickMode$async,
    required int Function() getBtnDoubleClickMode,
    required void Function(int i) setBtnDoubleClickMode, bool setBtnDoubleClickMode$async,
    required int Function() getBtnTripleClickMode,
    required void Function(int i) setBtnTripleClickMode, bool setBtnTripleClickMode$async,
    required int Function() getBtnLongPressMode,
    required void Function(int i) setBtnLongPressMode, bool setBtnLongPressMode$async,
    required bool Function() isMute,
    required void Function(bool z) setMute, bool setMute$async,
    required _$jni.JObject Function() getWifiInfo,
    required void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) setWifiPwd, bool setWifiPwd$async,
    required _$jni.JObject Function() getButtonFollowOptions,
    required void Function(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback) setButtonFollowOptions, bool setButtonFollowOptions$async,
    required _$jni.JString Function() getWifiChannelCountry,
    required void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) setWifiChannelCountry, bool setWifiChannelCountry$async,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions) setCameraLanguage, bool setCameraLanguage$async,
    required int Function() getCameraLanguage,
    required VideoResolution Function() getVideoResolution,
    required void Function(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback) setVideoResolution, bool setVideoResolution$async,
    required int Function() getVideoBitrate,
    required int Function() getSubVideoMode,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) setSubVideoMode, bool setSubVideoMode$async,
    required int Function() getSubPhotoMode,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) setSubPhotoMode, bool setSubPhotoMode$async,
    required int Function() getExpectOutputType,
    required void Function(int i) setExpectOutputType, bool setExpectOutputType$async,
    required int Function() getFocusSensor,
    required void Function(int i) setFocusSensor, bool setFocusSensor$async,
    required int Function() getSensorType,
    required void Function() beginOptionsTransaction, bool beginOptionsTransaction$async,
    required void Function(ICameraController_o000O0o o000O0o) commitOptionsTransaction, bool commitOptionsTransaction$async,
    required TimelapseParams Function(int i) getTimelapseParams,
    required void Function(int i, TimelapseParams timelapseParams) setTimelapseParams, bool setTimelapseParams$async,
    required int Function(int i, bool z) getExposureMode,
    required int Function(int i, bool z) getISO,
    required double Function(int i, bool z) getShutter,
    required void Function(int i, int i1, int i2, double d, bool z) setExposureOptions, bool setExposureOptions$async,
    required int Function(int i) getExposureEV,
    required void Function(int i, int i1) setExposureEV, bool setExposureEV$async,
    required double Function(int i) getFocalLengthValue,
    required void Function(int i, double d) setFocalLengthValue, bool setFocalLengthValue$async,
    required int Function(int i) getVideoResolutionId,
    required void Function(int i, int i1, ICameraController_o00 o00) setVideoResolutionId, bool setVideoResolutionId$async,
    required _$jni.JList<_$jni.JObject> Function(int i) getResRecLimit,
    required void Function(int i, _$jni.JList<_$jni.JObject> list) setResRecLimit, bool setResRecLimit$async,
    required int Function(int i) getRemainingTime,
    required int Function(int i) getISOTopLimit,
    required void Function(int i, int i1) setISOTopLimit, bool setISOTopLimit$async,
    required int Function(int i) getAEBCaptureNum,
    required void Function(int i, int i1) setAEBCaptureNum, bool setAEBCaptureNum$async,
    required int Function(int i) getPhotoSize,
    required void Function(int i, int i1) setPhotoSize, bool setPhotoSize$async,
    required int Function(int i) getPhotoResolutionId,
    required void Function(int i, int i1, ICameraController_o00 o00) setPhotoResolutionId, bool setPhotoResolutionId$async,
    required int Function(int i) getWhiteBalanceId,
    required void Function(int i, int i1) setWhiteBalanceId, bool setWhiteBalanceId$async,
    required int Function(int i) getWhiteBalanceValue,
    required void Function(int i, int i1) setWhiteBalanceValue, bool setWhiteBalanceValue$async,
    required bool Function(int i) getSportModeEnable,
    required void Function(int i, bool z) setSportModeEnable, bool setSportModeEnable$async,
    required int Function(int i) getSportModeLevel,
    required void Function(int i, int i1) setSportModeLevel, bool setSportModeLevel$async,
    required int Function(int i) getGammaMode,
    required void Function(int i, int i1) setGammaMode, bool setGammaMode$async,
    required int Function(int i) getRawType,
    required void Function(int i, int i1) setRawType, bool setRawType$async,
    required int Function(int i) getPhotoSelfTimer,
    required void Function(int i, int i1) setPhotoSelfTimer, bool setPhotoSelfTimer$async,
    required int Function(int i) getAccelerateFrequency,
    required void Function(int i, int i1) setAccelerateFrequency, bool setAccelerateFrequency$async,
    required int Function(int i) getRecordDurationS,
    required void Function(int i, int i1) setRecordDurationS, bool setRecordDurationS$async,
    required int Function(int i) getFlicker,
    required void Function(int i, int i1) setFlicker, bool setFlicker$async,
    required bool Function(int i) getFlowstateEnable,
    required void Function(int i, bool z) setFlowstateEnable, bool setFlowstateEnable$async,
    required bool Function(int i) getUnDamageZoomEnable,
    required void Function(int i, bool z) setUnDamageZoomEnable, bool setUnDamageZoomEnable$async,
    required bool Function(int i) getFlowstateVideoEnable,
    required void Function(int i, bool z) setFlowstateVideoEnable, bool setFlowstateVideoEnable$async,
    required bool Function(int i) getDarkEisEnable,
    required void Function(int i, bool z) setDarkEisEnable, bool setDarkEisEnable$async,
    required bool Function(int i) getMeteringEnable,
    required void Function(int i, bool z) setMeteringEnable, bool setMeteringEnable$async,
    required int Function(int i) getVideoSelfieMode,
    required void Function(int i, int i1, ICameraController_o00 o00) setVideoSelfieMode, bool setVideoSelfieMode$async,
    required void Function(ICameraController_o0000oo o0000oo) getDarkEisStatus, bool getDarkEisStatus$async,
    required bool Function() getDarkEisEnableGlobal,
    required void Function(bool z) setDarkEisEnableGlobal, bool setDarkEisEnableGlobal$async,
    required bool Function() getMeteringEnableGlobal,
    required void Function(bool z) setMeteringEnableGlobal, bool setMeteringEnableGlobal$async,
    required bool Function() getInternalSplicingEnable,
    required void Function(bool z) setInternalSplicingEnable, bool setInternalSplicingEnable$async,
    required int Function(int i) getVideoBitrate$1,
    required int Function(int i) getFlowStateLevel,
    required void Function(int i, int i1) setFlowStateLevel, bool setFlowStateLevel$async,
    required int Function(int i) getFlowStateLevelByCv5,
    required void Function(int i, int i1) setFlowStateLevelByCv5, bool setFlowStateLevelByCv5$async,
    required bool Function(int i) getHdrStatus,
    required void Function(int i, bool z) setHdrStatus, bool setHdrStatus$async,
    required int Function(int i) getSharpness,
    required void Function(int i, int i1) setSharpness, bool setSharpness$async,
    required int Function(int i) getStarLapseExportType,
    required void Function(int i, int i1) setStarLapseExportType, bool setStarLapseExportType$async,
    required int Function(int i) getPanoExposureMode,
    required void Function(int i, int i1) setPanoExposureMode, bool setPanoExposureMode$async,
    required int Function(int i) getFovType,
    required void Function(int i, int i1, ICameraController_o00 o00) setFovType, bool setFovType$async,
    required int Function(int i) getBurstCaptureNum,
    required void Function(int i, int i1) setBurstCaptureNum, bool setBurstCaptureNum$async,
    required int Function(int i) getBurstCacheNum,
    required void Function(int i, int i1) setBurstCacheNum, bool setBurstCacheNum$async,
    required int Function(int i) getBurstCaptureTime,
    required void Function(int i, int i1) setBurstCaptureTime, bool setBurstCaptureTime$async,
    required bool Function(int i) getCacheCaptureEnable,
    required void Function(int i, bool z) setCacheCaptureEnable, bool setCacheCaptureEnable$async,
    required double Function(int i) getZoomScale,
    required void Function(int i, double d) setZoomScale, bool setZoomScale$async,
    required int Function(int i) getMaxRecordTime,
    required void Function(int i, int i1) setMaxRecordTime, bool setMaxRecordTime$async,
    required void Function(ICameraController_o0000Ooo o0000Ooo) syncCameraSensorMode, bool syncCameraSensorMode$async,
    required int Function() getCameraSensorMode,
    required void Function(int i, ICameraController_o000OO0O o000OO0O) setCameraSensorMode, bool setCameraSensorMode$async,
    required bool Function() supportSwitchCameraSensorMode,
    required bool Function() isCameraSingleSensorMode,
    required bool Function() isCameraPowerPanoMode,
    required int Function(int i) getCameraSingleSensorResolutionId,
    required void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorResolution, bool setCameraSingleSensorResolution$async,
    required bool Function(int i) getCameraSingleSensorFlowstateEnable,
    required void Function(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorFlowstate, bool setCameraSingleSensorFlowstate$async,
    required int Function(int i) getCameraSingleSensorDimensionType,
    required void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorDimensionType, bool setCameraSingleSensorDimensionType$async,
    required int Function(int i) getCameraSingleSensorVisionType,
    required void Function(int i, int i1, int i2) setCameraSingleSensorVisionType, bool setCameraSingleSensorVisionType$async,
    required void Function(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchCameraSingleSensorOptions, bool fetchCameraSingleSensorOptions$async,
    required void Function(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2) openPreviewStream, bool openPreviewStream$async,
    required void Function() closePreviewStream, bool closePreviewStream$async,
    required void Function(_$jni.JObject iCameraPreviewPipeline) setPipeline, bool setPipeline$async,
    required void Function(_$jni.JObject previewImageNotify, _$jni.JObject handler) setPreviewImageNotify, bool setPreviewImageNotify$async,
    required void Function(_$jni.JArray<_$jni.JObject> imageDatas) forcePutPreviewImage, bool forcePutPreviewImage$async,
    required bool Function() isStreamProcessing,
    required bool Function() isH265StreamEncode,
    required void Function(bool z) setStreamEncode, bool setStreamEncode$async,
    required void Function() requestStreamIframe, bool requestStreamIframe$async,
    required BaseCamera_PreviewStatus Function() getPreviewStats,
    required StreamResolution Function() getCurFirstStreamResolution,
    required StreamResolution Function() getCurSecondStreamResolution,
    required VideoResolution Function() getCurRealCameraStreamResolution,
    required StreamResolution Function() getSecondStreamResolution,
    required int Function() getAudioCodec,
    required int Function() getPreviewNum,
    required _$jni.JObject Function() getRenderMode,
    required bool Function() isCameraWorking,
    required bool Function() isCameraRecordOnPause,
    required BaseCamera_CaptureType Function() getCaptureType,
    required BaseCamera_CaptureStatus Function() getCaptureStatus,
    required BaseCamera_CaptureSubStatus Function() getCaptureSubStatus,
    required int Function() getCaptureTime,
    required int Function() getCaptureCount,
    required _$jni.JString Function() getCaptureKeyTimePointDetail,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startNormalCapture, bool startNormalCapture$async,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO) startCaptureWhileRecording, bool startCaptureWhileRecording$async,
    required bool Function() isNormalCapturing,
    required void Function(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) startNormalPanoCapture, bool startNormalPanoCapture$async,
    required bool Function() isNormalPanoCapturing,
    required void Function(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startHDRCapture, bool startHDRCapture$async,
    required bool Function() isHDRCapturing,
    required void Function(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) startHDRPanoCapture, bool startHDRPanoCapture$async,
    required bool Function() isHDRPanoCapturing,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startNightScene, bool startNightScene$async,
    required bool Function() isNightSceneCapturing,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startIntervalShooting, bool startIntervalShooting$async,
    required void Function() stopIntervalShooting, bool stopIntervalShooting$async,
    required bool Function() isIntervalShooting,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startStarLapseShooting, bool startStarLapseShooting$async,
    required void Function() stopStarLapseShooting, bool stopStarLapseShooting$async,
    required bool Function() isStarLapseShooting,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startBurstCapture, bool startBurstCapture$async,
    required bool Function() isBurstCapturing,
    required void Function() startNormalRecord, bool startNormalRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopNormalRecord, bool stopNormalRecord$async,
    required bool Function() isNormalRecording,
    required void Function() startSuperRecord, bool startSuperRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSuperRecord, bool stopSuperRecord$async,
    required bool Function() isSuperRecording,
    required void Function() startHDRRecord, bool startHDRRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopHDRRecord, bool stopHDRRecord$async,
    required bool Function() isHDRRecording,
    required void Function() startBulletTime, bool startBulletTime$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopBulletTime, bool stopBulletTime$async,
    required bool Function() isBulletTimeRecording,
    required void Function() startTimeShift, bool startTimeShift$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopTimeShift, bool stopTimeShift$async,
    required bool Function() isTimeShiftRecording,
    required void Function() startLooperRecording, bool startLooperRecording$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopLooperRecording, bool stopLooperRecording$async,
    required bool Function() isLooperRecording,
    required void Function() startFpvRecord, bool startFpvRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopFpvRecord, bool stopFpvRecord$async,
    required bool Function() isFpvRecording,
    required void Function() startMovieRecord, bool startMovieRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopMovieRecord, bool stopMovieRecord$async,
    required bool Function() isMovieRecording,
    required void Function() startSlowMotionRecord, bool startSlowMotionRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSlowMotionRecord, bool stopSlowMotionRecord$async,
    required bool Function() isSlowMotionRecording,
    required void Function() startSelfieRecord, bool startSelfieRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSelfieRecord, bool stopSelfieRecord$async,
    required bool Function() isSelfieRecording,
    required void Function() startPureRecord, bool startPureRecord$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopPureRecord, bool stopPureRecord$async,
    required bool Function() isPureRecording,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startIntervalRecord, bool startIntervalRecord$async,
    required void Function() stopIntervalRecord, bool stopIntervalRecord$async,
    required bool Function() isIntervalRecording,
    required void Function() startTimelapse, bool startTimelapse$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopTimelapse, bool stopTimelapse$async,
    required bool Function() isTimelapseRecording,
    required void Function() startStaticTimelapse, bool startStaticTimelapse$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopStaticTimelapse, bool stopStaticTimelapse$async,
    required bool Function() isStaticTimelapseRecording,
    required void Function() pauseRecord, bool pauseRecord$async,
    required void Function(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1) startLive, bool startLive$async,
    required void Function() stopLive, bool stopLive$async,
    required void Function() resetRecord, bool resetRecord$async,
    required void Function(ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchAllOptions, bool fetchAllOptions$async,
    required void Function(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchOptions, bool fetchOptions$async,
    required void Function(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchPhotoOptions, bool fetchPhotoOptions$async,
    required void Function() fetchStorageState, bool fetchStorageState$async,
    required void Function() fetchBatteryState, bool fetchBatteryState$async,
    required void Function(ICameraController_o00000O o00000O) formatStorage, bool formatStorage$async,
    required void Function(int i) setAccessCameraFileState, bool setAccessCameraFileState$async,
    required void Function(int i, ICameraController_o00000OO o00000OO) getCameraFile, bool getCameraFile$async,
    required void Function(int i, ICameraController_o00000OO o00000OO) packLogFile, bool packLogFile$async,
    required void Function(int i, int i1, ICameraController_o000OOo0 o000OOo0) setLogFileTransferState, bool setLogFileTransferState$async,
    required void Function(int i) deleteLogFile, bool deleteLogFile$async,
    required void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) getFileList, bool getFileList$async,
    required void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) getFileListIncludeRecording, bool getFileListIncludeRecording$async,
    required void Function(ICameraController_o0000O0O o0000O0O) getFileInfoList, bool getFileInfoList$async,
    required void Function(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list) deleteFileList, bool deleteFileList$async,
    required void Function(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback) calibrateGyro, bool calibrateGyro$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileGps, bool getFileGps$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileThumbnail, bool getFileThumbnail$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileThumbnailExt, bool getFileThumbnailExt$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExposureTimeData, bool getFileExposureTimeData$async,
    required void Function(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0) getFileGyroData, bool getFileGyroData$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileTimelapseTimestamp, bool getFileTimelapseTimestamp$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraMetaData, bool getFileExtraMetaData$async,
    required void Function(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00) setFileExtraMetaData, bool setFileExtraMetaData$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraHighlight, bool getFileExtraHighlight$async,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraAutoEditor, bool getFileExtraAutoEditor$async,
    required void Function(ICameraController_OooO0o oooO0o) cancelAuthorization, bool cancelAuthorization$async,
    required void Function(int i, ICameraController_o000O0 o000O0) requestAuthorization, bool requestAuthorization$async,
    required void Function(int i, ICameraController_OooO0o oooO0o) cancelRequestAuthorization, bool cancelRequestAuthorization$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) setGpsData, bool setGpsData$async,
    required void Function(int j, int i, _$jni.JString string) setKeyTimePoint, bool setKeyTimePoint$async,
    required void Function(ICameraController_OooO0OO oooO0OO) setBleRemoteControllerListener, bool setBleRemoteControllerListener$async,
    required void Function() scanBleRemoteController, bool scanBleRemoteController$async,
    required void Function(_$jni.JObject bTPeripheral) connectBleRemoteControl, bool connectBleRemoteControl$async,
    required void Function(_$jni.JObject bTPeripheral) disconnectBle, bool disconnectBle$async,
    required _$jni.JString Function() getBleRemoteVersion,
    required void Function(_$jni.JString string) setBleRemoteVersion, bool setBleRemoteVersion$async,
    required int Function() getBleRemoteType,
    required void Function(ICameraController_o000O00O o000O00O) openCameraWifi, bool openCameraWifi$async,
    required void Function(ICameraController_OooOO0O oooOO0O) closeCameraWifi, bool closeCameraWifi$async,
    required void Function(ICameraController_o000O0Oo o000O0Oo) resetCameraWifi, bool resetCameraWifi$async,
    required void Function(ICameraController_o000O00 o000O00) notifyOTAError, bool notifyOTAError$async,
    required void Function(int i, ICameraController_o000O o000O) setCameraWifiSeizable, bool setCameraWifiSeizable$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) uploadScriptJson, bool uploadScriptJson$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) uploadScriptCmd, bool uploadScriptCmd$async,
    required void Function(ICameraController_OooOOO oooOOO) refreshScript, bool refreshScript$async,
    required void Function(ICameraController_OooOOO oooOOO) runScript, bool runScript$async,
    required void Function(ICameraController_OooOo00 oooOo00) addFmgButtonClickListener, bool addFmgButtonClickListener$async,
    required void Function(ICameraController_OooOo00 oooOo00) removeFmgButtonClickListener, bool removeFmgButtonClickListener$async,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0) startFmgUpgrade, bool startFmgUpgrade$async,
    required void Function() cancelFmgUpgrade, bool cancelFmgUpgrade$async,
    required _$jni.JObject Function() getFmgMode,
    required void Function(_$jni.JObject ptzMode) setFmgMode, bool setFmgMode$async,
    required bool Function() isFmgSportMode,
    required bool Function() isFmgImbalance,
    required _$jni.JObject Function() getFmgFollowSpeed,
    required void Function(_$jni.JObject ptzFollowSpeed) setFmgFollowSpeed, bool setFmgFollowSpeed$async,
    required _$jni.JObject Function() getFmgRcSpeed,
    required void Function(_$jni.JObject fmgButtonAbleParams) setFmgButtonEnabled, bool setFmgButtonEnabled$async,
    required void Function(_$jni.JObject fmgButtonAbleParams) setFmgButtonDisabled, bool setFmgButtonDisabled$async,
    required void Function(_$jni.JObject ptzRcSpeed) setFmgRcSpeed, bool setFmgRcSpeed$async,
    required _$jni.JObject Function() getFmgZoomSpeed,
    required void Function(_$jni.JObject ptzZoomSpeed) setFmgZoomSpeed, bool setFmgZoomSpeed$async,
    required _$jni.JObject Function() getFmgHorizontalDir,
    required void Function(_$jni.JObject ptzRcHorizontalDir) setFmgHorizontalDir, bool setFmgHorizontalDir$async,
    required _$jni.JObject Function() getFmgVerticalDir,
    required void Function(_$jni.JObject ptzRcVerticalDir) setFmgVerticalDir, bool setFmgVerticalDir$async,
    required _$jni.JObject Function() getFmgSoundEnable,
    required _$jni.JObject Function() getFmgSwitchModeWay,
    required void Function(_$jni.JObject ptzSwitchModeWay) setFmgSwitchModeWay, bool setFmgSwitchModeWay$async,
    required void Function(_$jni.JObject ptzSoundMode) setFmgSoundEnable, bool setFmgSoundEnable$async,
    required _$jni.JObject Function() getFmgHvMode,
    required void Function(_$jni.JObject ptzHvMode) setFmgHvMode, bool setFmgHvMode$async,
    required bool Function() isFmgLimitedYaw,
    required bool Function() isFmgLimitedPitch,
    required bool Function() isFmgSleep,
    required bool Function() isFmgStalled,
    required bool Function() isFmgPayload,
    required double Function() getFmgVerticalTrimDegree,
    required void Function(double f) setFmgVerticalTrimDegree, bool setFmgVerticalTrimDegree$async,
    required void Function(_$jni.JObject fmgTargetFollowParams) startOrUpdateFmgTargetFollow, bool startOrUpdateFmgTargetFollow$async,
    required void Function() lostFmgTargetFollow, bool lostFmgTargetFollow$async,
    required void Function() exitFmgTargetFollow, bool exitFmgTargetFollow$async,
    required void Function(_$jni.JObject fmgTargetFollowParams) speculateFmgTargetFollow, bool speculateFmgTargetFollow$async,
    required void Function(int s) setFmgZoomScale, bool setFmgZoomScale$async,
    required void Function(ICameraController_Oooo0 oooo0) getFmgAngle, bool getFmgAngle$async,
    required void Function(ICameraController_o00O0O o00O0O) getFmgSpeed, bool getFmgSpeed$async,
    required void Function(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo) setFmgAngle, bool setFmgAngle$async,
    required void Function(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00) setFmgSpeed, bool setFmgSpeed$async,
    required void Function(ICameraController_o0Oo0oo o0Oo0oo) setFmgIdle, bool setFmgIdle$async,
    required void Function(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo) setFmgTimeElapse, bool setFmgTimeElapse$async,
    required void Function(_$jni.JObject ptzPanoMode) setFmgPano, bool setFmgPano$async,
    required void Function(ICameraController_o0OO00O o0OO00O) resetFmgDefaultSettings, bool resetFmgDefaultSettings$async,
    required void Function(ICameraController_o00Oo0 o00Oo0) getFmgTrackSensitivityMode, bool getFmgTrackSensitivityMode$async,
    required void Function(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000) setFmgTrackSensitivityMode, bool setFmgTrackSensitivityMode$async,
    required void Function(_$jni.JObject ptzRecMode) startFmgRecMode, bool startFmgRecMode$async,
    required void Function(_$jni.JObject ptzRecMode) stopFmgRecMode, bool stopFmgRecMode$async,
    required void Function(_$jni.JObject ptzRecMode) initFmgRecMode, bool initFmgRecMode$async,
    required void Function() fmgVibration, bool fmgVibration$async,
    required void Function(_$jni.JObject arrayList) enableFmgHandDrag, bool enableFmgHandDrag$async,
    required void Function(_$jni.JObject arrayList) disableFmgHandDrag, bool disableFmgHandDrag$async,
    required void Function(bool z) setFmgCameraFacing, bool setFmgCameraFacing$async,
    required void Function(_$jni.JArray<_$jni.jfloat> fs) updateFmgPhoneImu, bool updateFmgPhoneImu$async,
    required void Function(ICameraController_Oooo000 oooo000) getFmgAnalyticsData, bool getFmgAnalyticsData$async,
    required void Function(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o) setFmgAngleSeq, bool setFmgAngleSeq$async,
    required void Function() clearFmgAnalyticsData, bool clearFmgAnalyticsData$async,
    required void Function() startFmgHeartBeat, bool startFmgHeartBeat$async,
    required void Function() stopFmgHeartBeat, bool stopFmgHeartBeat$async,}
  ) = _$ICameraController;

  

  void init();
  bool get init$async => false;
  void destroy();
  bool get destroy$async => false;
  void setInstaCamera(_$jni.JObject instaCamera);
  bool get setInstaCamera$async => false;
  void setBaseCamera(BaseCamera baseCamera);
  bool get setBaseCamera$async => false;
  void setBaseCameraChangedCallback(IBaseCameraChangedCallback iBaseCameraChangedCallback);
  bool get setBaseCameraChangedCallback$async => false;
  void setSyncStatusChangeListener(ICameraController_o00oOoo o00oOoo);
  bool get setSyncStatusChangeListener$async => false;
  void setCaptureStatusChangeListener(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener);
  bool get setCaptureStatusChangeListener$async => false;
  void setPreviewStatusChangedListener(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener);
  bool get setPreviewStatusChangedListener$async => false;
  void setDeveloperConfigProvider(_$jni.JObject oooO00o);
  bool get setDeveloperConfigProvider$async => false;
  void setCameraLiveListener(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener);
  bool get setCameraLiveListener$async => false;
  void onCameraInfoNotify(int i, int i1, _$jni.JObject object);
  bool get onCameraInfoNotify$async => false;
  _$jni.JString getCameraHost();
  int getPort();
  _$jni.JString getFirmwareUploadPath();
  _$jni.JString getCameraFileUploadPath();
  bool supportUploadFileToCamera();
  int getVersionValidLength();
  void setAssistiveGridEnable(bool z);
  bool get setAssistiveGridEnable$async => false;
  bool getAssistiveGridEnable();
  void setFreeFrameGridEnable(bool z);
  bool get setFreeFrameGridEnable$async => false;
  bool getFreeFrameGridEnable();
  void freeze();
  bool get freeze$async => false;
  void unfreeze();
  bool get unfreeze$async => false;
  bool isFrozen();
  void changeCameraSyncStatus(BaseCamera_CameraSyncStatus cameraSyncStatus);
  bool get changeCameraSyncStatus$async => false;
  BaseCamera_CameraSyncStatus getCurCameraSyncStatus();
  BaseCamera_CameraSyncStatus getLastCameraSyncStatus();
  bool isCameraBusy();
  void setConnectType(BaseCamera_ConnectType connectType);
  bool get setConnectType$async => false;
  bool onlySupportBleConnect();
  bool isCaptureByUser();
  void fetchCameraType(ICameraController_OooOOOO oooOOOO);
  bool get fetchCameraType$async => false;
  void startSync();
  bool get startSync$async => false;
  void setAuthorizationChecker(ICameraController_OooO00o oooO00o);
  bool get setAuthorizationChecker$async => false;
  void setCheckActivationList(_$jni.JList<ICameraCheck> list);
  bool get setCheckActivationList$async => false;
  void continueCameraCheck();
  bool get continueCameraCheck$async => false;
  _$jni.JString getSerial();
  void setSerial(_$jni.JString string);
  bool get setSerial$async => false;
  _$jni.JString getUUID();
  _$jni.JString getVR360Senor0Serial();
  _$jni.JString getVR360Senor1Serial();
  _$jni.JString getVR180SenorSerial();
  _$jni.JArray<_$jni.JString> getSensorSerials();
  _$jni.JString getCameraType();
  _$jni.JString getCameraName();
  _$jni.JString getFWVersion();
  _$jni.JString getCameraFwVersion();
  _$jni.JString getCameraBleVersion();
  _$jni.JString getChargeBoxFwVersion();
  _$jni.JString getChargeBoxBleVersion();
  void setMediaOffset(_$jni.JString string);
  bool get setMediaOffset$async => false;
  _$jni.JString getMediaOffset();
  _$jni.JString getMediaOffsetV2();
  _$jni.JString getMediaOffsetV3();
  void setOriginalOffset(_$jni.JString string);
  bool get setOriginalOffset$async => false;
  _$jni.JString getOriginalOffset();
  _$jni.JString getOriginalOffsetV2();
  _$jni.JString getOriginalOffsetV3();
  void setAllOffset(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5);
  bool get setAllOffset$async => false;
  int getOffsetState();
  int getActiveTime();
  void setActiveTime(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setActiveTime$async => false;
  int getBatteryLevel();
  bool isCharging();
  bool isHighTemperature();
  bool isLowTemperature();
  int getBatteryType();
  bool isChargeBoxConnected();
  int getChargeBoxUsbConnectedState();
  bool isChargeBoxConnectedWhenCaptureStart();
  int getChargeBoxBatteryLevel();
  bool isChargeBoxCharging();
  int getStorageCardState();
  int getStorageCardLocation();
  int getStorageTotalSpace();
  int getStorageFreeSpace();
  int getVideoEncodeType();
  void setVideoEncodeType(int i);
  bool get setVideoEncodeType$async => false;
  bool isSelfie();
  int getCameraPosture();
  int getCameraPostureWhenCaptureStart();
  int getBtWakeupSwState();
  void setBtWakeupSwState(int i);
  bool get setBtWakeupSwState$async => false;
  double getGyroTimeStamp();
  _$jni.JObject getWindowCropInfo();
  int getImageFlicker();
  void setImageFlicker(int i);
  bool get setImageFlicker$async => false;
  void setStandByMode(int i, ICameraController_o00O0000 o00O0000);
  bool get setStandByMode$async => false;
  bool getQuickCaptureEnable();
  void setQuickCaptureEnable(bool z);
  bool get setQuickCaptureEnable$async => false;
  int getBtnShutdownClickMode();
  void setBtnShutdownClickMode(int i);
  bool get setBtnShutdownClickMode$async => false;
  int getBtnShutdownDoubleClickMode();
  void setBtnShutdownDoubleClickMode(int i);
  bool get setBtnShutdownDoubleClickMode$async => false;
  int getBtnShutdownTripleClickMode();
  void setBtnShutdownTripleClickMode(int i);
  bool get setBtnShutdownTripleClickMode$async => false;
  int getBtnShutdownLongPressMode();
  void setBtnShutdownLongPressMode(int i);
  bool get setBtnShutdownLongPressMode$async => false;
  int getBtnClickMode();
  void setBtnClickMode(int i);
  bool get setBtnClickMode$async => false;
  int getBtnDoubleClickMode();
  void setBtnDoubleClickMode(int i);
  bool get setBtnDoubleClickMode$async => false;
  int getBtnTripleClickMode();
  void setBtnTripleClickMode(int i);
  bool get setBtnTripleClickMode$async => false;
  int getBtnLongPressMode();
  void setBtnLongPressMode(int i);
  bool get setBtnLongPressMode$async => false;
  bool isMute();
  void setMute(bool z);
  bool get setMute$async => false;
  _$jni.JObject getWifiInfo();
  void setWifiPwd(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setWifiPwd$async => false;
  _$jni.JObject getButtonFollowOptions();
  void setButtonFollowOptions(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setButtonFollowOptions$async => false;
  _$jni.JString getWifiChannelCountry();
  void setWifiChannelCountry(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setWifiChannelCountry$async => false;
  void setCameraLanguage(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions);
  bool get setCameraLanguage$async => false;
  int getCameraLanguage();
  VideoResolution getVideoResolution();
  void setVideoResolution(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setVideoResolution$async => false;
  int getVideoBitrate();
  int getSubVideoMode();
  void setSubVideoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setSubVideoMode$async => false;
  int getSubPhotoMode();
  void setSubPhotoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback);
  bool get setSubPhotoMode$async => false;
  int getExpectOutputType();
  void setExpectOutputType(int i);
  bool get setExpectOutputType$async => false;
  int getFocusSensor();
  void setFocusSensor(int i);
  bool get setFocusSensor$async => false;
  int getSensorType();
  void beginOptionsTransaction();
  bool get beginOptionsTransaction$async => false;
  void commitOptionsTransaction(ICameraController_o000O0o o000O0o);
  bool get commitOptionsTransaction$async => false;
  TimelapseParams getTimelapseParams(int i);
  void setTimelapseParams(int i, TimelapseParams timelapseParams);
  bool get setTimelapseParams$async => false;
  int getExposureMode(int i, bool z);
  int getISO(int i, bool z);
  double getShutter(int i, bool z);
  void setExposureOptions(int i, int i1, int i2, double d, bool z);
  bool get setExposureOptions$async => false;
  int getExposureEV(int i);
  void setExposureEV(int i, int i1);
  bool get setExposureEV$async => false;
  double getFocalLengthValue(int i);
  void setFocalLengthValue(int i, double d);
  bool get setFocalLengthValue$async => false;
  int getVideoResolutionId(int i);
  void setVideoResolutionId(int i, int i1, ICameraController_o00 o00);
  bool get setVideoResolutionId$async => false;
  _$jni.JList<_$jni.JObject> getResRecLimit(int i);
  void setResRecLimit(int i, _$jni.JList<_$jni.JObject> list);
  bool get setResRecLimit$async => false;
  int getRemainingTime(int i);
  int getISOTopLimit(int i);
  void setISOTopLimit(int i, int i1);
  bool get setISOTopLimit$async => false;
  int getAEBCaptureNum(int i);
  void setAEBCaptureNum(int i, int i1);
  bool get setAEBCaptureNum$async => false;
  int getPhotoSize(int i);
  void setPhotoSize(int i, int i1);
  bool get setPhotoSize$async => false;
  int getPhotoResolutionId(int i);
  void setPhotoResolutionId(int i, int i1, ICameraController_o00 o00);
  bool get setPhotoResolutionId$async => false;
  int getWhiteBalanceId(int i);
  void setWhiteBalanceId(int i, int i1);
  bool get setWhiteBalanceId$async => false;
  int getWhiteBalanceValue(int i);
  void setWhiteBalanceValue(int i, int i1);
  bool get setWhiteBalanceValue$async => false;
  bool getSportModeEnable(int i);
  void setSportModeEnable(int i, bool z);
  bool get setSportModeEnable$async => false;
  int getSportModeLevel(int i);
  void setSportModeLevel(int i, int i1);
  bool get setSportModeLevel$async => false;
  int getGammaMode(int i);
  void setGammaMode(int i, int i1);
  bool get setGammaMode$async => false;
  int getRawType(int i);
  void setRawType(int i, int i1);
  bool get setRawType$async => false;
  int getPhotoSelfTimer(int i);
  void setPhotoSelfTimer(int i, int i1);
  bool get setPhotoSelfTimer$async => false;
  int getAccelerateFrequency(int i);
  void setAccelerateFrequency(int i, int i1);
  bool get setAccelerateFrequency$async => false;
  int getRecordDurationS(int i);
  void setRecordDurationS(int i, int i1);
  bool get setRecordDurationS$async => false;
  int getFlicker(int i);
  void setFlicker(int i, int i1);
  bool get setFlicker$async => false;
  bool getFlowstateEnable(int i);
  void setFlowstateEnable(int i, bool z);
  bool get setFlowstateEnable$async => false;
  bool getUnDamageZoomEnable(int i);
  void setUnDamageZoomEnable(int i, bool z);
  bool get setUnDamageZoomEnable$async => false;
  bool getFlowstateVideoEnable(int i);
  void setFlowstateVideoEnable(int i, bool z);
  bool get setFlowstateVideoEnable$async => false;
  bool getDarkEisEnable(int i);
  void setDarkEisEnable(int i, bool z);
  bool get setDarkEisEnable$async => false;
  bool getMeteringEnable(int i);
  void setMeteringEnable(int i, bool z);
  bool get setMeteringEnable$async => false;
  int getVideoSelfieMode(int i);
  void setVideoSelfieMode(int i, int i1, ICameraController_o00 o00);
  bool get setVideoSelfieMode$async => false;
  void getDarkEisStatus(ICameraController_o0000oo o0000oo);
  bool get getDarkEisStatus$async => false;
  bool getDarkEisEnableGlobal();
  void setDarkEisEnableGlobal(bool z);
  bool get setDarkEisEnableGlobal$async => false;
  bool getMeteringEnableGlobal();
  void setMeteringEnableGlobal(bool z);
  bool get setMeteringEnableGlobal$async => false;
  bool getInternalSplicingEnable();
  void setInternalSplicingEnable(bool z);
  bool get setInternalSplicingEnable$async => false;
  int getVideoBitrate$1(int i);
  int getFlowStateLevel(int i);
  void setFlowStateLevel(int i, int i1);
  bool get setFlowStateLevel$async => false;
  int getFlowStateLevelByCv5(int i);
  void setFlowStateLevelByCv5(int i, int i1);
  bool get setFlowStateLevelByCv5$async => false;
  bool getHdrStatus(int i);
  void setHdrStatus(int i, bool z);
  bool get setHdrStatus$async => false;
  int getSharpness(int i);
  void setSharpness(int i, int i1);
  bool get setSharpness$async => false;
  int getStarLapseExportType(int i);
  void setStarLapseExportType(int i, int i1);
  bool get setStarLapseExportType$async => false;
  int getPanoExposureMode(int i);
  void setPanoExposureMode(int i, int i1);
  bool get setPanoExposureMode$async => false;
  int getFovType(int i);
  void setFovType(int i, int i1, ICameraController_o00 o00);
  bool get setFovType$async => false;
  int getBurstCaptureNum(int i);
  void setBurstCaptureNum(int i, int i1);
  bool get setBurstCaptureNum$async => false;
  int getBurstCacheNum(int i);
  void setBurstCacheNum(int i, int i1);
  bool get setBurstCacheNum$async => false;
  int getBurstCaptureTime(int i);
  void setBurstCaptureTime(int i, int i1);
  bool get setBurstCaptureTime$async => false;
  bool getCacheCaptureEnable(int i);
  void setCacheCaptureEnable(int i, bool z);
  bool get setCacheCaptureEnable$async => false;
  double getZoomScale(int i);
  void setZoomScale(int i, double d);
  bool get setZoomScale$async => false;
  int getMaxRecordTime(int i);
  void setMaxRecordTime(int i, int i1);
  bool get setMaxRecordTime$async => false;
  void syncCameraSensorMode(ICameraController_o0000Ooo o0000Ooo);
  bool get syncCameraSensorMode$async => false;
  int getCameraSensorMode();
  void setCameraSensorMode(int i, ICameraController_o000OO0O o000OO0O);
  bool get setCameraSensorMode$async => false;
  bool supportSwitchCameraSensorMode();
  bool isCameraSingleSensorMode();
  bool isCameraPowerPanoMode();
  int getCameraSingleSensorResolutionId(int i);
  void setCameraSingleSensorResolution(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0);
  bool get setCameraSingleSensorResolution$async => false;
  bool getCameraSingleSensorFlowstateEnable(int i);
  void setCameraSingleSensorFlowstate(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0);
  bool get setCameraSingleSensorFlowstate$async => false;
  int getCameraSingleSensorDimensionType(int i);
  void setCameraSingleSensorDimensionType(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0);
  bool get setCameraSingleSensorDimensionType$async => false;
  int getCameraSingleSensorVisionType(int i);
  void setCameraSingleSensorVisionType(int i, int i1, int i2);
  bool get setCameraSingleSensorVisionType$async => false;
  void fetchCameraSingleSensorOptions(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener);
  bool get fetchCameraSingleSensorOptions$async => false;
  void openPreviewStream(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2);
  bool get openPreviewStream$async => false;
  void closePreviewStream();
  bool get closePreviewStream$async => false;
  void setPipeline(_$jni.JObject iCameraPreviewPipeline);
  bool get setPipeline$async => false;
  void setPreviewImageNotify(_$jni.JObject previewImageNotify, _$jni.JObject handler);
  bool get setPreviewImageNotify$async => false;
  void forcePutPreviewImage(_$jni.JArray<_$jni.JObject> imageDatas);
  bool get forcePutPreviewImage$async => false;
  bool isStreamProcessing();
  bool isH265StreamEncode();
  void setStreamEncode(bool z);
  bool get setStreamEncode$async => false;
  void requestStreamIframe();
  bool get requestStreamIframe$async => false;
  BaseCamera_PreviewStatus getPreviewStats();
  StreamResolution getCurFirstStreamResolution();
  StreamResolution getCurSecondStreamResolution();
  VideoResolution getCurRealCameraStreamResolution();
  StreamResolution getSecondStreamResolution();
  int getAudioCodec();
  int getPreviewNum();
  _$jni.JObject getRenderMode();
  bool isCameraWorking();
  bool isCameraRecordOnPause();
  BaseCamera_CaptureType getCaptureType();
  BaseCamera_CaptureStatus getCaptureStatus();
  BaseCamera_CaptureSubStatus getCaptureSubStatus();
  int getCaptureTime();
  int getCaptureCount();
  _$jni.JString getCaptureKeyTimePointDetail();
  void startNormalCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1);
  bool get startNormalCapture$async => false;
  void startCaptureWhileRecording(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO);
  bool get startCaptureWhileRecording$async => false;
  bool isNormalCapturing();
  void startNormalPanoCapture(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2);
  bool get startNormalPanoCapture$async => false;
  bool isNormalPanoCapturing();
  void startHDRCapture(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1);
  bool get startHDRCapture$async => false;
  bool isHDRCapturing();
  void startHDRPanoCapture(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2);
  bool get startHDRPanoCapture$async => false;
  bool isHDRPanoCapturing();
  void startNightScene(int i, _$jni.JArray<_$jni.jbyte> bs, int i1);
  bool get startNightScene$async => false;
  bool isNightSceneCapturing();
  void startIntervalShooting(_$jni.JArray<_$jni.jbyte> bs);
  bool get startIntervalShooting$async => false;
  void stopIntervalShooting();
  bool get stopIntervalShooting$async => false;
  bool isIntervalShooting();
  void startStarLapseShooting(_$jni.JArray<_$jni.jbyte> bs);
  bool get startStarLapseShooting$async => false;
  void stopStarLapseShooting();
  bool get stopStarLapseShooting$async => false;
  bool isStarLapseShooting();
  void startBurstCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1);
  bool get startBurstCapture$async => false;
  bool isBurstCapturing();
  void startNormalRecord();
  bool get startNormalRecord$async => false;
  void stopNormalRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopNormalRecord$async => false;
  bool isNormalRecording();
  void startSuperRecord();
  bool get startSuperRecord$async => false;
  void stopSuperRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopSuperRecord$async => false;
  bool isSuperRecording();
  void startHDRRecord();
  bool get startHDRRecord$async => false;
  void stopHDRRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopHDRRecord$async => false;
  bool isHDRRecording();
  void startBulletTime();
  bool get startBulletTime$async => false;
  void stopBulletTime(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopBulletTime$async => false;
  bool isBulletTimeRecording();
  void startTimeShift();
  bool get startTimeShift$async => false;
  void stopTimeShift(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopTimeShift$async => false;
  bool isTimeShiftRecording();
  void startLooperRecording();
  bool get startLooperRecording$async => false;
  void stopLooperRecording(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopLooperRecording$async => false;
  bool isLooperRecording();
  void startFpvRecord();
  bool get startFpvRecord$async => false;
  void stopFpvRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopFpvRecord$async => false;
  bool isFpvRecording();
  void startMovieRecord();
  bool get startMovieRecord$async => false;
  void stopMovieRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopMovieRecord$async => false;
  bool isMovieRecording();
  void startSlowMotionRecord();
  bool get startSlowMotionRecord$async => false;
  void stopSlowMotionRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopSlowMotionRecord$async => false;
  bool isSlowMotionRecording();
  void startSelfieRecord();
  bool get startSelfieRecord$async => false;
  void stopSelfieRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopSelfieRecord$async => false;
  bool isSelfieRecording();
  void startPureRecord();
  bool get startPureRecord$async => false;
  void stopPureRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopPureRecord$async => false;
  bool isPureRecording();
  void startIntervalRecord(_$jni.JArray<_$jni.jbyte> bs);
  bool get startIntervalRecord$async => false;
  void stopIntervalRecord();
  bool get stopIntervalRecord$async => false;
  bool isIntervalRecording();
  void startTimelapse();
  bool get startTimelapse$async => false;
  void stopTimelapse(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopTimelapse$async => false;
  bool isTimelapseRecording();
  void startStaticTimelapse();
  bool get startStaticTimelapse$async => false;
  void stopStaticTimelapse(_$jni.JArray<_$jni.jbyte> bs);
  bool get stopStaticTimelapse$async => false;
  bool isStaticTimelapseRecording();
  void pauseRecord();
  bool get pauseRecord$async => false;
  void startLive(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1);
  bool get startLive$async => false;
  void stopLive();
  bool get stopLive$async => false;
  void resetRecord();
  bool get resetRecord$async => false;
  void fetchAllOptions(ICameraController_IFetchOptionsListener iFetchOptionsListener);
  bool get fetchAllOptions$async => false;
  void fetchOptions(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener);
  bool get fetchOptions$async => false;
  void fetchPhotoOptions(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener);
  bool get fetchPhotoOptions$async => false;
  void fetchStorageState();
  bool get fetchStorageState$async => false;
  void fetchBatteryState();
  bool get fetchBatteryState$async => false;
  void formatStorage(ICameraController_o00000O o00000O);
  bool get formatStorage$async => false;
  void setAccessCameraFileState(int i);
  bool get setAccessCameraFileState$async => false;
  void getCameraFile(int i, ICameraController_o00000OO o00000OO);
  bool get getCameraFile$async => false;
  void packLogFile(int i, ICameraController_o00000OO o00000OO);
  bool get packLogFile$async => false;
  void setLogFileTransferState(int i, int i1, ICameraController_o000OOo0 o000OOo0);
  bool get setLogFileTransferState$async => false;
  void deleteLogFile(int i);
  bool get deleteLogFile$async => false;
  void getFileList(int i, int i1, int i2, ICameraController_o000OO o000OO);
  bool get getFileList$async => false;
  void getFileListIncludeRecording(int i, int i1, int i2, ICameraController_o000OO o000OO);
  bool get getFileListIncludeRecording$async => false;
  void getFileInfoList(ICameraController_o0000O0O o0000O0O);
  bool get getFileInfoList$async => false;
  void deleteFileList(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list);
  bool get deleteFileList$async => false;
  void calibrateGyro(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback);
  bool get calibrateGyro$async => false;
  void getFileGps(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileGps$async => false;
  void getFileThumbnail(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileThumbnail$async => false;
  void getFileThumbnailExt(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileThumbnailExt$async => false;
  void getFileExposureTimeData(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileExposureTimeData$async => false;
  void getFileGyroData(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0);
  bool get getFileGyroData$async => false;
  void getFileTimelapseTimestamp(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileTimelapseTimestamp$async => false;
  void getFileExtraMetaData(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileExtraMetaData$async => false;
  void setFileExtraMetaData(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00);
  bool get setFileExtraMetaData$async => false;
  void getFileExtraHighlight(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileExtraHighlight$async => false;
  void getFileExtraAutoEditor(_$jni.JString string, ICameraController_o0000O0 o0000O0);
  bool get getFileExtraAutoEditor$async => false;
  void cancelAuthorization(ICameraController_OooO0o oooO0o);
  bool get cancelAuthorization$async => false;
  void requestAuthorization(int i, ICameraController_o000O0 o000O0);
  bool get requestAuthorization$async => false;
  void cancelRequestAuthorization(int i, ICameraController_OooO0o oooO0o);
  bool get cancelRequestAuthorization$async => false;
  void setGpsData(_$jni.JArray<_$jni.jbyte> bs);
  bool get setGpsData$async => false;
  void setKeyTimePoint(int j, int i, _$jni.JString string);
  bool get setKeyTimePoint$async => false;
  void setBleRemoteControllerListener(ICameraController_OooO0OO oooO0OO);
  bool get setBleRemoteControllerListener$async => false;
  void scanBleRemoteController();
  bool get scanBleRemoteController$async => false;
  void connectBleRemoteControl(_$jni.JObject bTPeripheral);
  bool get connectBleRemoteControl$async => false;
  void disconnectBle(_$jni.JObject bTPeripheral);
  bool get disconnectBle$async => false;
  _$jni.JString getBleRemoteVersion();
  void setBleRemoteVersion(_$jni.JString string);
  bool get setBleRemoteVersion$async => false;
  int getBleRemoteType();
  void openCameraWifi(ICameraController_o000O00O o000O00O);
  bool get openCameraWifi$async => false;
  void closeCameraWifi(ICameraController_OooOO0O oooOO0O);
  bool get closeCameraWifi$async => false;
  void resetCameraWifi(ICameraController_o000O0Oo o000O0Oo);
  bool get resetCameraWifi$async => false;
  void notifyOTAError(ICameraController_o000O00 o000O00);
  bool get notifyOTAError$async => false;
  void setCameraWifiSeizable(int i, ICameraController_o000O o000O);
  bool get setCameraWifiSeizable$async => false;
  void uploadScriptJson(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO);
  bool get uploadScriptJson$async => false;
  void uploadScriptCmd(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO);
  bool get uploadScriptCmd$async => false;
  void refreshScript(ICameraController_OooOOO oooOOO);
  bool get refreshScript$async => false;
  void runScript(ICameraController_OooOOO oooOOO);
  bool get runScript$async => false;
  void addFmgButtonClickListener(ICameraController_OooOo00 oooOo00);
  bool get addFmgButtonClickListener$async => false;
  void removeFmgButtonClickListener(ICameraController_OooOo00 oooOo00);
  bool get removeFmgButtonClickListener$async => false;
  void startFmgUpgrade(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0);
  bool get startFmgUpgrade$async => false;
  void cancelFmgUpgrade();
  bool get cancelFmgUpgrade$async => false;
  _$jni.JObject getFmgMode();
  void setFmgMode(_$jni.JObject ptzMode);
  bool get setFmgMode$async => false;
  bool isFmgSportMode();
  bool isFmgImbalance();
  _$jni.JObject getFmgFollowSpeed();
  void setFmgFollowSpeed(_$jni.JObject ptzFollowSpeed);
  bool get setFmgFollowSpeed$async => false;
  _$jni.JObject getFmgRcSpeed();
  void setFmgButtonEnabled(_$jni.JObject fmgButtonAbleParams);
  bool get setFmgButtonEnabled$async => false;
  void setFmgButtonDisabled(_$jni.JObject fmgButtonAbleParams);
  bool get setFmgButtonDisabled$async => false;
  void setFmgRcSpeed(_$jni.JObject ptzRcSpeed);
  bool get setFmgRcSpeed$async => false;
  _$jni.JObject getFmgZoomSpeed();
  void setFmgZoomSpeed(_$jni.JObject ptzZoomSpeed);
  bool get setFmgZoomSpeed$async => false;
  _$jni.JObject getFmgHorizontalDir();
  void setFmgHorizontalDir(_$jni.JObject ptzRcHorizontalDir);
  bool get setFmgHorizontalDir$async => false;
  _$jni.JObject getFmgVerticalDir();
  void setFmgVerticalDir(_$jni.JObject ptzRcVerticalDir);
  bool get setFmgVerticalDir$async => false;
  _$jni.JObject getFmgSoundEnable();
  _$jni.JObject getFmgSwitchModeWay();
  void setFmgSwitchModeWay(_$jni.JObject ptzSwitchModeWay);
  bool get setFmgSwitchModeWay$async => false;
  void setFmgSoundEnable(_$jni.JObject ptzSoundMode);
  bool get setFmgSoundEnable$async => false;
  _$jni.JObject getFmgHvMode();
  void setFmgHvMode(_$jni.JObject ptzHvMode);
  bool get setFmgHvMode$async => false;
  bool isFmgLimitedYaw();
  bool isFmgLimitedPitch();
  bool isFmgSleep();
  bool isFmgStalled();
  bool isFmgPayload();
  double getFmgVerticalTrimDegree();
  void setFmgVerticalTrimDegree(double f);
  bool get setFmgVerticalTrimDegree$async => false;
  void startOrUpdateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams);
  bool get startOrUpdateFmgTargetFollow$async => false;
  void lostFmgTargetFollow();
  bool get lostFmgTargetFollow$async => false;
  void exitFmgTargetFollow();
  bool get exitFmgTargetFollow$async => false;
  void speculateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams);
  bool get speculateFmgTargetFollow$async => false;
  void setFmgZoomScale(int s);
  bool get setFmgZoomScale$async => false;
  void getFmgAngle(ICameraController_Oooo0 oooo0);
  bool get getFmgAngle$async => false;
  void getFmgSpeed(ICameraController_o00O0O o00O0O);
  bool get getFmgSpeed$async => false;
  void setFmgAngle(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo);
  bool get setFmgAngle$async => false;
  void setFmgSpeed(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00);
  bool get setFmgSpeed$async => false;
  void setFmgIdle(ICameraController_o0Oo0oo o0Oo0oo);
  bool get setFmgIdle$async => false;
  void setFmgTimeElapse(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo);
  bool get setFmgTimeElapse$async => false;
  void setFmgPano(_$jni.JObject ptzPanoMode);
  bool get setFmgPano$async => false;
  void resetFmgDefaultSettings(ICameraController_o0OO00O o0OO00O);
  bool get resetFmgDefaultSettings$async => false;
  void getFmgTrackSensitivityMode(ICameraController_o00Oo0 o00Oo0);
  bool get getFmgTrackSensitivityMode$async => false;
  void setFmgTrackSensitivityMode(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000);
  bool get setFmgTrackSensitivityMode$async => false;
  void startFmgRecMode(_$jni.JObject ptzRecMode);
  bool get startFmgRecMode$async => false;
  void stopFmgRecMode(_$jni.JObject ptzRecMode);
  bool get stopFmgRecMode$async => false;
  void initFmgRecMode(_$jni.JObject ptzRecMode);
  bool get initFmgRecMode$async => false;
  void fmgVibration();
  bool get fmgVibration$async => false;
  void enableFmgHandDrag(_$jni.JObject arrayList);
  bool get enableFmgHandDrag$async => false;
  void disableFmgHandDrag(_$jni.JObject arrayList);
  bool get disableFmgHandDrag$async => false;
  void setFmgCameraFacing(bool z);
  bool get setFmgCameraFacing$async => false;
  void updateFmgPhoneImu(_$jni.JArray<_$jni.jfloat> fs);
  bool get updateFmgPhoneImu$async => false;
  void getFmgAnalyticsData(ICameraController_Oooo000 oooo000);
  bool get getFmgAnalyticsData$async => false;
  void setFmgAngleSeq(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o);
  bool get setFmgAngleSeq$async => false;
  void clearFmgAnalyticsData();
  bool get clearFmgAnalyticsData$async => false;
  void startFmgHeartBeat();
  bool get startFmgHeartBeat$async => false;
  void stopFmgHeartBeat();
  bool get stopFmgHeartBeat$async => false;
}

final class _$ICameraController with $ICameraController {
  _$ICameraController(
    {required void Function() init, this.init$async = false,
    required void Function() destroy, this.destroy$async = false,
    required void Function(_$jni.JObject instaCamera) setInstaCamera, this.setInstaCamera$async = false,
    required void Function(BaseCamera baseCamera) setBaseCamera, this.setBaseCamera$async = false,
    required void Function(IBaseCameraChangedCallback iBaseCameraChangedCallback) setBaseCameraChangedCallback, this.setBaseCameraChangedCallback$async = false,
    required void Function(ICameraController_o00oOoo o00oOoo) setSyncStatusChangeListener, this.setSyncStatusChangeListener$async = false,
    required void Function(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener) setCaptureStatusChangeListener, this.setCaptureStatusChangeListener$async = false,
    required void Function(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener) setPreviewStatusChangedListener, this.setPreviewStatusChangedListener$async = false,
    required void Function(_$jni.JObject oooO00o) setDeveloperConfigProvider, this.setDeveloperConfigProvider$async = false,
    required void Function(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener) setCameraLiveListener, this.setCameraLiveListener$async = false,
    required void Function(int i, int i1, _$jni.JObject object) onCameraInfoNotify, this.onCameraInfoNotify$async = false,
    required _$jni.JString Function() getCameraHost,
    required int Function() getPort,
    required _$jni.JString Function() getFirmwareUploadPath,
    required _$jni.JString Function() getCameraFileUploadPath,
    required bool Function() supportUploadFileToCamera,
    required int Function() getVersionValidLength,
    required void Function(bool z) setAssistiveGridEnable, this.setAssistiveGridEnable$async = false,
    required bool Function() getAssistiveGridEnable,
    required void Function(bool z) setFreeFrameGridEnable, this.setFreeFrameGridEnable$async = false,
    required bool Function() getFreeFrameGridEnable,
    required void Function() freeze, this.freeze$async = false,
    required void Function() unfreeze, this.unfreeze$async = false,
    required bool Function() isFrozen,
    required void Function(BaseCamera_CameraSyncStatus cameraSyncStatus) changeCameraSyncStatus, this.changeCameraSyncStatus$async = false,
    required BaseCamera_CameraSyncStatus Function() getCurCameraSyncStatus,
    required BaseCamera_CameraSyncStatus Function() getLastCameraSyncStatus,
    required bool Function() isCameraBusy,
    required void Function(BaseCamera_ConnectType connectType) setConnectType, this.setConnectType$async = false,
    required bool Function() onlySupportBleConnect,
    required bool Function() isCaptureByUser,
    required void Function(ICameraController_OooOOOO oooOOOO) fetchCameraType, this.fetchCameraType$async = false,
    required void Function() startSync, this.startSync$async = false,
    required void Function(ICameraController_OooO00o oooO00o) setAuthorizationChecker, this.setAuthorizationChecker$async = false,
    required void Function(_$jni.JList<ICameraCheck> list) setCheckActivationList, this.setCheckActivationList$async = false,
    required void Function() continueCameraCheck, this.continueCameraCheck$async = false,
    required _$jni.JString Function() getSerial,
    required void Function(_$jni.JString string) setSerial, this.setSerial$async = false,
    required _$jni.JString Function() getUUID,
    required _$jni.JString Function() getVR360Senor0Serial,
    required _$jni.JString Function() getVR360Senor1Serial,
    required _$jni.JString Function() getVR180SenorSerial,
    required _$jni.JArray<_$jni.JString> Function() getSensorSerials,
    required _$jni.JString Function() getCameraType,
    required _$jni.JString Function() getCameraName,
    required _$jni.JString Function() getFWVersion,
    required _$jni.JString Function() getCameraFwVersion,
    required _$jni.JString Function() getCameraBleVersion,
    required _$jni.JString Function() getChargeBoxFwVersion,
    required _$jni.JString Function() getChargeBoxBleVersion,
    required void Function(_$jni.JString string) setMediaOffset, this.setMediaOffset$async = false,
    required _$jni.JString Function() getMediaOffset,
    required _$jni.JString Function() getMediaOffsetV2,
    required _$jni.JString Function() getMediaOffsetV3,
    required void Function(_$jni.JString string) setOriginalOffset, this.setOriginalOffset$async = false,
    required _$jni.JString Function() getOriginalOffset,
    required _$jni.JString Function() getOriginalOffsetV2,
    required _$jni.JString Function() getOriginalOffsetV3,
    required void Function(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5) setAllOffset, this.setAllOffset$async = false,
    required int Function() getOffsetState,
    required int Function() getActiveTime,
    required void Function(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback) setActiveTime, this.setActiveTime$async = false,
    required int Function() getBatteryLevel,
    required bool Function() isCharging,
    required bool Function() isHighTemperature,
    required bool Function() isLowTemperature,
    required int Function() getBatteryType,
    required bool Function() isChargeBoxConnected,
    required int Function() getChargeBoxUsbConnectedState,
    required bool Function() isChargeBoxConnectedWhenCaptureStart,
    required int Function() getChargeBoxBatteryLevel,
    required bool Function() isChargeBoxCharging,
    required int Function() getStorageCardState,
    required int Function() getStorageCardLocation,
    required int Function() getStorageTotalSpace,
    required int Function() getStorageFreeSpace,
    required int Function() getVideoEncodeType,
    required void Function(int i) setVideoEncodeType, this.setVideoEncodeType$async = false,
    required bool Function() isSelfie,
    required int Function() getCameraPosture,
    required int Function() getCameraPostureWhenCaptureStart,
    required int Function() getBtWakeupSwState,
    required void Function(int i) setBtWakeupSwState, this.setBtWakeupSwState$async = false,
    required double Function() getGyroTimeStamp,
    required _$jni.JObject Function() getWindowCropInfo,
    required int Function() getImageFlicker,
    required void Function(int i) setImageFlicker, this.setImageFlicker$async = false,
    required void Function(int i, ICameraController_o00O0000 o00O0000) setStandByMode, this.setStandByMode$async = false,
    required bool Function() getQuickCaptureEnable,
    required void Function(bool z) setQuickCaptureEnable, this.setQuickCaptureEnable$async = false,
    required int Function() getBtnShutdownClickMode,
    required void Function(int i) setBtnShutdownClickMode, this.setBtnShutdownClickMode$async = false,
    required int Function() getBtnShutdownDoubleClickMode,
    required void Function(int i) setBtnShutdownDoubleClickMode, this.setBtnShutdownDoubleClickMode$async = false,
    required int Function() getBtnShutdownTripleClickMode,
    required void Function(int i) setBtnShutdownTripleClickMode, this.setBtnShutdownTripleClickMode$async = false,
    required int Function() getBtnShutdownLongPressMode,
    required void Function(int i) setBtnShutdownLongPressMode, this.setBtnShutdownLongPressMode$async = false,
    required int Function() getBtnClickMode,
    required void Function(int i) setBtnClickMode, this.setBtnClickMode$async = false,
    required int Function() getBtnDoubleClickMode,
    required void Function(int i) setBtnDoubleClickMode, this.setBtnDoubleClickMode$async = false,
    required int Function() getBtnTripleClickMode,
    required void Function(int i) setBtnTripleClickMode, this.setBtnTripleClickMode$async = false,
    required int Function() getBtnLongPressMode,
    required void Function(int i) setBtnLongPressMode, this.setBtnLongPressMode$async = false,
    required bool Function() isMute,
    required void Function(bool z) setMute, this.setMute$async = false,
    required _$jni.JObject Function() getWifiInfo,
    required void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) setWifiPwd, this.setWifiPwd$async = false,
    required _$jni.JObject Function() getButtonFollowOptions,
    required void Function(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback) setButtonFollowOptions, this.setButtonFollowOptions$async = false,
    required _$jni.JString Function() getWifiChannelCountry,
    required void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) setWifiChannelCountry, this.setWifiChannelCountry$async = false,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions) setCameraLanguage, this.setCameraLanguage$async = false,
    required int Function() getCameraLanguage,
    required VideoResolution Function() getVideoResolution,
    required void Function(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback) setVideoResolution, this.setVideoResolution$async = false,
    required int Function() getVideoBitrate,
    required int Function() getSubVideoMode,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) setSubVideoMode, this.setSubVideoMode$async = false,
    required int Function() getSubPhotoMode,
    required void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) setSubPhotoMode, this.setSubPhotoMode$async = false,
    required int Function() getExpectOutputType,
    required void Function(int i) setExpectOutputType, this.setExpectOutputType$async = false,
    required int Function() getFocusSensor,
    required void Function(int i) setFocusSensor, this.setFocusSensor$async = false,
    required int Function() getSensorType,
    required void Function() beginOptionsTransaction, this.beginOptionsTransaction$async = false,
    required void Function(ICameraController_o000O0o o000O0o) commitOptionsTransaction, this.commitOptionsTransaction$async = false,
    required TimelapseParams Function(int i) getTimelapseParams,
    required void Function(int i, TimelapseParams timelapseParams) setTimelapseParams, this.setTimelapseParams$async = false,
    required int Function(int i, bool z) getExposureMode,
    required int Function(int i, bool z) getISO,
    required double Function(int i, bool z) getShutter,
    required void Function(int i, int i1, int i2, double d, bool z) setExposureOptions, this.setExposureOptions$async = false,
    required int Function(int i) getExposureEV,
    required void Function(int i, int i1) setExposureEV, this.setExposureEV$async = false,
    required double Function(int i) getFocalLengthValue,
    required void Function(int i, double d) setFocalLengthValue, this.setFocalLengthValue$async = false,
    required int Function(int i) getVideoResolutionId,
    required void Function(int i, int i1, ICameraController_o00 o00) setVideoResolutionId, this.setVideoResolutionId$async = false,
    required _$jni.JList<_$jni.JObject> Function(int i) getResRecLimit,
    required void Function(int i, _$jni.JList<_$jni.JObject> list) setResRecLimit, this.setResRecLimit$async = false,
    required int Function(int i) getRemainingTime,
    required int Function(int i) getISOTopLimit,
    required void Function(int i, int i1) setISOTopLimit, this.setISOTopLimit$async = false,
    required int Function(int i) getAEBCaptureNum,
    required void Function(int i, int i1) setAEBCaptureNum, this.setAEBCaptureNum$async = false,
    required int Function(int i) getPhotoSize,
    required void Function(int i, int i1) setPhotoSize, this.setPhotoSize$async = false,
    required int Function(int i) getPhotoResolutionId,
    required void Function(int i, int i1, ICameraController_o00 o00) setPhotoResolutionId, this.setPhotoResolutionId$async = false,
    required int Function(int i) getWhiteBalanceId,
    required void Function(int i, int i1) setWhiteBalanceId, this.setWhiteBalanceId$async = false,
    required int Function(int i) getWhiteBalanceValue,
    required void Function(int i, int i1) setWhiteBalanceValue, this.setWhiteBalanceValue$async = false,
    required bool Function(int i) getSportModeEnable,
    required void Function(int i, bool z) setSportModeEnable, this.setSportModeEnable$async = false,
    required int Function(int i) getSportModeLevel,
    required void Function(int i, int i1) setSportModeLevel, this.setSportModeLevel$async = false,
    required int Function(int i) getGammaMode,
    required void Function(int i, int i1) setGammaMode, this.setGammaMode$async = false,
    required int Function(int i) getRawType,
    required void Function(int i, int i1) setRawType, this.setRawType$async = false,
    required int Function(int i) getPhotoSelfTimer,
    required void Function(int i, int i1) setPhotoSelfTimer, this.setPhotoSelfTimer$async = false,
    required int Function(int i) getAccelerateFrequency,
    required void Function(int i, int i1) setAccelerateFrequency, this.setAccelerateFrequency$async = false,
    required int Function(int i) getRecordDurationS,
    required void Function(int i, int i1) setRecordDurationS, this.setRecordDurationS$async = false,
    required int Function(int i) getFlicker,
    required void Function(int i, int i1) setFlicker, this.setFlicker$async = false,
    required bool Function(int i) getFlowstateEnable,
    required void Function(int i, bool z) setFlowstateEnable, this.setFlowstateEnable$async = false,
    required bool Function(int i) getUnDamageZoomEnable,
    required void Function(int i, bool z) setUnDamageZoomEnable, this.setUnDamageZoomEnable$async = false,
    required bool Function(int i) getFlowstateVideoEnable,
    required void Function(int i, bool z) setFlowstateVideoEnable, this.setFlowstateVideoEnable$async = false,
    required bool Function(int i) getDarkEisEnable,
    required void Function(int i, bool z) setDarkEisEnable, this.setDarkEisEnable$async = false,
    required bool Function(int i) getMeteringEnable,
    required void Function(int i, bool z) setMeteringEnable, this.setMeteringEnable$async = false,
    required int Function(int i) getVideoSelfieMode,
    required void Function(int i, int i1, ICameraController_o00 o00) setVideoSelfieMode, this.setVideoSelfieMode$async = false,
    required void Function(ICameraController_o0000oo o0000oo) getDarkEisStatus, this.getDarkEisStatus$async = false,
    required bool Function() getDarkEisEnableGlobal,
    required void Function(bool z) setDarkEisEnableGlobal, this.setDarkEisEnableGlobal$async = false,
    required bool Function() getMeteringEnableGlobal,
    required void Function(bool z) setMeteringEnableGlobal, this.setMeteringEnableGlobal$async = false,
    required bool Function() getInternalSplicingEnable,
    required void Function(bool z) setInternalSplicingEnable, this.setInternalSplicingEnable$async = false,
    required int Function(int i) getVideoBitrate$1,
    required int Function(int i) getFlowStateLevel,
    required void Function(int i, int i1) setFlowStateLevel, this.setFlowStateLevel$async = false,
    required int Function(int i) getFlowStateLevelByCv5,
    required void Function(int i, int i1) setFlowStateLevelByCv5, this.setFlowStateLevelByCv5$async = false,
    required bool Function(int i) getHdrStatus,
    required void Function(int i, bool z) setHdrStatus, this.setHdrStatus$async = false,
    required int Function(int i) getSharpness,
    required void Function(int i, int i1) setSharpness, this.setSharpness$async = false,
    required int Function(int i) getStarLapseExportType,
    required void Function(int i, int i1) setStarLapseExportType, this.setStarLapseExportType$async = false,
    required int Function(int i) getPanoExposureMode,
    required void Function(int i, int i1) setPanoExposureMode, this.setPanoExposureMode$async = false,
    required int Function(int i) getFovType,
    required void Function(int i, int i1, ICameraController_o00 o00) setFovType, this.setFovType$async = false,
    required int Function(int i) getBurstCaptureNum,
    required void Function(int i, int i1) setBurstCaptureNum, this.setBurstCaptureNum$async = false,
    required int Function(int i) getBurstCacheNum,
    required void Function(int i, int i1) setBurstCacheNum, this.setBurstCacheNum$async = false,
    required int Function(int i) getBurstCaptureTime,
    required void Function(int i, int i1) setBurstCaptureTime, this.setBurstCaptureTime$async = false,
    required bool Function(int i) getCacheCaptureEnable,
    required void Function(int i, bool z) setCacheCaptureEnable, this.setCacheCaptureEnable$async = false,
    required double Function(int i) getZoomScale,
    required void Function(int i, double d) setZoomScale, this.setZoomScale$async = false,
    required int Function(int i) getMaxRecordTime,
    required void Function(int i, int i1) setMaxRecordTime, this.setMaxRecordTime$async = false,
    required void Function(ICameraController_o0000Ooo o0000Ooo) syncCameraSensorMode, this.syncCameraSensorMode$async = false,
    required int Function() getCameraSensorMode,
    required void Function(int i, ICameraController_o000OO0O o000OO0O) setCameraSensorMode, this.setCameraSensorMode$async = false,
    required bool Function() supportSwitchCameraSensorMode,
    required bool Function() isCameraSingleSensorMode,
    required bool Function() isCameraPowerPanoMode,
    required int Function(int i) getCameraSingleSensorResolutionId,
    required void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorResolution, this.setCameraSingleSensorResolution$async = false,
    required bool Function(int i) getCameraSingleSensorFlowstateEnable,
    required void Function(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorFlowstate, this.setCameraSingleSensorFlowstate$async = false,
    required int Function(int i) getCameraSingleSensorDimensionType,
    required void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) setCameraSingleSensorDimensionType, this.setCameraSingleSensorDimensionType$async = false,
    required int Function(int i) getCameraSingleSensorVisionType,
    required void Function(int i, int i1, int i2) setCameraSingleSensorVisionType, this.setCameraSingleSensorVisionType$async = false,
    required void Function(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchCameraSingleSensorOptions, this.fetchCameraSingleSensorOptions$async = false,
    required void Function(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2) openPreviewStream, this.openPreviewStream$async = false,
    required void Function() closePreviewStream, this.closePreviewStream$async = false,
    required void Function(_$jni.JObject iCameraPreviewPipeline) setPipeline, this.setPipeline$async = false,
    required void Function(_$jni.JObject previewImageNotify, _$jni.JObject handler) setPreviewImageNotify, this.setPreviewImageNotify$async = false,
    required void Function(_$jni.JArray<_$jni.JObject> imageDatas) forcePutPreviewImage, this.forcePutPreviewImage$async = false,
    required bool Function() isStreamProcessing,
    required bool Function() isH265StreamEncode,
    required void Function(bool z) setStreamEncode, this.setStreamEncode$async = false,
    required void Function() requestStreamIframe, this.requestStreamIframe$async = false,
    required BaseCamera_PreviewStatus Function() getPreviewStats,
    required StreamResolution Function() getCurFirstStreamResolution,
    required StreamResolution Function() getCurSecondStreamResolution,
    required VideoResolution Function() getCurRealCameraStreamResolution,
    required StreamResolution Function() getSecondStreamResolution,
    required int Function() getAudioCodec,
    required int Function() getPreviewNum,
    required _$jni.JObject Function() getRenderMode,
    required bool Function() isCameraWorking,
    required bool Function() isCameraRecordOnPause,
    required BaseCamera_CaptureType Function() getCaptureType,
    required BaseCamera_CaptureStatus Function() getCaptureStatus,
    required BaseCamera_CaptureSubStatus Function() getCaptureSubStatus,
    required int Function() getCaptureTime,
    required int Function() getCaptureCount,
    required _$jni.JString Function() getCaptureKeyTimePointDetail,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startNormalCapture, this.startNormalCapture$async = false,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO) startCaptureWhileRecording, this.startCaptureWhileRecording$async = false,
    required bool Function() isNormalCapturing,
    required void Function(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) startNormalPanoCapture, this.startNormalPanoCapture$async = false,
    required bool Function() isNormalPanoCapturing,
    required void Function(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startHDRCapture, this.startHDRCapture$async = false,
    required bool Function() isHDRCapturing,
    required void Function(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) startHDRPanoCapture, this.startHDRPanoCapture$async = false,
    required bool Function() isHDRPanoCapturing,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startNightScene, this.startNightScene$async = false,
    required bool Function() isNightSceneCapturing,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startIntervalShooting, this.startIntervalShooting$async = false,
    required void Function() stopIntervalShooting, this.stopIntervalShooting$async = false,
    required bool Function() isIntervalShooting,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startStarLapseShooting, this.startStarLapseShooting$async = false,
    required void Function() stopStarLapseShooting, this.stopStarLapseShooting$async = false,
    required bool Function() isStarLapseShooting,
    required void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) startBurstCapture, this.startBurstCapture$async = false,
    required bool Function() isBurstCapturing,
    required void Function() startNormalRecord, this.startNormalRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopNormalRecord, this.stopNormalRecord$async = false,
    required bool Function() isNormalRecording,
    required void Function() startSuperRecord, this.startSuperRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSuperRecord, this.stopSuperRecord$async = false,
    required bool Function() isSuperRecording,
    required void Function() startHDRRecord, this.startHDRRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopHDRRecord, this.stopHDRRecord$async = false,
    required bool Function() isHDRRecording,
    required void Function() startBulletTime, this.startBulletTime$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopBulletTime, this.stopBulletTime$async = false,
    required bool Function() isBulletTimeRecording,
    required void Function() startTimeShift, this.startTimeShift$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopTimeShift, this.stopTimeShift$async = false,
    required bool Function() isTimeShiftRecording,
    required void Function() startLooperRecording, this.startLooperRecording$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopLooperRecording, this.stopLooperRecording$async = false,
    required bool Function() isLooperRecording,
    required void Function() startFpvRecord, this.startFpvRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopFpvRecord, this.stopFpvRecord$async = false,
    required bool Function() isFpvRecording,
    required void Function() startMovieRecord, this.startMovieRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopMovieRecord, this.stopMovieRecord$async = false,
    required bool Function() isMovieRecording,
    required void Function() startSlowMotionRecord, this.startSlowMotionRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSlowMotionRecord, this.stopSlowMotionRecord$async = false,
    required bool Function() isSlowMotionRecording,
    required void Function() startSelfieRecord, this.startSelfieRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopSelfieRecord, this.stopSelfieRecord$async = false,
    required bool Function() isSelfieRecording,
    required void Function() startPureRecord, this.startPureRecord$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopPureRecord, this.stopPureRecord$async = false,
    required bool Function() isPureRecording,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) startIntervalRecord, this.startIntervalRecord$async = false,
    required void Function() stopIntervalRecord, this.stopIntervalRecord$async = false,
    required bool Function() isIntervalRecording,
    required void Function() startTimelapse, this.startTimelapse$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopTimelapse, this.stopTimelapse$async = false,
    required bool Function() isTimelapseRecording,
    required void Function() startStaticTimelapse, this.startStaticTimelapse$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) stopStaticTimelapse, this.stopStaticTimelapse$async = false,
    required bool Function() isStaticTimelapseRecording,
    required void Function() pauseRecord, this.pauseRecord$async = false,
    required void Function(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1) startLive, this.startLive$async = false,
    required void Function() stopLive, this.stopLive$async = false,
    required void Function() resetRecord, this.resetRecord$async = false,
    required void Function(ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchAllOptions, this.fetchAllOptions$async = false,
    required void Function(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchOptions, this.fetchOptions$async = false,
    required void Function(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) fetchPhotoOptions, this.fetchPhotoOptions$async = false,
    required void Function() fetchStorageState, this.fetchStorageState$async = false,
    required void Function() fetchBatteryState, this.fetchBatteryState$async = false,
    required void Function(ICameraController_o00000O o00000O) formatStorage, this.formatStorage$async = false,
    required void Function(int i) setAccessCameraFileState, this.setAccessCameraFileState$async = false,
    required void Function(int i, ICameraController_o00000OO o00000OO) getCameraFile, this.getCameraFile$async = false,
    required void Function(int i, ICameraController_o00000OO o00000OO) packLogFile, this.packLogFile$async = false,
    required void Function(int i, int i1, ICameraController_o000OOo0 o000OOo0) setLogFileTransferState, this.setLogFileTransferState$async = false,
    required void Function(int i) deleteLogFile, this.deleteLogFile$async = false,
    required void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) getFileList, this.getFileList$async = false,
    required void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) getFileListIncludeRecording, this.getFileListIncludeRecording$async = false,
    required void Function(ICameraController_o0000O0O o0000O0O) getFileInfoList, this.getFileInfoList$async = false,
    required void Function(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list) deleteFileList, this.deleteFileList$async = false,
    required void Function(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback) calibrateGyro, this.calibrateGyro$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileGps, this.getFileGps$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileThumbnail, this.getFileThumbnail$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileThumbnailExt, this.getFileThumbnailExt$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExposureTimeData, this.getFileExposureTimeData$async = false,
    required void Function(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0) getFileGyroData, this.getFileGyroData$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileTimelapseTimestamp, this.getFileTimelapseTimestamp$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraMetaData, this.getFileExtraMetaData$async = false,
    required void Function(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00) setFileExtraMetaData, this.setFileExtraMetaData$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraHighlight, this.getFileExtraHighlight$async = false,
    required void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) getFileExtraAutoEditor, this.getFileExtraAutoEditor$async = false,
    required void Function(ICameraController_OooO0o oooO0o) cancelAuthorization, this.cancelAuthorization$async = false,
    required void Function(int i, ICameraController_o000O0 o000O0) requestAuthorization, this.requestAuthorization$async = false,
    required void Function(int i, ICameraController_OooO0o oooO0o) cancelRequestAuthorization, this.cancelRequestAuthorization$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs) setGpsData, this.setGpsData$async = false,
    required void Function(int j, int i, _$jni.JString string) setKeyTimePoint, this.setKeyTimePoint$async = false,
    required void Function(ICameraController_OooO0OO oooO0OO) setBleRemoteControllerListener, this.setBleRemoteControllerListener$async = false,
    required void Function() scanBleRemoteController, this.scanBleRemoteController$async = false,
    required void Function(_$jni.JObject bTPeripheral) connectBleRemoteControl, this.connectBleRemoteControl$async = false,
    required void Function(_$jni.JObject bTPeripheral) disconnectBle, this.disconnectBle$async = false,
    required _$jni.JString Function() getBleRemoteVersion,
    required void Function(_$jni.JString string) setBleRemoteVersion, this.setBleRemoteVersion$async = false,
    required int Function() getBleRemoteType,
    required void Function(ICameraController_o000O00O o000O00O) openCameraWifi, this.openCameraWifi$async = false,
    required void Function(ICameraController_OooOO0O oooOO0O) closeCameraWifi, this.closeCameraWifi$async = false,
    required void Function(ICameraController_o000O0Oo o000O0Oo) resetCameraWifi, this.resetCameraWifi$async = false,
    required void Function(ICameraController_o000O00 o000O00) notifyOTAError, this.notifyOTAError$async = false,
    required void Function(int i, ICameraController_o000O o000O) setCameraWifiSeizable, this.setCameraWifiSeizable$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) uploadScriptJson, this.uploadScriptJson$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) uploadScriptCmd, this.uploadScriptCmd$async = false,
    required void Function(ICameraController_OooOOO oooOOO) refreshScript, this.refreshScript$async = false,
    required void Function(ICameraController_OooOOO oooOOO) runScript, this.runScript$async = false,
    required void Function(ICameraController_OooOo00 oooOo00) addFmgButtonClickListener, this.addFmgButtonClickListener$async = false,
    required void Function(ICameraController_OooOo00 oooOo00) removeFmgButtonClickListener, this.removeFmgButtonClickListener$async = false,
    required void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0) startFmgUpgrade, this.startFmgUpgrade$async = false,
    required void Function() cancelFmgUpgrade, this.cancelFmgUpgrade$async = false,
    required _$jni.JObject Function() getFmgMode,
    required void Function(_$jni.JObject ptzMode) setFmgMode, this.setFmgMode$async = false,
    required bool Function() isFmgSportMode,
    required bool Function() isFmgImbalance,
    required _$jni.JObject Function() getFmgFollowSpeed,
    required void Function(_$jni.JObject ptzFollowSpeed) setFmgFollowSpeed, this.setFmgFollowSpeed$async = false,
    required _$jni.JObject Function() getFmgRcSpeed,
    required void Function(_$jni.JObject fmgButtonAbleParams) setFmgButtonEnabled, this.setFmgButtonEnabled$async = false,
    required void Function(_$jni.JObject fmgButtonAbleParams) setFmgButtonDisabled, this.setFmgButtonDisabled$async = false,
    required void Function(_$jni.JObject ptzRcSpeed) setFmgRcSpeed, this.setFmgRcSpeed$async = false,
    required _$jni.JObject Function() getFmgZoomSpeed,
    required void Function(_$jni.JObject ptzZoomSpeed) setFmgZoomSpeed, this.setFmgZoomSpeed$async = false,
    required _$jni.JObject Function() getFmgHorizontalDir,
    required void Function(_$jni.JObject ptzRcHorizontalDir) setFmgHorizontalDir, this.setFmgHorizontalDir$async = false,
    required _$jni.JObject Function() getFmgVerticalDir,
    required void Function(_$jni.JObject ptzRcVerticalDir) setFmgVerticalDir, this.setFmgVerticalDir$async = false,
    required _$jni.JObject Function() getFmgSoundEnable,
    required _$jni.JObject Function() getFmgSwitchModeWay,
    required void Function(_$jni.JObject ptzSwitchModeWay) setFmgSwitchModeWay, this.setFmgSwitchModeWay$async = false,
    required void Function(_$jni.JObject ptzSoundMode) setFmgSoundEnable, this.setFmgSoundEnable$async = false,
    required _$jni.JObject Function() getFmgHvMode,
    required void Function(_$jni.JObject ptzHvMode) setFmgHvMode, this.setFmgHvMode$async = false,
    required bool Function() isFmgLimitedYaw,
    required bool Function() isFmgLimitedPitch,
    required bool Function() isFmgSleep,
    required bool Function() isFmgStalled,
    required bool Function() isFmgPayload,
    required double Function() getFmgVerticalTrimDegree,
    required void Function(double f) setFmgVerticalTrimDegree, this.setFmgVerticalTrimDegree$async = false,
    required void Function(_$jni.JObject fmgTargetFollowParams) startOrUpdateFmgTargetFollow, this.startOrUpdateFmgTargetFollow$async = false,
    required void Function() lostFmgTargetFollow, this.lostFmgTargetFollow$async = false,
    required void Function() exitFmgTargetFollow, this.exitFmgTargetFollow$async = false,
    required void Function(_$jni.JObject fmgTargetFollowParams) speculateFmgTargetFollow, this.speculateFmgTargetFollow$async = false,
    required void Function(int s) setFmgZoomScale, this.setFmgZoomScale$async = false,
    required void Function(ICameraController_Oooo0 oooo0) getFmgAngle, this.getFmgAngle$async = false,
    required void Function(ICameraController_o00O0O o00O0O) getFmgSpeed, this.getFmgSpeed$async = false,
    required void Function(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo) setFmgAngle, this.setFmgAngle$async = false,
    required void Function(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00) setFmgSpeed, this.setFmgSpeed$async = false,
    required void Function(ICameraController_o0Oo0oo o0Oo0oo) setFmgIdle, this.setFmgIdle$async = false,
    required void Function(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo) setFmgTimeElapse, this.setFmgTimeElapse$async = false,
    required void Function(_$jni.JObject ptzPanoMode) setFmgPano, this.setFmgPano$async = false,
    required void Function(ICameraController_o0OO00O o0OO00O) resetFmgDefaultSettings, this.resetFmgDefaultSettings$async = false,
    required void Function(ICameraController_o00Oo0 o00Oo0) getFmgTrackSensitivityMode, this.getFmgTrackSensitivityMode$async = false,
    required void Function(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000) setFmgTrackSensitivityMode, this.setFmgTrackSensitivityMode$async = false,
    required void Function(_$jni.JObject ptzRecMode) startFmgRecMode, this.startFmgRecMode$async = false,
    required void Function(_$jni.JObject ptzRecMode) stopFmgRecMode, this.stopFmgRecMode$async = false,
    required void Function(_$jni.JObject ptzRecMode) initFmgRecMode, this.initFmgRecMode$async = false,
    required void Function() fmgVibration, this.fmgVibration$async = false,
    required void Function(_$jni.JObject arrayList) enableFmgHandDrag, this.enableFmgHandDrag$async = false,
    required void Function(_$jni.JObject arrayList) disableFmgHandDrag, this.disableFmgHandDrag$async = false,
    required void Function(bool z) setFmgCameraFacing, this.setFmgCameraFacing$async = false,
    required void Function(_$jni.JArray<_$jni.jfloat> fs) updateFmgPhoneImu, this.updateFmgPhoneImu$async = false,
    required void Function(ICameraController_Oooo000 oooo000) getFmgAnalyticsData, this.getFmgAnalyticsData$async = false,
    required void Function(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o) setFmgAngleSeq, this.setFmgAngleSeq$async = false,
    required void Function() clearFmgAnalyticsData, this.clearFmgAnalyticsData$async = false,
    required void Function() startFmgHeartBeat, this.startFmgHeartBeat$async = false,
    required void Function() stopFmgHeartBeat, this.stopFmgHeartBeat$async = false,}
  ) :  _init = init, _destroy = destroy, _setInstaCamera = setInstaCamera, _setBaseCamera = setBaseCamera, _setBaseCameraChangedCallback = setBaseCameraChangedCallback, _setSyncStatusChangeListener = setSyncStatusChangeListener, _setCaptureStatusChangeListener = setCaptureStatusChangeListener, _setPreviewStatusChangedListener = setPreviewStatusChangedListener, _setDeveloperConfigProvider = setDeveloperConfigProvider, _setCameraLiveListener = setCameraLiveListener, _onCameraInfoNotify = onCameraInfoNotify, _getCameraHost = getCameraHost, _getPort = getPort, _getFirmwareUploadPath = getFirmwareUploadPath, _getCameraFileUploadPath = getCameraFileUploadPath, _supportUploadFileToCamera = supportUploadFileToCamera, _getVersionValidLength = getVersionValidLength, _setAssistiveGridEnable = setAssistiveGridEnable, _getAssistiveGridEnable = getAssistiveGridEnable, _setFreeFrameGridEnable = setFreeFrameGridEnable, _getFreeFrameGridEnable = getFreeFrameGridEnable, _freeze = freeze, _unfreeze = unfreeze, _isFrozen = isFrozen, _changeCameraSyncStatus = changeCameraSyncStatus, _getCurCameraSyncStatus = getCurCameraSyncStatus, _getLastCameraSyncStatus = getLastCameraSyncStatus, _isCameraBusy = isCameraBusy, _setConnectType = setConnectType, _onlySupportBleConnect = onlySupportBleConnect, _isCaptureByUser = isCaptureByUser, _fetchCameraType = fetchCameraType, _startSync = startSync, _setAuthorizationChecker = setAuthorizationChecker, _setCheckActivationList = setCheckActivationList, _continueCameraCheck = continueCameraCheck, _getSerial = getSerial, _setSerial = setSerial, _getUUID = getUUID, _getVR360Senor0Serial = getVR360Senor0Serial, _getVR360Senor1Serial = getVR360Senor1Serial, _getVR180SenorSerial = getVR180SenorSerial, _getSensorSerials = getSensorSerials, _getCameraType = getCameraType, _getCameraName = getCameraName, _getFWVersion = getFWVersion, _getCameraFwVersion = getCameraFwVersion, _getCameraBleVersion = getCameraBleVersion, _getChargeBoxFwVersion = getChargeBoxFwVersion, _getChargeBoxBleVersion = getChargeBoxBleVersion, _setMediaOffset = setMediaOffset, _getMediaOffset = getMediaOffset, _getMediaOffsetV2 = getMediaOffsetV2, _getMediaOffsetV3 = getMediaOffsetV3, _setOriginalOffset = setOriginalOffset, _getOriginalOffset = getOriginalOffset, _getOriginalOffsetV2 = getOriginalOffsetV2, _getOriginalOffsetV3 = getOriginalOffsetV3, _setAllOffset = setAllOffset, _getOffsetState = getOffsetState, _getActiveTime = getActiveTime, _setActiveTime = setActiveTime, _getBatteryLevel = getBatteryLevel, _isCharging = isCharging, _isHighTemperature = isHighTemperature, _isLowTemperature = isLowTemperature, _getBatteryType = getBatteryType, _isChargeBoxConnected = isChargeBoxConnected, _getChargeBoxUsbConnectedState = getChargeBoxUsbConnectedState, _isChargeBoxConnectedWhenCaptureStart = isChargeBoxConnectedWhenCaptureStart, _getChargeBoxBatteryLevel = getChargeBoxBatteryLevel, _isChargeBoxCharging = isChargeBoxCharging, _getStorageCardState = getStorageCardState, _getStorageCardLocation = getStorageCardLocation, _getStorageTotalSpace = getStorageTotalSpace, _getStorageFreeSpace = getStorageFreeSpace, _getVideoEncodeType = getVideoEncodeType, _setVideoEncodeType = setVideoEncodeType, _isSelfie = isSelfie, _getCameraPosture = getCameraPosture, _getCameraPostureWhenCaptureStart = getCameraPostureWhenCaptureStart, _getBtWakeupSwState = getBtWakeupSwState, _setBtWakeupSwState = setBtWakeupSwState, _getGyroTimeStamp = getGyroTimeStamp, _getWindowCropInfo = getWindowCropInfo, _getImageFlicker = getImageFlicker, _setImageFlicker = setImageFlicker, _setStandByMode = setStandByMode, _getQuickCaptureEnable = getQuickCaptureEnable, _setQuickCaptureEnable = setQuickCaptureEnable, _getBtnShutdownClickMode = getBtnShutdownClickMode, _setBtnShutdownClickMode = setBtnShutdownClickMode, _getBtnShutdownDoubleClickMode = getBtnShutdownDoubleClickMode, _setBtnShutdownDoubleClickMode = setBtnShutdownDoubleClickMode, _getBtnShutdownTripleClickMode = getBtnShutdownTripleClickMode, _setBtnShutdownTripleClickMode = setBtnShutdownTripleClickMode, _getBtnShutdownLongPressMode = getBtnShutdownLongPressMode, _setBtnShutdownLongPressMode = setBtnShutdownLongPressMode, _getBtnClickMode = getBtnClickMode, _setBtnClickMode = setBtnClickMode, _getBtnDoubleClickMode = getBtnDoubleClickMode, _setBtnDoubleClickMode = setBtnDoubleClickMode, _getBtnTripleClickMode = getBtnTripleClickMode, _setBtnTripleClickMode = setBtnTripleClickMode, _getBtnLongPressMode = getBtnLongPressMode, _setBtnLongPressMode = setBtnLongPressMode, _isMute = isMute, _setMute = setMute, _getWifiInfo = getWifiInfo, _setWifiPwd = setWifiPwd, _getButtonFollowOptions = getButtonFollowOptions, _setButtonFollowOptions = setButtonFollowOptions, _getWifiChannelCountry = getWifiChannelCountry, _setWifiChannelCountry = setWifiChannelCountry, _setCameraLanguage = setCameraLanguage, _getCameraLanguage = getCameraLanguage, _getVideoResolution = getVideoResolution, _setVideoResolution = setVideoResolution, _getVideoBitrate = getVideoBitrate, _getSubVideoMode = getSubVideoMode, _setSubVideoMode = setSubVideoMode, _getSubPhotoMode = getSubPhotoMode, _setSubPhotoMode = setSubPhotoMode, _getExpectOutputType = getExpectOutputType, _setExpectOutputType = setExpectOutputType, _getFocusSensor = getFocusSensor, _setFocusSensor = setFocusSensor, _getSensorType = getSensorType, _beginOptionsTransaction = beginOptionsTransaction, _commitOptionsTransaction = commitOptionsTransaction, _getTimelapseParams = getTimelapseParams, _setTimelapseParams = setTimelapseParams, _getExposureMode = getExposureMode, _getISO = getISO, _getShutter = getShutter, _setExposureOptions = setExposureOptions, _getExposureEV = getExposureEV, _setExposureEV = setExposureEV, _getFocalLengthValue = getFocalLengthValue, _setFocalLengthValue = setFocalLengthValue, _getVideoResolutionId = getVideoResolutionId, _setVideoResolutionId = setVideoResolutionId, _getResRecLimit = getResRecLimit, _setResRecLimit = setResRecLimit, _getRemainingTime = getRemainingTime, _getISOTopLimit = getISOTopLimit, _setISOTopLimit = setISOTopLimit, _getAEBCaptureNum = getAEBCaptureNum, _setAEBCaptureNum = setAEBCaptureNum, _getPhotoSize = getPhotoSize, _setPhotoSize = setPhotoSize, _getPhotoResolutionId = getPhotoResolutionId, _setPhotoResolutionId = setPhotoResolutionId, _getWhiteBalanceId = getWhiteBalanceId, _setWhiteBalanceId = setWhiteBalanceId, _getWhiteBalanceValue = getWhiteBalanceValue, _setWhiteBalanceValue = setWhiteBalanceValue, _getSportModeEnable = getSportModeEnable, _setSportModeEnable = setSportModeEnable, _getSportModeLevel = getSportModeLevel, _setSportModeLevel = setSportModeLevel, _getGammaMode = getGammaMode, _setGammaMode = setGammaMode, _getRawType = getRawType, _setRawType = setRawType, _getPhotoSelfTimer = getPhotoSelfTimer, _setPhotoSelfTimer = setPhotoSelfTimer, _getAccelerateFrequency = getAccelerateFrequency, _setAccelerateFrequency = setAccelerateFrequency, _getRecordDurationS = getRecordDurationS, _setRecordDurationS = setRecordDurationS, _getFlicker = getFlicker, _setFlicker = setFlicker, _getFlowstateEnable = getFlowstateEnable, _setFlowstateEnable = setFlowstateEnable, _getUnDamageZoomEnable = getUnDamageZoomEnable, _setUnDamageZoomEnable = setUnDamageZoomEnable, _getFlowstateVideoEnable = getFlowstateVideoEnable, _setFlowstateVideoEnable = setFlowstateVideoEnable, _getDarkEisEnable = getDarkEisEnable, _setDarkEisEnable = setDarkEisEnable, _getMeteringEnable = getMeteringEnable, _setMeteringEnable = setMeteringEnable, _getVideoSelfieMode = getVideoSelfieMode, _setVideoSelfieMode = setVideoSelfieMode, _getDarkEisStatus = getDarkEisStatus, _getDarkEisEnableGlobal = getDarkEisEnableGlobal, _setDarkEisEnableGlobal = setDarkEisEnableGlobal, _getMeteringEnableGlobal = getMeteringEnableGlobal, _setMeteringEnableGlobal = setMeteringEnableGlobal, _getInternalSplicingEnable = getInternalSplicingEnable, _setInternalSplicingEnable = setInternalSplicingEnable, _getVideoBitrate$1 = getVideoBitrate$1, _getFlowStateLevel = getFlowStateLevel, _setFlowStateLevel = setFlowStateLevel, _getFlowStateLevelByCv5 = getFlowStateLevelByCv5, _setFlowStateLevelByCv5 = setFlowStateLevelByCv5, _getHdrStatus = getHdrStatus, _setHdrStatus = setHdrStatus, _getSharpness = getSharpness, _setSharpness = setSharpness, _getStarLapseExportType = getStarLapseExportType, _setStarLapseExportType = setStarLapseExportType, _getPanoExposureMode = getPanoExposureMode, _setPanoExposureMode = setPanoExposureMode, _getFovType = getFovType, _setFovType = setFovType, _getBurstCaptureNum = getBurstCaptureNum, _setBurstCaptureNum = setBurstCaptureNum, _getBurstCacheNum = getBurstCacheNum, _setBurstCacheNum = setBurstCacheNum, _getBurstCaptureTime = getBurstCaptureTime, _setBurstCaptureTime = setBurstCaptureTime, _getCacheCaptureEnable = getCacheCaptureEnable, _setCacheCaptureEnable = setCacheCaptureEnable, _getZoomScale = getZoomScale, _setZoomScale = setZoomScale, _getMaxRecordTime = getMaxRecordTime, _setMaxRecordTime = setMaxRecordTime, _syncCameraSensorMode = syncCameraSensorMode, _getCameraSensorMode = getCameraSensorMode, _setCameraSensorMode = setCameraSensorMode, _supportSwitchCameraSensorMode = supportSwitchCameraSensorMode, _isCameraSingleSensorMode = isCameraSingleSensorMode, _isCameraPowerPanoMode = isCameraPowerPanoMode, _getCameraSingleSensorResolutionId = getCameraSingleSensorResolutionId, _setCameraSingleSensorResolution = setCameraSingleSensorResolution, _getCameraSingleSensorFlowstateEnable = getCameraSingleSensorFlowstateEnable, _setCameraSingleSensorFlowstate = setCameraSingleSensorFlowstate, _getCameraSingleSensorDimensionType = getCameraSingleSensorDimensionType, _setCameraSingleSensorDimensionType = setCameraSingleSensorDimensionType, _getCameraSingleSensorVisionType = getCameraSingleSensorVisionType, _setCameraSingleSensorVisionType = setCameraSingleSensorVisionType, _fetchCameraSingleSensorOptions = fetchCameraSingleSensorOptions, _openPreviewStream = openPreviewStream, _closePreviewStream = closePreviewStream, _setPipeline = setPipeline, _setPreviewImageNotify = setPreviewImageNotify, _forcePutPreviewImage = forcePutPreviewImage, _isStreamProcessing = isStreamProcessing, _isH265StreamEncode = isH265StreamEncode, _setStreamEncode = setStreamEncode, _requestStreamIframe = requestStreamIframe, _getPreviewStats = getPreviewStats, _getCurFirstStreamResolution = getCurFirstStreamResolution, _getCurSecondStreamResolution = getCurSecondStreamResolution, _getCurRealCameraStreamResolution = getCurRealCameraStreamResolution, _getSecondStreamResolution = getSecondStreamResolution, _getAudioCodec = getAudioCodec, _getPreviewNum = getPreviewNum, _getRenderMode = getRenderMode, _isCameraWorking = isCameraWorking, _isCameraRecordOnPause = isCameraRecordOnPause, _getCaptureType = getCaptureType, _getCaptureStatus = getCaptureStatus, _getCaptureSubStatus = getCaptureSubStatus, _getCaptureTime = getCaptureTime, _getCaptureCount = getCaptureCount, _getCaptureKeyTimePointDetail = getCaptureKeyTimePointDetail, _startNormalCapture = startNormalCapture, _startCaptureWhileRecording = startCaptureWhileRecording, _isNormalCapturing = isNormalCapturing, _startNormalPanoCapture = startNormalPanoCapture, _isNormalPanoCapturing = isNormalPanoCapturing, _startHDRCapture = startHDRCapture, _isHDRCapturing = isHDRCapturing, _startHDRPanoCapture = startHDRPanoCapture, _isHDRPanoCapturing = isHDRPanoCapturing, _startNightScene = startNightScene, _isNightSceneCapturing = isNightSceneCapturing, _startIntervalShooting = startIntervalShooting, _stopIntervalShooting = stopIntervalShooting, _isIntervalShooting = isIntervalShooting, _startStarLapseShooting = startStarLapseShooting, _stopStarLapseShooting = stopStarLapseShooting, _isStarLapseShooting = isStarLapseShooting, _startBurstCapture = startBurstCapture, _isBurstCapturing = isBurstCapturing, _startNormalRecord = startNormalRecord, _stopNormalRecord = stopNormalRecord, _isNormalRecording = isNormalRecording, _startSuperRecord = startSuperRecord, _stopSuperRecord = stopSuperRecord, _isSuperRecording = isSuperRecording, _startHDRRecord = startHDRRecord, _stopHDRRecord = stopHDRRecord, _isHDRRecording = isHDRRecording, _startBulletTime = startBulletTime, _stopBulletTime = stopBulletTime, _isBulletTimeRecording = isBulletTimeRecording, _startTimeShift = startTimeShift, _stopTimeShift = stopTimeShift, _isTimeShiftRecording = isTimeShiftRecording, _startLooperRecording = startLooperRecording, _stopLooperRecording = stopLooperRecording, _isLooperRecording = isLooperRecording, _startFpvRecord = startFpvRecord, _stopFpvRecord = stopFpvRecord, _isFpvRecording = isFpvRecording, _startMovieRecord = startMovieRecord, _stopMovieRecord = stopMovieRecord, _isMovieRecording = isMovieRecording, _startSlowMotionRecord = startSlowMotionRecord, _stopSlowMotionRecord = stopSlowMotionRecord, _isSlowMotionRecording = isSlowMotionRecording, _startSelfieRecord = startSelfieRecord, _stopSelfieRecord = stopSelfieRecord, _isSelfieRecording = isSelfieRecording, _startPureRecord = startPureRecord, _stopPureRecord = stopPureRecord, _isPureRecording = isPureRecording, _startIntervalRecord = startIntervalRecord, _stopIntervalRecord = stopIntervalRecord, _isIntervalRecording = isIntervalRecording, _startTimelapse = startTimelapse, _stopTimelapse = stopTimelapse, _isTimelapseRecording = isTimelapseRecording, _startStaticTimelapse = startStaticTimelapse, _stopStaticTimelapse = stopStaticTimelapse, _isStaticTimelapseRecording = isStaticTimelapseRecording, _pauseRecord = pauseRecord, _startLive = startLive, _stopLive = stopLive, _resetRecord = resetRecord, _fetchAllOptions = fetchAllOptions, _fetchOptions = fetchOptions, _fetchPhotoOptions = fetchPhotoOptions, _fetchStorageState = fetchStorageState, _fetchBatteryState = fetchBatteryState, _formatStorage = formatStorage, _setAccessCameraFileState = setAccessCameraFileState, _getCameraFile = getCameraFile, _packLogFile = packLogFile, _setLogFileTransferState = setLogFileTransferState, _deleteLogFile = deleteLogFile, _getFileList = getFileList, _getFileListIncludeRecording = getFileListIncludeRecording, _getFileInfoList = getFileInfoList, _deleteFileList = deleteFileList, _calibrateGyro = calibrateGyro, _getFileGps = getFileGps, _getFileThumbnail = getFileThumbnail, _getFileThumbnailExt = getFileThumbnailExt, _getFileExposureTimeData = getFileExposureTimeData, _getFileGyroData = getFileGyroData, _getFileTimelapseTimestamp = getFileTimelapseTimestamp, _getFileExtraMetaData = getFileExtraMetaData, _setFileExtraMetaData = setFileExtraMetaData, _getFileExtraHighlight = getFileExtraHighlight, _getFileExtraAutoEditor = getFileExtraAutoEditor, _cancelAuthorization = cancelAuthorization, _requestAuthorization = requestAuthorization, _cancelRequestAuthorization = cancelRequestAuthorization, _setGpsData = setGpsData, _setKeyTimePoint = setKeyTimePoint, _setBleRemoteControllerListener = setBleRemoteControllerListener, _scanBleRemoteController = scanBleRemoteController, _connectBleRemoteControl = connectBleRemoteControl, _disconnectBle = disconnectBle, _getBleRemoteVersion = getBleRemoteVersion, _setBleRemoteVersion = setBleRemoteVersion, _getBleRemoteType = getBleRemoteType, _openCameraWifi = openCameraWifi, _closeCameraWifi = closeCameraWifi, _resetCameraWifi = resetCameraWifi, _notifyOTAError = notifyOTAError, _setCameraWifiSeizable = setCameraWifiSeizable, _uploadScriptJson = uploadScriptJson, _uploadScriptCmd = uploadScriptCmd, _refreshScript = refreshScript, _runScript = runScript, _addFmgButtonClickListener = addFmgButtonClickListener, _removeFmgButtonClickListener = removeFmgButtonClickListener, _startFmgUpgrade = startFmgUpgrade, _cancelFmgUpgrade = cancelFmgUpgrade, _getFmgMode = getFmgMode, _setFmgMode = setFmgMode, _isFmgSportMode = isFmgSportMode, _isFmgImbalance = isFmgImbalance, _getFmgFollowSpeed = getFmgFollowSpeed, _setFmgFollowSpeed = setFmgFollowSpeed, _getFmgRcSpeed = getFmgRcSpeed, _setFmgButtonEnabled = setFmgButtonEnabled, _setFmgButtonDisabled = setFmgButtonDisabled, _setFmgRcSpeed = setFmgRcSpeed, _getFmgZoomSpeed = getFmgZoomSpeed, _setFmgZoomSpeed = setFmgZoomSpeed, _getFmgHorizontalDir = getFmgHorizontalDir, _setFmgHorizontalDir = setFmgHorizontalDir, _getFmgVerticalDir = getFmgVerticalDir, _setFmgVerticalDir = setFmgVerticalDir, _getFmgSoundEnable = getFmgSoundEnable, _getFmgSwitchModeWay = getFmgSwitchModeWay, _setFmgSwitchModeWay = setFmgSwitchModeWay, _setFmgSoundEnable = setFmgSoundEnable, _getFmgHvMode = getFmgHvMode, _setFmgHvMode = setFmgHvMode, _isFmgLimitedYaw = isFmgLimitedYaw, _isFmgLimitedPitch = isFmgLimitedPitch, _isFmgSleep = isFmgSleep, _isFmgStalled = isFmgStalled, _isFmgPayload = isFmgPayload, _getFmgVerticalTrimDegree = getFmgVerticalTrimDegree, _setFmgVerticalTrimDegree = setFmgVerticalTrimDegree, _startOrUpdateFmgTargetFollow = startOrUpdateFmgTargetFollow, _lostFmgTargetFollow = lostFmgTargetFollow, _exitFmgTargetFollow = exitFmgTargetFollow, _speculateFmgTargetFollow = speculateFmgTargetFollow, _setFmgZoomScale = setFmgZoomScale, _getFmgAngle = getFmgAngle, _getFmgSpeed = getFmgSpeed, _setFmgAngle = setFmgAngle, _setFmgSpeed = setFmgSpeed, _setFmgIdle = setFmgIdle, _setFmgTimeElapse = setFmgTimeElapse, _setFmgPano = setFmgPano, _resetFmgDefaultSettings = resetFmgDefaultSettings, _getFmgTrackSensitivityMode = getFmgTrackSensitivityMode, _setFmgTrackSensitivityMode = setFmgTrackSensitivityMode, _startFmgRecMode = startFmgRecMode, _stopFmgRecMode = stopFmgRecMode, _initFmgRecMode = initFmgRecMode, _fmgVibration = fmgVibration, _enableFmgHandDrag = enableFmgHandDrag, _disableFmgHandDrag = disableFmgHandDrag, _setFmgCameraFacing = setFmgCameraFacing, _updateFmgPhoneImu = updateFmgPhoneImu, _getFmgAnalyticsData = getFmgAnalyticsData, _setFmgAngleSeq = setFmgAngleSeq, _clearFmgAnalyticsData = clearFmgAnalyticsData, _startFmgHeartBeat = startFmgHeartBeat, _stopFmgHeartBeat = stopFmgHeartBeat;

  

  final void Function() _init;
  final bool init$async;
  final void Function() _destroy;
  final bool destroy$async;
  final void Function(_$jni.JObject instaCamera) _setInstaCamera;
  final bool setInstaCamera$async;
  final void Function(BaseCamera baseCamera) _setBaseCamera;
  final bool setBaseCamera$async;
  final void Function(IBaseCameraChangedCallback iBaseCameraChangedCallback) _setBaseCameraChangedCallback;
  final bool setBaseCameraChangedCallback$async;
  final void Function(ICameraController_o00oOoo o00oOoo) _setSyncStatusChangeListener;
  final bool setSyncStatusChangeListener$async;
  final void Function(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener) _setCaptureStatusChangeListener;
  final bool setCaptureStatusChangeListener$async;
  final void Function(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener) _setPreviewStatusChangedListener;
  final bool setPreviewStatusChangedListener$async;
  final void Function(_$jni.JObject oooO00o) _setDeveloperConfigProvider;
  final bool setDeveloperConfigProvider$async;
  final void Function(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener) _setCameraLiveListener;
  final bool setCameraLiveListener$async;
  final void Function(int i, int i1, _$jni.JObject object) _onCameraInfoNotify;
  final bool onCameraInfoNotify$async;
  final _$jni.JString Function() _getCameraHost;
  final int Function() _getPort;
  final _$jni.JString Function() _getFirmwareUploadPath;
  final _$jni.JString Function() _getCameraFileUploadPath;
  final bool Function() _supportUploadFileToCamera;
  final int Function() _getVersionValidLength;
  final void Function(bool z) _setAssistiveGridEnable;
  final bool setAssistiveGridEnable$async;
  final bool Function() _getAssistiveGridEnable;
  final void Function(bool z) _setFreeFrameGridEnable;
  final bool setFreeFrameGridEnable$async;
  final bool Function() _getFreeFrameGridEnable;
  final void Function() _freeze;
  final bool freeze$async;
  final void Function() _unfreeze;
  final bool unfreeze$async;
  final bool Function() _isFrozen;
  final void Function(BaseCamera_CameraSyncStatus cameraSyncStatus) _changeCameraSyncStatus;
  final bool changeCameraSyncStatus$async;
  final BaseCamera_CameraSyncStatus Function() _getCurCameraSyncStatus;
  final BaseCamera_CameraSyncStatus Function() _getLastCameraSyncStatus;
  final bool Function() _isCameraBusy;
  final void Function(BaseCamera_ConnectType connectType) _setConnectType;
  final bool setConnectType$async;
  final bool Function() _onlySupportBleConnect;
  final bool Function() _isCaptureByUser;
  final void Function(ICameraController_OooOOOO oooOOOO) _fetchCameraType;
  final bool fetchCameraType$async;
  final void Function() _startSync;
  final bool startSync$async;
  final void Function(ICameraController_OooO00o oooO00o) _setAuthorizationChecker;
  final bool setAuthorizationChecker$async;
  final void Function(_$jni.JList<ICameraCheck> list) _setCheckActivationList;
  final bool setCheckActivationList$async;
  final void Function() _continueCameraCheck;
  final bool continueCameraCheck$async;
  final _$jni.JString Function() _getSerial;
  final void Function(_$jni.JString string) _setSerial;
  final bool setSerial$async;
  final _$jni.JString Function() _getUUID;
  final _$jni.JString Function() _getVR360Senor0Serial;
  final _$jni.JString Function() _getVR360Senor1Serial;
  final _$jni.JString Function() _getVR180SenorSerial;
  final _$jni.JArray<_$jni.JString> Function() _getSensorSerials;
  final _$jni.JString Function() _getCameraType;
  final _$jni.JString Function() _getCameraName;
  final _$jni.JString Function() _getFWVersion;
  final _$jni.JString Function() _getCameraFwVersion;
  final _$jni.JString Function() _getCameraBleVersion;
  final _$jni.JString Function() _getChargeBoxFwVersion;
  final _$jni.JString Function() _getChargeBoxBleVersion;
  final void Function(_$jni.JString string) _setMediaOffset;
  final bool setMediaOffset$async;
  final _$jni.JString Function() _getMediaOffset;
  final _$jni.JString Function() _getMediaOffsetV2;
  final _$jni.JString Function() _getMediaOffsetV3;
  final void Function(_$jni.JString string) _setOriginalOffset;
  final bool setOriginalOffset$async;
  final _$jni.JString Function() _getOriginalOffset;
  final _$jni.JString Function() _getOriginalOffsetV2;
  final _$jni.JString Function() _getOriginalOffsetV3;
  final void Function(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5) _setAllOffset;
  final bool setAllOffset$async;
  final int Function() _getOffsetState;
  final int Function() _getActiveTime;
  final void Function(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setActiveTime;
  final bool setActiveTime$async;
  final int Function() _getBatteryLevel;
  final bool Function() _isCharging;
  final bool Function() _isHighTemperature;
  final bool Function() _isLowTemperature;
  final int Function() _getBatteryType;
  final bool Function() _isChargeBoxConnected;
  final int Function() _getChargeBoxUsbConnectedState;
  final bool Function() _isChargeBoxConnectedWhenCaptureStart;
  final int Function() _getChargeBoxBatteryLevel;
  final bool Function() _isChargeBoxCharging;
  final int Function() _getStorageCardState;
  final int Function() _getStorageCardLocation;
  final int Function() _getStorageTotalSpace;
  final int Function() _getStorageFreeSpace;
  final int Function() _getVideoEncodeType;
  final void Function(int i) _setVideoEncodeType;
  final bool setVideoEncodeType$async;
  final bool Function() _isSelfie;
  final int Function() _getCameraPosture;
  final int Function() _getCameraPostureWhenCaptureStart;
  final int Function() _getBtWakeupSwState;
  final void Function(int i) _setBtWakeupSwState;
  final bool setBtWakeupSwState$async;
  final double Function() _getGyroTimeStamp;
  final _$jni.JObject Function() _getWindowCropInfo;
  final int Function() _getImageFlicker;
  final void Function(int i) _setImageFlicker;
  final bool setImageFlicker$async;
  final void Function(int i, ICameraController_o00O0000 o00O0000) _setStandByMode;
  final bool setStandByMode$async;
  final bool Function() _getQuickCaptureEnable;
  final void Function(bool z) _setQuickCaptureEnable;
  final bool setQuickCaptureEnable$async;
  final int Function() _getBtnShutdownClickMode;
  final void Function(int i) _setBtnShutdownClickMode;
  final bool setBtnShutdownClickMode$async;
  final int Function() _getBtnShutdownDoubleClickMode;
  final void Function(int i) _setBtnShutdownDoubleClickMode;
  final bool setBtnShutdownDoubleClickMode$async;
  final int Function() _getBtnShutdownTripleClickMode;
  final void Function(int i) _setBtnShutdownTripleClickMode;
  final bool setBtnShutdownTripleClickMode$async;
  final int Function() _getBtnShutdownLongPressMode;
  final void Function(int i) _setBtnShutdownLongPressMode;
  final bool setBtnShutdownLongPressMode$async;
  final int Function() _getBtnClickMode;
  final void Function(int i) _setBtnClickMode;
  final bool setBtnClickMode$async;
  final int Function() _getBtnDoubleClickMode;
  final void Function(int i) _setBtnDoubleClickMode;
  final bool setBtnDoubleClickMode$async;
  final int Function() _getBtnTripleClickMode;
  final void Function(int i) _setBtnTripleClickMode;
  final bool setBtnTripleClickMode$async;
  final int Function() _getBtnLongPressMode;
  final void Function(int i) _setBtnLongPressMode;
  final bool setBtnLongPressMode$async;
  final bool Function() _isMute;
  final void Function(bool z) _setMute;
  final bool setMute$async;
  final _$jni.JObject Function() _getWifiInfo;
  final void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setWifiPwd;
  final bool setWifiPwd$async;
  final _$jni.JObject Function() _getButtonFollowOptions;
  final void Function(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setButtonFollowOptions;
  final bool setButtonFollowOptions$async;
  final _$jni.JString Function() _getWifiChannelCountry;
  final void Function(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setWifiChannelCountry;
  final bool setWifiChannelCountry$async;
  final void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions) _setCameraLanguage;
  final bool setCameraLanguage$async;
  final int Function() _getCameraLanguage;
  final VideoResolution Function() _getVideoResolution;
  final void Function(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setVideoResolution;
  final bool setVideoResolution$async;
  final int Function() _getVideoBitrate;
  final int Function() _getSubVideoMode;
  final void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setSubVideoMode;
  final bool setSubVideoMode$async;
  final int Function() _getSubPhotoMode;
  final void Function(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) _setSubPhotoMode;
  final bool setSubPhotoMode$async;
  final int Function() _getExpectOutputType;
  final void Function(int i) _setExpectOutputType;
  final bool setExpectOutputType$async;
  final int Function() _getFocusSensor;
  final void Function(int i) _setFocusSensor;
  final bool setFocusSensor$async;
  final int Function() _getSensorType;
  final void Function() _beginOptionsTransaction;
  final bool beginOptionsTransaction$async;
  final void Function(ICameraController_o000O0o o000O0o) _commitOptionsTransaction;
  final bool commitOptionsTransaction$async;
  final TimelapseParams Function(int i) _getTimelapseParams;
  final void Function(int i, TimelapseParams timelapseParams) _setTimelapseParams;
  final bool setTimelapseParams$async;
  final int Function(int i, bool z) _getExposureMode;
  final int Function(int i, bool z) _getISO;
  final double Function(int i, bool z) _getShutter;
  final void Function(int i, int i1, int i2, double d, bool z) _setExposureOptions;
  final bool setExposureOptions$async;
  final int Function(int i) _getExposureEV;
  final void Function(int i, int i1) _setExposureEV;
  final bool setExposureEV$async;
  final double Function(int i) _getFocalLengthValue;
  final void Function(int i, double d) _setFocalLengthValue;
  final bool setFocalLengthValue$async;
  final int Function(int i) _getVideoResolutionId;
  final void Function(int i, int i1, ICameraController_o00 o00) _setVideoResolutionId;
  final bool setVideoResolutionId$async;
  final _$jni.JList<_$jni.JObject> Function(int i) _getResRecLimit;
  final void Function(int i, _$jni.JList<_$jni.JObject> list) _setResRecLimit;
  final bool setResRecLimit$async;
  final int Function(int i) _getRemainingTime;
  final int Function(int i) _getISOTopLimit;
  final void Function(int i, int i1) _setISOTopLimit;
  final bool setISOTopLimit$async;
  final int Function(int i) _getAEBCaptureNum;
  final void Function(int i, int i1) _setAEBCaptureNum;
  final bool setAEBCaptureNum$async;
  final int Function(int i) _getPhotoSize;
  final void Function(int i, int i1) _setPhotoSize;
  final bool setPhotoSize$async;
  final int Function(int i) _getPhotoResolutionId;
  final void Function(int i, int i1, ICameraController_o00 o00) _setPhotoResolutionId;
  final bool setPhotoResolutionId$async;
  final int Function(int i) _getWhiteBalanceId;
  final void Function(int i, int i1) _setWhiteBalanceId;
  final bool setWhiteBalanceId$async;
  final int Function(int i) _getWhiteBalanceValue;
  final void Function(int i, int i1) _setWhiteBalanceValue;
  final bool setWhiteBalanceValue$async;
  final bool Function(int i) _getSportModeEnable;
  final void Function(int i, bool z) _setSportModeEnable;
  final bool setSportModeEnable$async;
  final int Function(int i) _getSportModeLevel;
  final void Function(int i, int i1) _setSportModeLevel;
  final bool setSportModeLevel$async;
  final int Function(int i) _getGammaMode;
  final void Function(int i, int i1) _setGammaMode;
  final bool setGammaMode$async;
  final int Function(int i) _getRawType;
  final void Function(int i, int i1) _setRawType;
  final bool setRawType$async;
  final int Function(int i) _getPhotoSelfTimer;
  final void Function(int i, int i1) _setPhotoSelfTimer;
  final bool setPhotoSelfTimer$async;
  final int Function(int i) _getAccelerateFrequency;
  final void Function(int i, int i1) _setAccelerateFrequency;
  final bool setAccelerateFrequency$async;
  final int Function(int i) _getRecordDurationS;
  final void Function(int i, int i1) _setRecordDurationS;
  final bool setRecordDurationS$async;
  final int Function(int i) _getFlicker;
  final void Function(int i, int i1) _setFlicker;
  final bool setFlicker$async;
  final bool Function(int i) _getFlowstateEnable;
  final void Function(int i, bool z) _setFlowstateEnable;
  final bool setFlowstateEnable$async;
  final bool Function(int i) _getUnDamageZoomEnable;
  final void Function(int i, bool z) _setUnDamageZoomEnable;
  final bool setUnDamageZoomEnable$async;
  final bool Function(int i) _getFlowstateVideoEnable;
  final void Function(int i, bool z) _setFlowstateVideoEnable;
  final bool setFlowstateVideoEnable$async;
  final bool Function(int i) _getDarkEisEnable;
  final void Function(int i, bool z) _setDarkEisEnable;
  final bool setDarkEisEnable$async;
  final bool Function(int i) _getMeteringEnable;
  final void Function(int i, bool z) _setMeteringEnable;
  final bool setMeteringEnable$async;
  final int Function(int i) _getVideoSelfieMode;
  final void Function(int i, int i1, ICameraController_o00 o00) _setVideoSelfieMode;
  final bool setVideoSelfieMode$async;
  final void Function(ICameraController_o0000oo o0000oo) _getDarkEisStatus;
  final bool getDarkEisStatus$async;
  final bool Function() _getDarkEisEnableGlobal;
  final void Function(bool z) _setDarkEisEnableGlobal;
  final bool setDarkEisEnableGlobal$async;
  final bool Function() _getMeteringEnableGlobal;
  final void Function(bool z) _setMeteringEnableGlobal;
  final bool setMeteringEnableGlobal$async;
  final bool Function() _getInternalSplicingEnable;
  final void Function(bool z) _setInternalSplicingEnable;
  final bool setInternalSplicingEnable$async;
  final int Function(int i) _getVideoBitrate$1;
  final int Function(int i) _getFlowStateLevel;
  final void Function(int i, int i1) _setFlowStateLevel;
  final bool setFlowStateLevel$async;
  final int Function(int i) _getFlowStateLevelByCv5;
  final void Function(int i, int i1) _setFlowStateLevelByCv5;
  final bool setFlowStateLevelByCv5$async;
  final bool Function(int i) _getHdrStatus;
  final void Function(int i, bool z) _setHdrStatus;
  final bool setHdrStatus$async;
  final int Function(int i) _getSharpness;
  final void Function(int i, int i1) _setSharpness;
  final bool setSharpness$async;
  final int Function(int i) _getStarLapseExportType;
  final void Function(int i, int i1) _setStarLapseExportType;
  final bool setStarLapseExportType$async;
  final int Function(int i) _getPanoExposureMode;
  final void Function(int i, int i1) _setPanoExposureMode;
  final bool setPanoExposureMode$async;
  final int Function(int i) _getFovType;
  final void Function(int i, int i1, ICameraController_o00 o00) _setFovType;
  final bool setFovType$async;
  final int Function(int i) _getBurstCaptureNum;
  final void Function(int i, int i1) _setBurstCaptureNum;
  final bool setBurstCaptureNum$async;
  final int Function(int i) _getBurstCacheNum;
  final void Function(int i, int i1) _setBurstCacheNum;
  final bool setBurstCacheNum$async;
  final int Function(int i) _getBurstCaptureTime;
  final void Function(int i, int i1) _setBurstCaptureTime;
  final bool setBurstCaptureTime$async;
  final bool Function(int i) _getCacheCaptureEnable;
  final void Function(int i, bool z) _setCacheCaptureEnable;
  final bool setCacheCaptureEnable$async;
  final double Function(int i) _getZoomScale;
  final void Function(int i, double d) _setZoomScale;
  final bool setZoomScale$async;
  final int Function(int i) _getMaxRecordTime;
  final void Function(int i, int i1) _setMaxRecordTime;
  final bool setMaxRecordTime$async;
  final void Function(ICameraController_o0000Ooo o0000Ooo) _syncCameraSensorMode;
  final bool syncCameraSensorMode$async;
  final int Function() _getCameraSensorMode;
  final void Function(int i, ICameraController_o000OO0O o000OO0O) _setCameraSensorMode;
  final bool setCameraSensorMode$async;
  final bool Function() _supportSwitchCameraSensorMode;
  final bool Function() _isCameraSingleSensorMode;
  final bool Function() _isCameraPowerPanoMode;
  final int Function(int i) _getCameraSingleSensorResolutionId;
  final void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) _setCameraSingleSensorResolution;
  final bool setCameraSingleSensorResolution$async;
  final bool Function(int i) _getCameraSingleSensorFlowstateEnable;
  final void Function(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0) _setCameraSingleSensorFlowstate;
  final bool setCameraSingleSensorFlowstate$async;
  final int Function(int i) _getCameraSingleSensorDimensionType;
  final void Function(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) _setCameraSingleSensorDimensionType;
  final bool setCameraSingleSensorDimensionType$async;
  final int Function(int i) _getCameraSingleSensorVisionType;
  final void Function(int i, int i1, int i2) _setCameraSingleSensorVisionType;
  final bool setCameraSingleSensorVisionType$async;
  final void Function(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) _fetchCameraSingleSensorOptions;
  final bool fetchCameraSingleSensorOptions$async;
  final void Function(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2) _openPreviewStream;
  final bool openPreviewStream$async;
  final void Function() _closePreviewStream;
  final bool closePreviewStream$async;
  final void Function(_$jni.JObject iCameraPreviewPipeline) _setPipeline;
  final bool setPipeline$async;
  final void Function(_$jni.JObject previewImageNotify, _$jni.JObject handler) _setPreviewImageNotify;
  final bool setPreviewImageNotify$async;
  final void Function(_$jni.JArray<_$jni.JObject> imageDatas) _forcePutPreviewImage;
  final bool forcePutPreviewImage$async;
  final bool Function() _isStreamProcessing;
  final bool Function() _isH265StreamEncode;
  final void Function(bool z) _setStreamEncode;
  final bool setStreamEncode$async;
  final void Function() _requestStreamIframe;
  final bool requestStreamIframe$async;
  final BaseCamera_PreviewStatus Function() _getPreviewStats;
  final StreamResolution Function() _getCurFirstStreamResolution;
  final StreamResolution Function() _getCurSecondStreamResolution;
  final VideoResolution Function() _getCurRealCameraStreamResolution;
  final StreamResolution Function() _getSecondStreamResolution;
  final int Function() _getAudioCodec;
  final int Function() _getPreviewNum;
  final _$jni.JObject Function() _getRenderMode;
  final bool Function() _isCameraWorking;
  final bool Function() _isCameraRecordOnPause;
  final BaseCamera_CaptureType Function() _getCaptureType;
  final BaseCamera_CaptureStatus Function() _getCaptureStatus;
  final BaseCamera_CaptureSubStatus Function() _getCaptureSubStatus;
  final int Function() _getCaptureTime;
  final int Function() _getCaptureCount;
  final _$jni.JString Function() _getCaptureKeyTimePointDetail;
  final void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) _startNormalCapture;
  final bool startNormalCapture$async;
  final void Function(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO) _startCaptureWhileRecording;
  final bool startCaptureWhileRecording$async;
  final bool Function() _isNormalCapturing;
  final void Function(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) _startNormalPanoCapture;
  final bool startNormalPanoCapture$async;
  final bool Function() _isNormalPanoCapturing;
  final void Function(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1) _startHDRCapture;
  final bool startHDRCapture$async;
  final bool Function() _isHDRCapturing;
  final void Function(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) _startHDRPanoCapture;
  final bool startHDRPanoCapture$async;
  final bool Function() _isHDRPanoCapturing;
  final void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) _startNightScene;
  final bool startNightScene$async;
  final bool Function() _isNightSceneCapturing;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _startIntervalShooting;
  final bool startIntervalShooting$async;
  final void Function() _stopIntervalShooting;
  final bool stopIntervalShooting$async;
  final bool Function() _isIntervalShooting;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _startStarLapseShooting;
  final bool startStarLapseShooting$async;
  final void Function() _stopStarLapseShooting;
  final bool stopStarLapseShooting$async;
  final bool Function() _isStarLapseShooting;
  final void Function(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) _startBurstCapture;
  final bool startBurstCapture$async;
  final bool Function() _isBurstCapturing;
  final void Function() _startNormalRecord;
  final bool startNormalRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopNormalRecord;
  final bool stopNormalRecord$async;
  final bool Function() _isNormalRecording;
  final void Function() _startSuperRecord;
  final bool startSuperRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopSuperRecord;
  final bool stopSuperRecord$async;
  final bool Function() _isSuperRecording;
  final void Function() _startHDRRecord;
  final bool startHDRRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopHDRRecord;
  final bool stopHDRRecord$async;
  final bool Function() _isHDRRecording;
  final void Function() _startBulletTime;
  final bool startBulletTime$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopBulletTime;
  final bool stopBulletTime$async;
  final bool Function() _isBulletTimeRecording;
  final void Function() _startTimeShift;
  final bool startTimeShift$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopTimeShift;
  final bool stopTimeShift$async;
  final bool Function() _isTimeShiftRecording;
  final void Function() _startLooperRecording;
  final bool startLooperRecording$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopLooperRecording;
  final bool stopLooperRecording$async;
  final bool Function() _isLooperRecording;
  final void Function() _startFpvRecord;
  final bool startFpvRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopFpvRecord;
  final bool stopFpvRecord$async;
  final bool Function() _isFpvRecording;
  final void Function() _startMovieRecord;
  final bool startMovieRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopMovieRecord;
  final bool stopMovieRecord$async;
  final bool Function() _isMovieRecording;
  final void Function() _startSlowMotionRecord;
  final bool startSlowMotionRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopSlowMotionRecord;
  final bool stopSlowMotionRecord$async;
  final bool Function() _isSlowMotionRecording;
  final void Function() _startSelfieRecord;
  final bool startSelfieRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopSelfieRecord;
  final bool stopSelfieRecord$async;
  final bool Function() _isSelfieRecording;
  final void Function() _startPureRecord;
  final bool startPureRecord$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopPureRecord;
  final bool stopPureRecord$async;
  final bool Function() _isPureRecording;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _startIntervalRecord;
  final bool startIntervalRecord$async;
  final void Function() _stopIntervalRecord;
  final bool stopIntervalRecord$async;
  final bool Function() _isIntervalRecording;
  final void Function() _startTimelapse;
  final bool startTimelapse$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopTimelapse;
  final bool stopTimelapse$async;
  final bool Function() _isTimelapseRecording;
  final void Function() _startStaticTimelapse;
  final bool startStaticTimelapse$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _stopStaticTimelapse;
  final bool stopStaticTimelapse$async;
  final bool Function() _isStaticTimelapseRecording;
  final void Function() _pauseRecord;
  final bool pauseRecord$async;
  final void Function(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1) _startLive;
  final bool startLive$async;
  final void Function() _stopLive;
  final bool stopLive$async;
  final void Function() _resetRecord;
  final bool resetRecord$async;
  final void Function(ICameraController_IFetchOptionsListener iFetchOptionsListener) _fetchAllOptions;
  final bool fetchAllOptions$async;
  final void Function(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) _fetchOptions;
  final bool fetchOptions$async;
  final void Function(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) _fetchPhotoOptions;
  final bool fetchPhotoOptions$async;
  final void Function() _fetchStorageState;
  final bool fetchStorageState$async;
  final void Function() _fetchBatteryState;
  final bool fetchBatteryState$async;
  final void Function(ICameraController_o00000O o00000O) _formatStorage;
  final bool formatStorage$async;
  final void Function(int i) _setAccessCameraFileState;
  final bool setAccessCameraFileState$async;
  final void Function(int i, ICameraController_o00000OO o00000OO) _getCameraFile;
  final bool getCameraFile$async;
  final void Function(int i, ICameraController_o00000OO o00000OO) _packLogFile;
  final bool packLogFile$async;
  final void Function(int i, int i1, ICameraController_o000OOo0 o000OOo0) _setLogFileTransferState;
  final bool setLogFileTransferState$async;
  final void Function(int i) _deleteLogFile;
  final bool deleteLogFile$async;
  final void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) _getFileList;
  final bool getFileList$async;
  final void Function(int i, int i1, int i2, ICameraController_o000OO o000OO) _getFileListIncludeRecording;
  final bool getFileListIncludeRecording$async;
  final void Function(ICameraController_o0000O0O o0000O0O) _getFileInfoList;
  final bool getFileInfoList$async;
  final void Function(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list) _deleteFileList;
  final bool deleteFileList$async;
  final void Function(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback) _calibrateGyro;
  final bool calibrateGyro$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileGps;
  final bool getFileGps$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileThumbnail;
  final bool getFileThumbnail$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileThumbnailExt;
  final bool getFileThumbnailExt$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileExposureTimeData;
  final bool getFileExposureTimeData$async;
  final void Function(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0) _getFileGyroData;
  final bool getFileGyroData$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileTimelapseTimestamp;
  final bool getFileTimelapseTimestamp$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileExtraMetaData;
  final bool getFileExtraMetaData$async;
  final void Function(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00) _setFileExtraMetaData;
  final bool setFileExtraMetaData$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileExtraHighlight;
  final bool getFileExtraHighlight$async;
  final void Function(_$jni.JString string, ICameraController_o0000O0 o0000O0) _getFileExtraAutoEditor;
  final bool getFileExtraAutoEditor$async;
  final void Function(ICameraController_OooO0o oooO0o) _cancelAuthorization;
  final bool cancelAuthorization$async;
  final void Function(int i, ICameraController_o000O0 o000O0) _requestAuthorization;
  final bool requestAuthorization$async;
  final void Function(int i, ICameraController_OooO0o oooO0o) _cancelRequestAuthorization;
  final bool cancelRequestAuthorization$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs) _setGpsData;
  final bool setGpsData$async;
  final void Function(int j, int i, _$jni.JString string) _setKeyTimePoint;
  final bool setKeyTimePoint$async;
  final void Function(ICameraController_OooO0OO oooO0OO) _setBleRemoteControllerListener;
  final bool setBleRemoteControllerListener$async;
  final void Function() _scanBleRemoteController;
  final bool scanBleRemoteController$async;
  final void Function(_$jni.JObject bTPeripheral) _connectBleRemoteControl;
  final bool connectBleRemoteControl$async;
  final void Function(_$jni.JObject bTPeripheral) _disconnectBle;
  final bool disconnectBle$async;
  final _$jni.JString Function() _getBleRemoteVersion;
  final void Function(_$jni.JString string) _setBleRemoteVersion;
  final bool setBleRemoteVersion$async;
  final int Function() _getBleRemoteType;
  final void Function(ICameraController_o000O00O o000O00O) _openCameraWifi;
  final bool openCameraWifi$async;
  final void Function(ICameraController_OooOO0O oooOO0O) _closeCameraWifi;
  final bool closeCameraWifi$async;
  final void Function(ICameraController_o000O0Oo o000O0Oo) _resetCameraWifi;
  final bool resetCameraWifi$async;
  final void Function(ICameraController_o000O00 o000O00) _notifyOTAError;
  final bool notifyOTAError$async;
  final void Function(int i, ICameraController_o000O o000O) _setCameraWifiSeizable;
  final bool setCameraWifiSeizable$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) _uploadScriptJson;
  final bool uploadScriptJson$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) _uploadScriptCmd;
  final bool uploadScriptCmd$async;
  final void Function(ICameraController_OooOOO oooOOO) _refreshScript;
  final bool refreshScript$async;
  final void Function(ICameraController_OooOOO oooOOO) _runScript;
  final bool runScript$async;
  final void Function(ICameraController_OooOo00 oooOo00) _addFmgButtonClickListener;
  final bool addFmgButtonClickListener$async;
  final void Function(ICameraController_OooOo00 oooOo00) _removeFmgButtonClickListener;
  final bool removeFmgButtonClickListener$async;
  final void Function(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0) _startFmgUpgrade;
  final bool startFmgUpgrade$async;
  final void Function() _cancelFmgUpgrade;
  final bool cancelFmgUpgrade$async;
  final _$jni.JObject Function() _getFmgMode;
  final void Function(_$jni.JObject ptzMode) _setFmgMode;
  final bool setFmgMode$async;
  final bool Function() _isFmgSportMode;
  final bool Function() _isFmgImbalance;
  final _$jni.JObject Function() _getFmgFollowSpeed;
  final void Function(_$jni.JObject ptzFollowSpeed) _setFmgFollowSpeed;
  final bool setFmgFollowSpeed$async;
  final _$jni.JObject Function() _getFmgRcSpeed;
  final void Function(_$jni.JObject fmgButtonAbleParams) _setFmgButtonEnabled;
  final bool setFmgButtonEnabled$async;
  final void Function(_$jni.JObject fmgButtonAbleParams) _setFmgButtonDisabled;
  final bool setFmgButtonDisabled$async;
  final void Function(_$jni.JObject ptzRcSpeed) _setFmgRcSpeed;
  final bool setFmgRcSpeed$async;
  final _$jni.JObject Function() _getFmgZoomSpeed;
  final void Function(_$jni.JObject ptzZoomSpeed) _setFmgZoomSpeed;
  final bool setFmgZoomSpeed$async;
  final _$jni.JObject Function() _getFmgHorizontalDir;
  final void Function(_$jni.JObject ptzRcHorizontalDir) _setFmgHorizontalDir;
  final bool setFmgHorizontalDir$async;
  final _$jni.JObject Function() _getFmgVerticalDir;
  final void Function(_$jni.JObject ptzRcVerticalDir) _setFmgVerticalDir;
  final bool setFmgVerticalDir$async;
  final _$jni.JObject Function() _getFmgSoundEnable;
  final _$jni.JObject Function() _getFmgSwitchModeWay;
  final void Function(_$jni.JObject ptzSwitchModeWay) _setFmgSwitchModeWay;
  final bool setFmgSwitchModeWay$async;
  final void Function(_$jni.JObject ptzSoundMode) _setFmgSoundEnable;
  final bool setFmgSoundEnable$async;
  final _$jni.JObject Function() _getFmgHvMode;
  final void Function(_$jni.JObject ptzHvMode) _setFmgHvMode;
  final bool setFmgHvMode$async;
  final bool Function() _isFmgLimitedYaw;
  final bool Function() _isFmgLimitedPitch;
  final bool Function() _isFmgSleep;
  final bool Function() _isFmgStalled;
  final bool Function() _isFmgPayload;
  final double Function() _getFmgVerticalTrimDegree;
  final void Function(double f) _setFmgVerticalTrimDegree;
  final bool setFmgVerticalTrimDegree$async;
  final void Function(_$jni.JObject fmgTargetFollowParams) _startOrUpdateFmgTargetFollow;
  final bool startOrUpdateFmgTargetFollow$async;
  final void Function() _lostFmgTargetFollow;
  final bool lostFmgTargetFollow$async;
  final void Function() _exitFmgTargetFollow;
  final bool exitFmgTargetFollow$async;
  final void Function(_$jni.JObject fmgTargetFollowParams) _speculateFmgTargetFollow;
  final bool speculateFmgTargetFollow$async;
  final void Function(int s) _setFmgZoomScale;
  final bool setFmgZoomScale$async;
  final void Function(ICameraController_Oooo0 oooo0) _getFmgAngle;
  final bool getFmgAngle$async;
  final void Function(ICameraController_o00O0O o00O0O) _getFmgSpeed;
  final bool getFmgSpeed$async;
  final void Function(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo) _setFmgAngle;
  final bool setFmgAngle$async;
  final void Function(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00) _setFmgSpeed;
  final bool setFmgSpeed$async;
  final void Function(ICameraController_o0Oo0oo o0Oo0oo) _setFmgIdle;
  final bool setFmgIdle$async;
  final void Function(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo) _setFmgTimeElapse;
  final bool setFmgTimeElapse$async;
  final void Function(_$jni.JObject ptzPanoMode) _setFmgPano;
  final bool setFmgPano$async;
  final void Function(ICameraController_o0OO00O o0OO00O) _resetFmgDefaultSettings;
  final bool resetFmgDefaultSettings$async;
  final void Function(ICameraController_o00Oo0 o00Oo0) _getFmgTrackSensitivityMode;
  final bool getFmgTrackSensitivityMode$async;
  final void Function(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000) _setFmgTrackSensitivityMode;
  final bool setFmgTrackSensitivityMode$async;
  final void Function(_$jni.JObject ptzRecMode) _startFmgRecMode;
  final bool startFmgRecMode$async;
  final void Function(_$jni.JObject ptzRecMode) _stopFmgRecMode;
  final bool stopFmgRecMode$async;
  final void Function(_$jni.JObject ptzRecMode) _initFmgRecMode;
  final bool initFmgRecMode$async;
  final void Function() _fmgVibration;
  final bool fmgVibration$async;
  final void Function(_$jni.JObject arrayList) _enableFmgHandDrag;
  final bool enableFmgHandDrag$async;
  final void Function(_$jni.JObject arrayList) _disableFmgHandDrag;
  final bool disableFmgHandDrag$async;
  final void Function(bool z) _setFmgCameraFacing;
  final bool setFmgCameraFacing$async;
  final void Function(_$jni.JArray<_$jni.jfloat> fs) _updateFmgPhoneImu;
  final bool updateFmgPhoneImu$async;
  final void Function(ICameraController_Oooo000 oooo000) _getFmgAnalyticsData;
  final bool getFmgAnalyticsData$async;
  final void Function(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o) _setFmgAngleSeq;
  final bool setFmgAngleSeq$async;
  final void Function() _clearFmgAnalyticsData;
  final bool clearFmgAnalyticsData$async;
  final void Function() _startFmgHeartBeat;
  final bool startFmgHeartBeat$async;
  final void Function() _stopFmgHeartBeat;
  final bool stopFmgHeartBeat$async;

  void init() {
    return _init();
  }  void destroy() {
    return _destroy();
  }  void setInstaCamera(_$jni.JObject instaCamera) {
    return _setInstaCamera(instaCamera);
  }  void setBaseCamera(BaseCamera baseCamera) {
    return _setBaseCamera(baseCamera);
  }  void setBaseCameraChangedCallback(IBaseCameraChangedCallback iBaseCameraChangedCallback) {
    return _setBaseCameraChangedCallback(iBaseCameraChangedCallback);
  }  void setSyncStatusChangeListener(ICameraController_o00oOoo o00oOoo) {
    return _setSyncStatusChangeListener(o00oOoo);
  }  void setCaptureStatusChangeListener(ICameraController_ICaptureStatusChangedListener iCaptureStatusChangedListener) {
    return _setCaptureStatusChangeListener(iCaptureStatusChangedListener);
  }  void setPreviewStatusChangedListener(ICameraController_IPreviewStatusChangedListener iPreviewStatusChangedListener) {
    return _setPreviewStatusChangedListener(iPreviewStatusChangedListener);
  }  void setDeveloperConfigProvider(_$jni.JObject oooO00o) {
    return _setDeveloperConfigProvider(oooO00o);
  }  void setCameraLiveListener(_$jni.JObject iCameraLiveStateListener, _$jni.JObject infoUpdateListener) {
    return _setCameraLiveListener(iCameraLiveStateListener, infoUpdateListener);
  }  void onCameraInfoNotify(int i, int i1, _$jni.JObject object) {
    return _onCameraInfoNotify(i, i1, object);
  }  _$jni.JString getCameraHost() {
    return _getCameraHost();
  }  int getPort() {
    return _getPort();
  }  _$jni.JString getFirmwareUploadPath() {
    return _getFirmwareUploadPath();
  }  _$jni.JString getCameraFileUploadPath() {
    return _getCameraFileUploadPath();
  }  bool supportUploadFileToCamera() {
    return _supportUploadFileToCamera();
  }  int getVersionValidLength() {
    return _getVersionValidLength();
  }  void setAssistiveGridEnable(bool z) {
    return _setAssistiveGridEnable(z);
  }  bool getAssistiveGridEnable() {
    return _getAssistiveGridEnable();
  }  void setFreeFrameGridEnable(bool z) {
    return _setFreeFrameGridEnable(z);
  }  bool getFreeFrameGridEnable() {
    return _getFreeFrameGridEnable();
  }  void freeze() {
    return _freeze();
  }  void unfreeze() {
    return _unfreeze();
  }  bool isFrozen() {
    return _isFrozen();
  }  void changeCameraSyncStatus(BaseCamera_CameraSyncStatus cameraSyncStatus) {
    return _changeCameraSyncStatus(cameraSyncStatus);
  }  BaseCamera_CameraSyncStatus getCurCameraSyncStatus() {
    return _getCurCameraSyncStatus();
  }  BaseCamera_CameraSyncStatus getLastCameraSyncStatus() {
    return _getLastCameraSyncStatus();
  }  bool isCameraBusy() {
    return _isCameraBusy();
  }  void setConnectType(BaseCamera_ConnectType connectType) {
    return _setConnectType(connectType);
  }  bool onlySupportBleConnect() {
    return _onlySupportBleConnect();
  }  bool isCaptureByUser() {
    return _isCaptureByUser();
  }  void fetchCameraType(ICameraController_OooOOOO oooOOOO) {
    return _fetchCameraType(oooOOOO);
  }  void startSync() {
    return _startSync();
  }  void setAuthorizationChecker(ICameraController_OooO00o oooO00o) {
    return _setAuthorizationChecker(oooO00o);
  }  void setCheckActivationList(_$jni.JList<ICameraCheck> list) {
    return _setCheckActivationList(list);
  }  void continueCameraCheck() {
    return _continueCameraCheck();
  }  _$jni.JString getSerial() {
    return _getSerial();
  }  void setSerial(_$jni.JString string) {
    return _setSerial(string);
  }  _$jni.JString getUUID() {
    return _getUUID();
  }  _$jni.JString getVR360Senor0Serial() {
    return _getVR360Senor0Serial();
  }  _$jni.JString getVR360Senor1Serial() {
    return _getVR360Senor1Serial();
  }  _$jni.JString getVR180SenorSerial() {
    return _getVR180SenorSerial();
  }  _$jni.JArray<_$jni.JString> getSensorSerials() {
    return _getSensorSerials();
  }  _$jni.JString getCameraType() {
    return _getCameraType();
  }  _$jni.JString getCameraName() {
    return _getCameraName();
  }  _$jni.JString getFWVersion() {
    return _getFWVersion();
  }  _$jni.JString getCameraFwVersion() {
    return _getCameraFwVersion();
  }  _$jni.JString getCameraBleVersion() {
    return _getCameraBleVersion();
  }  _$jni.JString getChargeBoxFwVersion() {
    return _getChargeBoxFwVersion();
  }  _$jni.JString getChargeBoxBleVersion() {
    return _getChargeBoxBleVersion();
  }  void setMediaOffset(_$jni.JString string) {
    return _setMediaOffset(string);
  }  _$jni.JString getMediaOffset() {
    return _getMediaOffset();
  }  _$jni.JString getMediaOffsetV2() {
    return _getMediaOffsetV2();
  }  _$jni.JString getMediaOffsetV3() {
    return _getMediaOffsetV3();
  }  void setOriginalOffset(_$jni.JString string) {
    return _setOriginalOffset(string);
  }  _$jni.JString getOriginalOffset() {
    return _getOriginalOffset();
  }  _$jni.JString getOriginalOffsetV2() {
    return _getOriginalOffsetV2();
  }  _$jni.JString getOriginalOffsetV3() {
    return _getOriginalOffsetV3();
  }  void setAllOffset(_$jni.JString string, _$jni.JString string1, _$jni.JString string2, _$jni.JString string3, _$jni.JString string4, _$jni.JString string5) {
    return _setAllOffset(string, string1, string2, string3, string4, string5);
  }  int getOffsetState() {
    return _getOffsetState();
  }  int getActiveTime() {
    return _getActiveTime();
  }  void setActiveTime(int j, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setActiveTime(j, iSetOptionsCallback);
  }  int getBatteryLevel() {
    return _getBatteryLevel();
  }  bool isCharging() {
    return _isCharging();
  }  bool isHighTemperature() {
    return _isHighTemperature();
  }  bool isLowTemperature() {
    return _isLowTemperature();
  }  int getBatteryType() {
    return _getBatteryType();
  }  bool isChargeBoxConnected() {
    return _isChargeBoxConnected();
  }  int getChargeBoxUsbConnectedState() {
    return _getChargeBoxUsbConnectedState();
  }  bool isChargeBoxConnectedWhenCaptureStart() {
    return _isChargeBoxConnectedWhenCaptureStart();
  }  int getChargeBoxBatteryLevel() {
    return _getChargeBoxBatteryLevel();
  }  bool isChargeBoxCharging() {
    return _isChargeBoxCharging();
  }  int getStorageCardState() {
    return _getStorageCardState();
  }  int getStorageCardLocation() {
    return _getStorageCardLocation();
  }  int getStorageTotalSpace() {
    return _getStorageTotalSpace();
  }  int getStorageFreeSpace() {
    return _getStorageFreeSpace();
  }  int getVideoEncodeType() {
    return _getVideoEncodeType();
  }  void setVideoEncodeType(int i) {
    return _setVideoEncodeType(i);
  }  bool isSelfie() {
    return _isSelfie();
  }  int getCameraPosture() {
    return _getCameraPosture();
  }  int getCameraPostureWhenCaptureStart() {
    return _getCameraPostureWhenCaptureStart();
  }  int getBtWakeupSwState() {
    return _getBtWakeupSwState();
  }  void setBtWakeupSwState(int i) {
    return _setBtWakeupSwState(i);
  }  double getGyroTimeStamp() {
    return _getGyroTimeStamp();
  }  _$jni.JObject getWindowCropInfo() {
    return _getWindowCropInfo();
  }  int getImageFlicker() {
    return _getImageFlicker();
  }  void setImageFlicker(int i) {
    return _setImageFlicker(i);
  }  void setStandByMode(int i, ICameraController_o00O0000 o00O0000) {
    return _setStandByMode(i, o00O0000);
  }  bool getQuickCaptureEnable() {
    return _getQuickCaptureEnable();
  }  void setQuickCaptureEnable(bool z) {
    return _setQuickCaptureEnable(z);
  }  int getBtnShutdownClickMode() {
    return _getBtnShutdownClickMode();
  }  void setBtnShutdownClickMode(int i) {
    return _setBtnShutdownClickMode(i);
  }  int getBtnShutdownDoubleClickMode() {
    return _getBtnShutdownDoubleClickMode();
  }  void setBtnShutdownDoubleClickMode(int i) {
    return _setBtnShutdownDoubleClickMode(i);
  }  int getBtnShutdownTripleClickMode() {
    return _getBtnShutdownTripleClickMode();
  }  void setBtnShutdownTripleClickMode(int i) {
    return _setBtnShutdownTripleClickMode(i);
  }  int getBtnShutdownLongPressMode() {
    return _getBtnShutdownLongPressMode();
  }  void setBtnShutdownLongPressMode(int i) {
    return _setBtnShutdownLongPressMode(i);
  }  int getBtnClickMode() {
    return _getBtnClickMode();
  }  void setBtnClickMode(int i) {
    return _setBtnClickMode(i);
  }  int getBtnDoubleClickMode() {
    return _getBtnDoubleClickMode();
  }  void setBtnDoubleClickMode(int i) {
    return _setBtnDoubleClickMode(i);
  }  int getBtnTripleClickMode() {
    return _getBtnTripleClickMode();
  }  void setBtnTripleClickMode(int i) {
    return _setBtnTripleClickMode(i);
  }  int getBtnLongPressMode() {
    return _getBtnLongPressMode();
  }  void setBtnLongPressMode(int i) {
    return _setBtnLongPressMode(i);
  }  bool isMute() {
    return _isMute();
  }  void setMute(bool z) {
    return _setMute(z);
  }  _$jni.JObject getWifiInfo() {
    return _getWifiInfo();
  }  void setWifiPwd(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setWifiPwd(string, iSetOptionsCallback);
  }  _$jni.JObject getButtonFollowOptions() {
    return _getButtonFollowOptions();
  }  void setButtonFollowOptions(_$jni.JObject buttonFollowOptions, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setButtonFollowOptions(buttonFollowOptions, iSetOptionsCallback);
  }  _$jni.JString getWifiChannelCountry() {
    return _getWifiChannelCountry();
  }  void setWifiChannelCountry(_$jni.JString string, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setWifiChannelCountry(string, iSetOptionsCallback);
  }  void setCameraLanguage(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback, _$jni.JObject requestOptions) {
    return _setCameraLanguage(i, iSetOptionsCallback, requestOptions);
  }  int getCameraLanguage() {
    return _getCameraLanguage();
  }  VideoResolution getVideoResolution() {
    return _getVideoResolution();
  }  void setVideoResolution(VideoResolution videoResolution, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setVideoResolution(videoResolution, iSetOptionsCallback);
  }  int getVideoBitrate() {
    return _getVideoBitrate();
  }  int getSubVideoMode() {
    return _getSubVideoMode();
  }  void setSubVideoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setSubVideoMode(i, iSetOptionsCallback);
  }  int getSubPhotoMode() {
    return _getSubPhotoMode();
  }  void setSubPhotoMode(int i, ICameraController_ISetOptionsCallback iSetOptionsCallback) {
    return _setSubPhotoMode(i, iSetOptionsCallback);
  }  int getExpectOutputType() {
    return _getExpectOutputType();
  }  void setExpectOutputType(int i) {
    return _setExpectOutputType(i);
  }  int getFocusSensor() {
    return _getFocusSensor();
  }  void setFocusSensor(int i) {
    return _setFocusSensor(i);
  }  int getSensorType() {
    return _getSensorType();
  }  void beginOptionsTransaction() {
    return _beginOptionsTransaction();
  }  void commitOptionsTransaction(ICameraController_o000O0o o000O0o) {
    return _commitOptionsTransaction(o000O0o);
  }  TimelapseParams getTimelapseParams(int i) {
    return _getTimelapseParams(i);
  }  void setTimelapseParams(int i, TimelapseParams timelapseParams) {
    return _setTimelapseParams(i, timelapseParams);
  }  int getExposureMode(int i, bool z) {
    return _getExposureMode(i, z);
  }  int getISO(int i, bool z) {
    return _getISO(i, z);
  }  double getShutter(int i, bool z) {
    return _getShutter(i, z);
  }  void setExposureOptions(int i, int i1, int i2, double d, bool z) {
    return _setExposureOptions(i, i1, i2, d, z);
  }  int getExposureEV(int i) {
    return _getExposureEV(i);
  }  void setExposureEV(int i, int i1) {
    return _setExposureEV(i, i1);
  }  double getFocalLengthValue(int i) {
    return _getFocalLengthValue(i);
  }  void setFocalLengthValue(int i, double d) {
    return _setFocalLengthValue(i, d);
  }  int getVideoResolutionId(int i) {
    return _getVideoResolutionId(i);
  }  void setVideoResolutionId(int i, int i1, ICameraController_o00 o00) {
    return _setVideoResolutionId(i, i1, o00);
  }  _$jni.JList<_$jni.JObject> getResRecLimit(int i) {
    return _getResRecLimit(i);
  }  void setResRecLimit(int i, _$jni.JList<_$jni.JObject> list) {
    return _setResRecLimit(i, list);
  }  int getRemainingTime(int i) {
    return _getRemainingTime(i);
  }  int getISOTopLimit(int i) {
    return _getISOTopLimit(i);
  }  void setISOTopLimit(int i, int i1) {
    return _setISOTopLimit(i, i1);
  }  int getAEBCaptureNum(int i) {
    return _getAEBCaptureNum(i);
  }  void setAEBCaptureNum(int i, int i1) {
    return _setAEBCaptureNum(i, i1);
  }  int getPhotoSize(int i) {
    return _getPhotoSize(i);
  }  void setPhotoSize(int i, int i1) {
    return _setPhotoSize(i, i1);
  }  int getPhotoResolutionId(int i) {
    return _getPhotoResolutionId(i);
  }  void setPhotoResolutionId(int i, int i1, ICameraController_o00 o00) {
    return _setPhotoResolutionId(i, i1, o00);
  }  int getWhiteBalanceId(int i) {
    return _getWhiteBalanceId(i);
  }  void setWhiteBalanceId(int i, int i1) {
    return _setWhiteBalanceId(i, i1);
  }  int getWhiteBalanceValue(int i) {
    return _getWhiteBalanceValue(i);
  }  void setWhiteBalanceValue(int i, int i1) {
    return _setWhiteBalanceValue(i, i1);
  }  bool getSportModeEnable(int i) {
    return _getSportModeEnable(i);
  }  void setSportModeEnable(int i, bool z) {
    return _setSportModeEnable(i, z);
  }  int getSportModeLevel(int i) {
    return _getSportModeLevel(i);
  }  void setSportModeLevel(int i, int i1) {
    return _setSportModeLevel(i, i1);
  }  int getGammaMode(int i) {
    return _getGammaMode(i);
  }  void setGammaMode(int i, int i1) {
    return _setGammaMode(i, i1);
  }  int getRawType(int i) {
    return _getRawType(i);
  }  void setRawType(int i, int i1) {
    return _setRawType(i, i1);
  }  int getPhotoSelfTimer(int i) {
    return _getPhotoSelfTimer(i);
  }  void setPhotoSelfTimer(int i, int i1) {
    return _setPhotoSelfTimer(i, i1);
  }  int getAccelerateFrequency(int i) {
    return _getAccelerateFrequency(i);
  }  void setAccelerateFrequency(int i, int i1) {
    return _setAccelerateFrequency(i, i1);
  }  int getRecordDurationS(int i) {
    return _getRecordDurationS(i);
  }  void setRecordDurationS(int i, int i1) {
    return _setRecordDurationS(i, i1);
  }  int getFlicker(int i) {
    return _getFlicker(i);
  }  void setFlicker(int i, int i1) {
    return _setFlicker(i, i1);
  }  bool getFlowstateEnable(int i) {
    return _getFlowstateEnable(i);
  }  void setFlowstateEnable(int i, bool z) {
    return _setFlowstateEnable(i, z);
  }  bool getUnDamageZoomEnable(int i) {
    return _getUnDamageZoomEnable(i);
  }  void setUnDamageZoomEnable(int i, bool z) {
    return _setUnDamageZoomEnable(i, z);
  }  bool getFlowstateVideoEnable(int i) {
    return _getFlowstateVideoEnable(i);
  }  void setFlowstateVideoEnable(int i, bool z) {
    return _setFlowstateVideoEnable(i, z);
  }  bool getDarkEisEnable(int i) {
    return _getDarkEisEnable(i);
  }  void setDarkEisEnable(int i, bool z) {
    return _setDarkEisEnable(i, z);
  }  bool getMeteringEnable(int i) {
    return _getMeteringEnable(i);
  }  void setMeteringEnable(int i, bool z) {
    return _setMeteringEnable(i, z);
  }  int getVideoSelfieMode(int i) {
    return _getVideoSelfieMode(i);
  }  void setVideoSelfieMode(int i, int i1, ICameraController_o00 o00) {
    return _setVideoSelfieMode(i, i1, o00);
  }  void getDarkEisStatus(ICameraController_o0000oo o0000oo) {
    return _getDarkEisStatus(o0000oo);
  }  bool getDarkEisEnableGlobal() {
    return _getDarkEisEnableGlobal();
  }  void setDarkEisEnableGlobal(bool z) {
    return _setDarkEisEnableGlobal(z);
  }  bool getMeteringEnableGlobal() {
    return _getMeteringEnableGlobal();
  }  void setMeteringEnableGlobal(bool z) {
    return _setMeteringEnableGlobal(z);
  }  bool getInternalSplicingEnable() {
    return _getInternalSplicingEnable();
  }  void setInternalSplicingEnable(bool z) {
    return _setInternalSplicingEnable(z);
  }  int getVideoBitrate$1(int i) {
    return _getVideoBitrate$1(i);
  }  int getFlowStateLevel(int i) {
    return _getFlowStateLevel(i);
  }  void setFlowStateLevel(int i, int i1) {
    return _setFlowStateLevel(i, i1);
  }  int getFlowStateLevelByCv5(int i) {
    return _getFlowStateLevelByCv5(i);
  }  void setFlowStateLevelByCv5(int i, int i1) {
    return _setFlowStateLevelByCv5(i, i1);
  }  bool getHdrStatus(int i) {
    return _getHdrStatus(i);
  }  void setHdrStatus(int i, bool z) {
    return _setHdrStatus(i, z);
  }  int getSharpness(int i) {
    return _getSharpness(i);
  }  void setSharpness(int i, int i1) {
    return _setSharpness(i, i1);
  }  int getStarLapseExportType(int i) {
    return _getStarLapseExportType(i);
  }  void setStarLapseExportType(int i, int i1) {
    return _setStarLapseExportType(i, i1);
  }  int getPanoExposureMode(int i) {
    return _getPanoExposureMode(i);
  }  void setPanoExposureMode(int i, int i1) {
    return _setPanoExposureMode(i, i1);
  }  int getFovType(int i) {
    return _getFovType(i);
  }  void setFovType(int i, int i1, ICameraController_o00 o00) {
    return _setFovType(i, i1, o00);
  }  int getBurstCaptureNum(int i) {
    return _getBurstCaptureNum(i);
  }  void setBurstCaptureNum(int i, int i1) {
    return _setBurstCaptureNum(i, i1);
  }  int getBurstCacheNum(int i) {
    return _getBurstCacheNum(i);
  }  void setBurstCacheNum(int i, int i1) {
    return _setBurstCacheNum(i, i1);
  }  int getBurstCaptureTime(int i) {
    return _getBurstCaptureTime(i);
  }  void setBurstCaptureTime(int i, int i1) {
    return _setBurstCaptureTime(i, i1);
  }  bool getCacheCaptureEnable(int i) {
    return _getCacheCaptureEnable(i);
  }  void setCacheCaptureEnable(int i, bool z) {
    return _setCacheCaptureEnable(i, z);
  }  double getZoomScale(int i) {
    return _getZoomScale(i);
  }  void setZoomScale(int i, double d) {
    return _setZoomScale(i, d);
  }  int getMaxRecordTime(int i) {
    return _getMaxRecordTime(i);
  }  void setMaxRecordTime(int i, int i1) {
    return _setMaxRecordTime(i, i1);
  }  void syncCameraSensorMode(ICameraController_o0000Ooo o0000Ooo) {
    return _syncCameraSensorMode(o0000Ooo);
  }  int getCameraSensorMode() {
    return _getCameraSensorMode();
  }  void setCameraSensorMode(int i, ICameraController_o000OO0O o000OO0O) {
    return _setCameraSensorMode(i, o000OO0O);
  }  bool supportSwitchCameraSensorMode() {
    return _supportSwitchCameraSensorMode();
  }  bool isCameraSingleSensorMode() {
    return _isCameraSingleSensorMode();
  }  bool isCameraPowerPanoMode() {
    return _isCameraPowerPanoMode();
  }  int getCameraSingleSensorResolutionId(int i) {
    return _getCameraSingleSensorResolutionId(i);
  }  void setCameraSingleSensorResolution(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) {
    return _setCameraSingleSensorResolution(i, i1, i2, o000O0O0);
  }  bool getCameraSingleSensorFlowstateEnable(int i) {
    return _getCameraSingleSensorFlowstateEnable(i);
  }  void setCameraSingleSensorFlowstate(int i, int i1, bool z, ICameraController_o000O0O0 o000O0O0) {
    return _setCameraSingleSensorFlowstate(i, i1, z, o000O0O0);
  }  int getCameraSingleSensorDimensionType(int i) {
    return _getCameraSingleSensorDimensionType(i);
  }  void setCameraSingleSensorDimensionType(int i, int i1, int i2, ICameraController_o000O0O0 o000O0O0) {
    return _setCameraSingleSensorDimensionType(i, i1, i2, o000O0O0);
  }  int getCameraSingleSensorVisionType(int i) {
    return _getCameraSingleSensorVisionType(i);
  }  void setCameraSingleSensorVisionType(int i, int i1, int i2) {
    return _setCameraSingleSensorVisionType(i, i1, i2);
  }  void fetchCameraSingleSensorOptions(_$jni.JArray<_$jni.jint> is$, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) {
    return _fetchCameraSingleSensorOptions(is$, list, iFetchOptionsListener);
  }  void openPreviewStream(StreamResolution streamResolution, StreamResolution streamResolution1, int i, _$jni.JObject renderMode, bool z, int i1, bool z1, _$jni.JString string, bool z2) {
    return _openPreviewStream(streamResolution, streamResolution1, i, renderMode, z, i1, z1, string, z2);
  }  void closePreviewStream() {
    return _closePreviewStream();
  }  void setPipeline(_$jni.JObject iCameraPreviewPipeline) {
    return _setPipeline(iCameraPreviewPipeline);
  }  void setPreviewImageNotify(_$jni.JObject previewImageNotify, _$jni.JObject handler) {
    return _setPreviewImageNotify(previewImageNotify, handler);
  }  void forcePutPreviewImage(_$jni.JArray<_$jni.JObject> imageDatas) {
    return _forcePutPreviewImage(imageDatas);
  }  bool isStreamProcessing() {
    return _isStreamProcessing();
  }  bool isH265StreamEncode() {
    return _isH265StreamEncode();
  }  void setStreamEncode(bool z) {
    return _setStreamEncode(z);
  }  void requestStreamIframe() {
    return _requestStreamIframe();
  }  BaseCamera_PreviewStatus getPreviewStats() {
    return _getPreviewStats();
  }  StreamResolution getCurFirstStreamResolution() {
    return _getCurFirstStreamResolution();
  }  StreamResolution getCurSecondStreamResolution() {
    return _getCurSecondStreamResolution();
  }  VideoResolution getCurRealCameraStreamResolution() {
    return _getCurRealCameraStreamResolution();
  }  StreamResolution getSecondStreamResolution() {
    return _getSecondStreamResolution();
  }  int getAudioCodec() {
    return _getAudioCodec();
  }  int getPreviewNum() {
    return _getPreviewNum();
  }  _$jni.JObject getRenderMode() {
    return _getRenderMode();
  }  bool isCameraWorking() {
    return _isCameraWorking();
  }  bool isCameraRecordOnPause() {
    return _isCameraRecordOnPause();
  }  BaseCamera_CaptureType getCaptureType() {
    return _getCaptureType();
  }  BaseCamera_CaptureStatus getCaptureStatus() {
    return _getCaptureStatus();
  }  BaseCamera_CaptureSubStatus getCaptureSubStatus() {
    return _getCaptureSubStatus();
  }  int getCaptureTime() {
    return _getCaptureTime();
  }  int getCaptureCount() {
    return _getCaptureCount();
  }  _$jni.JString getCaptureKeyTimePointDetail() {
    return _getCaptureKeyTimePointDetail();
  }  void startNormalCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) {
    return _startNormalCapture(i, bs, i1);
  }  void startCaptureWhileRecording(int i, _$jni.JArray<_$jni.jbyte> bs, ICameraController_OooO oooO) {
    return _startCaptureWhileRecording(i, bs, oooO);
  }  bool isNormalCapturing() {
    return _isNormalCapturing();
  }  void startNormalPanoCapture(int i, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) {
    return _startNormalPanoCapture(i, i1, bs, i2);
  }  bool isNormalPanoCapturing() {
    return _isNormalPanoCapturing();
  }  void startHDRCapture(_$jni.JArray<_$jni.jint> is$, int i, _$jni.JArray<_$jni.jbyte> bs, int i1) {
    return _startHDRCapture(is$, i, bs, i1);
  }  bool isHDRCapturing() {
    return _isHDRCapturing();
  }  void startHDRPanoCapture(int i, _$jni.JArray<_$jni.jint> is$, int i1, _$jni.JArray<_$jni.jbyte> bs, int i2) {
    return _startHDRPanoCapture(i, is$, i1, bs, i2);
  }  bool isHDRPanoCapturing() {
    return _isHDRPanoCapturing();
  }  void startNightScene(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) {
    return _startNightScene(i, bs, i1);
  }  bool isNightSceneCapturing() {
    return _isNightSceneCapturing();
  }  void startIntervalShooting(_$jni.JArray<_$jni.jbyte> bs) {
    return _startIntervalShooting(bs);
  }  void stopIntervalShooting() {
    return _stopIntervalShooting();
  }  bool isIntervalShooting() {
    return _isIntervalShooting();
  }  void startStarLapseShooting(_$jni.JArray<_$jni.jbyte> bs) {
    return _startStarLapseShooting(bs);
  }  void stopStarLapseShooting() {
    return _stopStarLapseShooting();
  }  bool isStarLapseShooting() {
    return _isStarLapseShooting();
  }  void startBurstCapture(int i, _$jni.JArray<_$jni.jbyte> bs, int i1) {
    return _startBurstCapture(i, bs, i1);
  }  bool isBurstCapturing() {
    return _isBurstCapturing();
  }  void startNormalRecord() {
    return _startNormalRecord();
  }  void stopNormalRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopNormalRecord(bs);
  }  bool isNormalRecording() {
    return _isNormalRecording();
  }  void startSuperRecord() {
    return _startSuperRecord();
  }  void stopSuperRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopSuperRecord(bs);
  }  bool isSuperRecording() {
    return _isSuperRecording();
  }  void startHDRRecord() {
    return _startHDRRecord();
  }  void stopHDRRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopHDRRecord(bs);
  }  bool isHDRRecording() {
    return _isHDRRecording();
  }  void startBulletTime() {
    return _startBulletTime();
  }  void stopBulletTime(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopBulletTime(bs);
  }  bool isBulletTimeRecording() {
    return _isBulletTimeRecording();
  }  void startTimeShift() {
    return _startTimeShift();
  }  void stopTimeShift(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopTimeShift(bs);
  }  bool isTimeShiftRecording() {
    return _isTimeShiftRecording();
  }  void startLooperRecording() {
    return _startLooperRecording();
  }  void stopLooperRecording(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopLooperRecording(bs);
  }  bool isLooperRecording() {
    return _isLooperRecording();
  }  void startFpvRecord() {
    return _startFpvRecord();
  }  void stopFpvRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopFpvRecord(bs);
  }  bool isFpvRecording() {
    return _isFpvRecording();
  }  void startMovieRecord() {
    return _startMovieRecord();
  }  void stopMovieRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopMovieRecord(bs);
  }  bool isMovieRecording() {
    return _isMovieRecording();
  }  void startSlowMotionRecord() {
    return _startSlowMotionRecord();
  }  void stopSlowMotionRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopSlowMotionRecord(bs);
  }  bool isSlowMotionRecording() {
    return _isSlowMotionRecording();
  }  void startSelfieRecord() {
    return _startSelfieRecord();
  }  void stopSelfieRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopSelfieRecord(bs);
  }  bool isSelfieRecording() {
    return _isSelfieRecording();
  }  void startPureRecord() {
    return _startPureRecord();
  }  void stopPureRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopPureRecord(bs);
  }  bool isPureRecording() {
    return _isPureRecording();
  }  void startIntervalRecord(_$jni.JArray<_$jni.jbyte> bs) {
    return _startIntervalRecord(bs);
  }  void stopIntervalRecord() {
    return _stopIntervalRecord();
  }  bool isIntervalRecording() {
    return _isIntervalRecording();
  }  void startTimelapse() {
    return _startTimelapse();
  }  void stopTimelapse(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopTimelapse(bs);
  }  bool isTimelapseRecording() {
    return _isTimelapseRecording();
  }  void startStaticTimelapse() {
    return _startStaticTimelapse();
  }  void stopStaticTimelapse(_$jni.JArray<_$jni.jbyte> bs) {
    return _stopStaticTimelapse(bs);
  }  bool isStaticTimelapseRecording() {
    return _isStaticTimelapseRecording();
  }  void pauseRecord() {
    return _pauseRecord();
  }  void startLive(int i, int i1, int i2, int i3, _$jni.JString string, int i4, int j, bool z, bool z1) {
    return _startLive(i, i1, i2, i3, string, i4, j, z, z1);
  }  void stopLive() {
    return _stopLive();
  }  void resetRecord() {
    return _resetRecord();
  }  void fetchAllOptions(ICameraController_IFetchOptionsListener iFetchOptionsListener) {
    return _fetchAllOptions(iFetchOptionsListener);
  }  void fetchOptions(_$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) {
    return _fetchOptions(list, iFetchOptionsListener);
  }  void fetchPhotoOptions(int i, _$jni.JList<_$jni.JString> list, ICameraController_IFetchOptionsListener iFetchOptionsListener) {
    return _fetchPhotoOptions(i, list, iFetchOptionsListener);
  }  void fetchStorageState() {
    return _fetchStorageState();
  }  void fetchBatteryState() {
    return _fetchBatteryState();
  }  void formatStorage(ICameraController_o00000O o00000O) {
    return _formatStorage(o00000O);
  }  void setAccessCameraFileState(int i) {
    return _setAccessCameraFileState(i);
  }  void getCameraFile(int i, ICameraController_o00000OO o00000OO) {
    return _getCameraFile(i, o00000OO);
  }  void packLogFile(int i, ICameraController_o00000OO o00000OO) {
    return _packLogFile(i, o00000OO);
  }  void setLogFileTransferState(int i, int i1, ICameraController_o000OOo0 o000OOo0) {
    return _setLogFileTransferState(i, i1, o000OOo0);
  }  void deleteLogFile(int i) {
    return _deleteLogFile(i);
  }  void getFileList(int i, int i1, int i2, ICameraController_o000OO o000OO) {
    return _getFileList(i, i1, i2, o000OO);
  }  void getFileListIncludeRecording(int i, int i1, int i2, ICameraController_o000OO o000OO) {
    return _getFileListIncludeRecording(i, i1, i2, o000OO);
  }  void getFileInfoList(ICameraController_o0000O0O o0000O0O) {
    return _getFileInfoList(o0000O0O);
  }  void deleteFileList(ICameraController_OooOOO0 oooOOO0, _$jni.JList<_$jni.JString> list) {
    return _deleteFileList(oooOOO0, list);
  }  void calibrateGyro(ICameraController_ICalibrateGyroCallback iCalibrateGyroCallback) {
    return _calibrateGyro(iCalibrateGyroCallback);
  }  void getFileGps(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileGps(string, o0000O0);
  }  void getFileThumbnail(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileThumbnail(string, o0000O0);
  }  void getFileThumbnailExt(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileThumbnailExt(string, o0000O0);
  }  void getFileExposureTimeData(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileExposureTimeData(string, o0000O0);
  }  void getFileGyroData(_$jni.JString string, int j, int j1, ICameraController_o0000O0 o0000O0) {
    return _getFileGyroData(string, j, j1, o0000O0);
  }  void getFileTimelapseTimestamp(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileTimelapseTimestamp(string, o0000O0);
  }  void getFileExtraMetaData(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileExtraMetaData(string, o0000O0);
  }  void setFileExtraMetaData(_$jni.JString string, _$jni.JArray<_$jni.jbyte> bs, ICameraController_o000OO00 o000OO00) {
    return _setFileExtraMetaData(string, bs, o000OO00);
  }  void getFileExtraHighlight(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileExtraHighlight(string, o0000O0);
  }  void getFileExtraAutoEditor(_$jni.JString string, ICameraController_o0000O0 o0000O0) {
    return _getFileExtraAutoEditor(string, o0000O0);
  }  void cancelAuthorization(ICameraController_OooO0o oooO0o) {
    return _cancelAuthorization(oooO0o);
  }  void requestAuthorization(int i, ICameraController_o000O0 o000O0) {
    return _requestAuthorization(i, o000O0);
  }  void cancelRequestAuthorization(int i, ICameraController_OooO0o oooO0o) {
    return _cancelRequestAuthorization(i, oooO0o);
  }  void setGpsData(_$jni.JArray<_$jni.jbyte> bs) {
    return _setGpsData(bs);
  }  void setKeyTimePoint(int j, int i, _$jni.JString string) {
    return _setKeyTimePoint(j, i, string);
  }  void setBleRemoteControllerListener(ICameraController_OooO0OO oooO0OO) {
    return _setBleRemoteControllerListener(oooO0OO);
  }  void scanBleRemoteController() {
    return _scanBleRemoteController();
  }  void connectBleRemoteControl(_$jni.JObject bTPeripheral) {
    return _connectBleRemoteControl(bTPeripheral);
  }  void disconnectBle(_$jni.JObject bTPeripheral) {
    return _disconnectBle(bTPeripheral);
  }  _$jni.JString getBleRemoteVersion() {
    return _getBleRemoteVersion();
  }  void setBleRemoteVersion(_$jni.JString string) {
    return _setBleRemoteVersion(string);
  }  int getBleRemoteType() {
    return _getBleRemoteType();
  }  void openCameraWifi(ICameraController_o000O00O o000O00O) {
    return _openCameraWifi(o000O00O);
  }  void closeCameraWifi(ICameraController_OooOO0O oooOO0O) {
    return _closeCameraWifi(oooOO0O);
  }  void resetCameraWifi(ICameraController_o000O0Oo o000O0Oo) {
    return _resetCameraWifi(o000O0Oo);
  }  void notifyOTAError(ICameraController_o000O00 o000O00) {
    return _notifyOTAError(o000O00);
  }  void setCameraWifiSeizable(int i, ICameraController_o000O o000O) {
    return _setCameraWifiSeizable(i, o000O);
  }  void uploadScriptJson(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) {
    return _uploadScriptJson(bs, oooOOO);
  }  void uploadScriptCmd(_$jni.JArray<_$jni.jbyte> bs, ICameraController_OooOOO oooOOO) {
    return _uploadScriptCmd(bs, oooOOO);
  }  void refreshScript(ICameraController_OooOOO oooOOO) {
    return _refreshScript(oooOOO);
  }  void runScript(ICameraController_OooOOO oooOOO) {
    return _runScript(oooOOO);
  }  void addFmgButtonClickListener(ICameraController_OooOo00 oooOo00) {
    return _addFmgButtonClickListener(oooOo00);
  }  void removeFmgButtonClickListener(ICameraController_OooOo00 oooOo00) {
    return _removeFmgButtonClickListener(oooOo00);
  }  void startFmgUpgrade(_$jni.JArray<_$jni.jbyte> bs, ICameraController_o00000O0 o00000O0) {
    return _startFmgUpgrade(bs, o00000O0);
  }  void cancelFmgUpgrade() {
    return _cancelFmgUpgrade();
  }  _$jni.JObject getFmgMode() {
    return _getFmgMode();
  }  void setFmgMode(_$jni.JObject ptzMode) {
    return _setFmgMode(ptzMode);
  }  bool isFmgSportMode() {
    return _isFmgSportMode();
  }  bool isFmgImbalance() {
    return _isFmgImbalance();
  }  _$jni.JObject getFmgFollowSpeed() {
    return _getFmgFollowSpeed();
  }  void setFmgFollowSpeed(_$jni.JObject ptzFollowSpeed) {
    return _setFmgFollowSpeed(ptzFollowSpeed);
  }  _$jni.JObject getFmgRcSpeed() {
    return _getFmgRcSpeed();
  }  void setFmgButtonEnabled(_$jni.JObject fmgButtonAbleParams) {
    return _setFmgButtonEnabled(fmgButtonAbleParams);
  }  void setFmgButtonDisabled(_$jni.JObject fmgButtonAbleParams) {
    return _setFmgButtonDisabled(fmgButtonAbleParams);
  }  void setFmgRcSpeed(_$jni.JObject ptzRcSpeed) {
    return _setFmgRcSpeed(ptzRcSpeed);
  }  _$jni.JObject getFmgZoomSpeed() {
    return _getFmgZoomSpeed();
  }  void setFmgZoomSpeed(_$jni.JObject ptzZoomSpeed) {
    return _setFmgZoomSpeed(ptzZoomSpeed);
  }  _$jni.JObject getFmgHorizontalDir() {
    return _getFmgHorizontalDir();
  }  void setFmgHorizontalDir(_$jni.JObject ptzRcHorizontalDir) {
    return _setFmgHorizontalDir(ptzRcHorizontalDir);
  }  _$jni.JObject getFmgVerticalDir() {
    return _getFmgVerticalDir();
  }  void setFmgVerticalDir(_$jni.JObject ptzRcVerticalDir) {
    return _setFmgVerticalDir(ptzRcVerticalDir);
  }  _$jni.JObject getFmgSoundEnable() {
    return _getFmgSoundEnable();
  }  _$jni.JObject getFmgSwitchModeWay() {
    return _getFmgSwitchModeWay();
  }  void setFmgSwitchModeWay(_$jni.JObject ptzSwitchModeWay) {
    return _setFmgSwitchModeWay(ptzSwitchModeWay);
  }  void setFmgSoundEnable(_$jni.JObject ptzSoundMode) {
    return _setFmgSoundEnable(ptzSoundMode);
  }  _$jni.JObject getFmgHvMode() {
    return _getFmgHvMode();
  }  void setFmgHvMode(_$jni.JObject ptzHvMode) {
    return _setFmgHvMode(ptzHvMode);
  }  bool isFmgLimitedYaw() {
    return _isFmgLimitedYaw();
  }  bool isFmgLimitedPitch() {
    return _isFmgLimitedPitch();
  }  bool isFmgSleep() {
    return _isFmgSleep();
  }  bool isFmgStalled() {
    return _isFmgStalled();
  }  bool isFmgPayload() {
    return _isFmgPayload();
  }  double getFmgVerticalTrimDegree() {
    return _getFmgVerticalTrimDegree();
  }  void setFmgVerticalTrimDegree(double f) {
    return _setFmgVerticalTrimDegree(f);
  }  void startOrUpdateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams) {
    return _startOrUpdateFmgTargetFollow(fmgTargetFollowParams);
  }  void lostFmgTargetFollow() {
    return _lostFmgTargetFollow();
  }  void exitFmgTargetFollow() {
    return _exitFmgTargetFollow();
  }  void speculateFmgTargetFollow(_$jni.JObject fmgTargetFollowParams) {
    return _speculateFmgTargetFollow(fmgTargetFollowParams);
  }  void setFmgZoomScale(int s) {
    return _setFmgZoomScale(s);
  }  void getFmgAngle(ICameraController_Oooo0 oooo0) {
    return _getFmgAngle(oooo0);
  }  void getFmgSpeed(ICameraController_o00O0O o00O0O) {
    return _getFmgSpeed(o00O0O);
  }  void setFmgAngle(double f, double f1, double f2, ICameraController_o0ooOOo o0ooOOo) {
    return _setFmgAngle(f, f1, f2, o0ooOOo);
  }  void setFmgSpeed(double f, double f1, double f2, ICameraController_o0O0O00 o0O0O00) {
    return _setFmgSpeed(f, f1, f2, o0O0O00);
  }  void setFmgIdle(ICameraController_o0Oo0oo o0Oo0oo) {
    return _setFmgIdle(o0Oo0oo);
  }  void setFmgTimeElapse(_$jni.JObject ptzTemMode, _$jni.JObject ptzTemState, int i, ICameraController_o000OOo o000OOo) {
    return _setFmgTimeElapse(ptzTemMode, ptzTemState, i, o000OOo);
  }  void setFmgPano(_$jni.JObject ptzPanoMode) {
    return _setFmgPano(ptzPanoMode);
  }  void resetFmgDefaultSettings(ICameraController_o0OO00O o0OO00O) {
    return _resetFmgDefaultSettings(o0OO00O);
  }  void getFmgTrackSensitivityMode(ICameraController_o00Oo0 o00Oo0) {
    return _getFmgTrackSensitivityMode(o00Oo0);
  }  void setFmgTrackSensitivityMode(_$jni.JObject ptzTrackSensitivityMode, ICameraController_o000000 o000000) {
    return _setFmgTrackSensitivityMode(ptzTrackSensitivityMode, o000000);
  }  void startFmgRecMode(_$jni.JObject ptzRecMode) {
    return _startFmgRecMode(ptzRecMode);
  }  void stopFmgRecMode(_$jni.JObject ptzRecMode) {
    return _stopFmgRecMode(ptzRecMode);
  }  void initFmgRecMode(_$jni.JObject ptzRecMode) {
    return _initFmgRecMode(ptzRecMode);
  }  void fmgVibration() {
    return _fmgVibration();
  }  void enableFmgHandDrag(_$jni.JObject arrayList) {
    return _enableFmgHandDrag(arrayList);
  }  void disableFmgHandDrag(_$jni.JObject arrayList) {
    return _disableFmgHandDrag(arrayList);
  }  void setFmgCameraFacing(bool z) {
    return _setFmgCameraFacing(z);
  }  void updateFmgPhoneImu(_$jni.JArray<_$jni.jfloat> fs) {
    return _updateFmgPhoneImu(fs);
  }  void getFmgAnalyticsData(ICameraController_Oooo000 oooo000) {
    return _getFmgAnalyticsData(oooo000);
  }  void setFmgAngleSeq(_$jni.JList<_$jni.JObject> list, ICameraController_o0OOO0o o0OOO0o) {
    return _setFmgAngleSeq(list, o0OOO0o);
  }  void clearFmgAnalyticsData() {
    return _clearFmgAnalyticsData();
  }  void startFmgHeartBeat() {
    return _startFmgHeartBeat();
  }  void stopFmgHeartBeat() {
    return _stopFmgHeartBeat();
  }}
final class $ICameraController$Type extends _$jni.JObjType<ICameraController> {
  

  @_$jni.internal
  const $ICameraController$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/ICameraController;';

  @_$jni.internal
  @_$core.override
  ICameraController fromReference(_$jni.JReference reference) => ICameraController.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraController$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraController$Type) &&
        other is $ICameraController$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.check.ICameraCheck`
class ICameraCheck extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ICameraCheck> $type;

  

  @_$jni.internal
  ICameraCheck.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/check/ICameraCheck');

      /// The type which includes information such as the signature of this class.
static const type = $ICameraCheck$Type();
  static final _id_startCheck = _class.instanceMethodId(
    r'startCheck',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoO0/OooO00o;)V',
  );

  static final _startCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void startCheck(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, OooO00o.OooO00o.OooO00o.OooO00o.OooO0O0.OooOoO0.OooO00o oooO00o)`
  void startCheck(BaseCamera baseCamera, _$jni.JObject oooO00o, ){
    
    _startCheck(reference.pointer, _id_startCheck as _$jni.JMethodIDPtr, baseCamera.reference.pointer, oooO00o.reference.pointer).check();
  }

  static final _id_waitCheck = _class.instanceMethodId(
    r'waitCheck',
    r'()V',
  );

  static final _waitCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void waitCheck()`
  void waitCheck(){
    
    _waitCheck(reference.pointer, _id_waitCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_continueCheck = _class.instanceMethodId(
    r'continueCheck',
    r'()V',
  );

  static final _continueCheck = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void continueCheck()`
  void continueCheck(){
    
    _continueCheck(reference.pointer, _id_continueCheck as _$jni.JMethodIDPtr).check();
  }

  static final _id_isWaiting = _class.instanceMethodId(
    r'isWaiting',
    r'()Z',
  );

  static final _isWaiting = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract boolean isWaiting()`
  bool isWaiting(){
    
    return _isWaiting(reference.pointer, _id_isWaiting as _$jni.JMethodIDPtr).boolean;
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $ICameraCheck> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'startCheck(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoO0/OooO00o;)V') {
          _$impls[$p]!.startCheck(
$a[0].as(const $BaseCamera$Type(), releaseOriginal: true),
$a[1].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'waitCheck()V') {
          _$impls[$p]!.waitCheck(
          );
          return _$jni.nullptr;
        }
        if ($d == r'continueCheck()V') {
          _$impls[$p]!.continueCheck(
          );
          return _$jni.nullptr;
        }
        if ($d == r'isWaiting()Z') {
          final $r = _$impls[$p]!.isWaiting(
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $ICameraCheck $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.insta360.basecamera.camera.check.ICameraCheck',
      $p,
      _$invokePointer,
      [
        if ($impl.startCheck$async) r'startCheck(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;LOooO00o/OooO00o/OooO00o/OooO00o/OooO0O0/OooOoO0/OooO00o;)V',
        if ($impl.waitCheck$async) r'waitCheck()V',
        if ($impl.continueCheck$async) r'continueCheck()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory ICameraCheck.implement(
    $ICameraCheck $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return ICameraCheck.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $ICameraCheck {
  factory $ICameraCheck(
    {required void Function(BaseCamera baseCamera, _$jni.JObject oooO00o) startCheck, bool startCheck$async,
    required void Function() waitCheck, bool waitCheck$async,
    required void Function() continueCheck, bool continueCheck$async,
    required bool Function() isWaiting,}
  ) = _$ICameraCheck;

  

  void startCheck(BaseCamera baseCamera, _$jni.JObject oooO00o);
  bool get startCheck$async => false;
  void waitCheck();
  bool get waitCheck$async => false;
  void continueCheck();
  bool get continueCheck$async => false;
  bool isWaiting();
}

final class _$ICameraCheck with $ICameraCheck {
  _$ICameraCheck(
    {required void Function(BaseCamera baseCamera, _$jni.JObject oooO00o) startCheck, this.startCheck$async = false,
    required void Function() waitCheck, this.waitCheck$async = false,
    required void Function() continueCheck, this.continueCheck$async = false,
    required bool Function() isWaiting,}
  ) :  _startCheck = startCheck, _waitCheck = waitCheck, _continueCheck = continueCheck, _isWaiting = isWaiting;

  

  final void Function(BaseCamera baseCamera, _$jni.JObject oooO00o) _startCheck;
  final bool startCheck$async;
  final void Function() _waitCheck;
  final bool waitCheck$async;
  final void Function() _continueCheck;
  final bool continueCheck$async;
  final bool Function() _isWaiting;

  void startCheck(BaseCamera baseCamera, _$jni.JObject oooO00o) {
    return _startCheck(baseCamera, oooO00o);
  }  void waitCheck() {
    return _waitCheck();
  }  void continueCheck() {
    return _continueCheck();
  }  bool isWaiting() {
    return _isWaiting();
  }}
final class $ICameraCheck$Type extends _$jni.JObjType<ICameraCheck> {
  

  @_$jni.internal
  const $ICameraCheck$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/check/ICameraCheck;';

  @_$jni.internal
  @_$core.override
  ICameraCheck fromReference(_$jni.JReference reference) => ICameraCheck.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ICameraCheck$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ICameraCheck$Type) &&
        other is $ICameraCheck$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.setting.StreamResolution`
class StreamResolution extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<StreamResolution> $type;

  

  @_$jni.internal
  StreamResolution.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/setting/StreamResolution');

      /// The type which includes information such as the signature of this class.
static const type = $StreamResolution$Type();
  static final _id_STREAM_3840_960_120FPS =
      _class.staticFieldId(
        r'STREAM_3840_960_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_960_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_960_120FPS => _id_STREAM_3840_960_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2944_736_180FPS =
      _class.staticFieldId(
        r'STREAM_2944_736_180FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2944_736_180FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2944_736_180FPS => _id_STREAM_2944_736_180FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_720_30FPS =
      _class.staticFieldId(
        r'STREAM_2880_720_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_720_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_720_30FPS => _id_STREAM_2880_720_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3840_30FPS =
      _class.staticFieldId(
        r'STREAM_7680_3840_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3840_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3840_30FPS => _id_STREAM_7680_3840_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3840_25FPS =
      _class.staticFieldId(
        r'STREAM_7680_3840_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3840_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3840_25FPS => _id_STREAM_7680_3840_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3840_24FPS =
      _class.staticFieldId(
        r'STREAM_7680_3840_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3840_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3840_24FPS => _id_STREAM_7680_3840_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6400_3200_30FPS =
      _class.staticFieldId(
        r'STREAM_6400_3200_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6400_3200_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6400_3200_30FPS => _id_STREAM_6400_3200_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6400_3200_25FPS =
      _class.staticFieldId(
        r'STREAM_6400_3200_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6400_3200_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6400_3200_25FPS => _id_STREAM_6400_3200_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6400_3200_24FPS =
      _class.staticFieldId(
        r'STREAM_6400_3200_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6400_3200_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6400_3200_24FPS => _id_STREAM_6400_3200_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6144_3072_30FPS =
      _class.staticFieldId(
        r'STREAM_6144_3072_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6144_3072_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6144_3072_30FPS => _id_STREAM_6144_3072_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6144_3072_25FPS =
      _class.staticFieldId(
        r'STREAM_6144_3072_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6144_3072_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6144_3072_25FPS => _id_STREAM_6144_3072_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6144_3072_24FPS =
      _class.staticFieldId(
        r'STREAM_6144_3072_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6144_3072_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6144_3072_24FPS => _id_STREAM_6144_3072_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6080_3040_30FPS =
      _class.staticFieldId(
        r'STREAM_6080_3040_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6080_3040_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6080_3040_30FPS => _id_STREAM_6080_3040_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6080_3040_25FPS =
      _class.staticFieldId(
        r'STREAM_6080_3040_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6080_3040_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6080_3040_25FPS => _id_STREAM_6080_3040_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6080_3040_24FPS =
      _class.staticFieldId(
        r'STREAM_6080_3040_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6080_3040_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6080_3040_24FPS => _id_STREAM_6080_3040_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5888_2944_30FPS =
      _class.staticFieldId(
        r'STREAM_5888_2944_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5888_2944_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5888_2944_30FPS => _id_STREAM_5888_2944_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5888_2944_25FPS =
      _class.staticFieldId(
        r'STREAM_5888_2944_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5888_2944_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5888_2944_25FPS => _id_STREAM_5888_2944_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5888_2944_24FPS =
      _class.staticFieldId(
        r'STREAM_5888_2944_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5888_2944_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5888_2944_24FPS => _id_STREAM_5888_2944_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5888_2880_30FPS =
      _class.staticFieldId(
        r'STREAM_5888_2880_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5888_2880_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5888_2880_30FPS => _id_STREAM_5888_2880_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5760_2880_30FPS =
      _class.staticFieldId(
        r'STREAM_5760_2880_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5760_2880_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5760_2880_30FPS => _id_STREAM_5760_2880_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5760_2880_25FPS =
      _class.staticFieldId(
        r'STREAM_5760_2880_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5760_2880_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5760_2880_25FPS => _id_STREAM_5760_2880_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5760_2880_24FPS =
      _class.staticFieldId(
        r'STREAM_5760_2880_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5760_2880_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5760_2880_24FPS => _id_STREAM_5760_2880_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5760_2880_15FPS =
      _class.staticFieldId(
        r'STREAM_5760_2880_15FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5760_2880_15FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5760_2880_15FPS => _id_STREAM_5760_2880_15FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3968_1920_30FPS =
      _class.staticFieldId(
        r'STREAM_3968_1920_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3968_1920_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3968_1920_30FPS => _id_STREAM_3968_1920_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_1920_60FPS =
      _class.staticFieldId(
        r'STREAM_3840_1920_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_1920_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_1920_60FPS => _id_STREAM_3840_1920_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_1920_50FPS =
      _class.staticFieldId(
        r'STREAM_3840_1920_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_1920_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_1920_50FPS => _id_STREAM_3840_1920_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_1920_30FPS =
      _class.staticFieldId(
        r'STREAM_3840_1920_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_1920_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_1920_30FPS => _id_STREAM_3840_1920_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_1920_25FPS =
      _class.staticFieldId(
        r'STREAM_3840_1920_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_1920_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_1920_25FPS => _id_STREAM_3840_1920_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_1920_24FPS =
      _class.staticFieldId(
        r'STREAM_3840_1920_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_1920_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_1920_24FPS => _id_STREAM_3840_1920_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3040_1520_50FPS =
      _class.staticFieldId(
        r'STREAM_3040_1520_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3040_1520_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3040_1520_50FPS => _id_STREAM_3040_1520_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3040_1520_30FPS =
      _class.staticFieldId(
        r'STREAM_3040_1520_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3040_1520_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3040_1520_30FPS => _id_STREAM_3040_1520_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3008_1504_100FPS =
      _class.staticFieldId(
        r'STREAM_3008_1504_100FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3008_1504_100FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3008_1504_100FPS => _id_STREAM_3008_1504_100FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3000_1500_120FPS =
      _class.staticFieldId(
        r'STREAM_3000_1500_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3000_1500_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3000_1500_120FPS => _id_STREAM_3000_1500_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_1440_60FPS =
      _class.staticFieldId(
        r'STREAM_2880_1440_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_1440_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_1440_60FPS => _id_STREAM_2880_1440_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_1440_50FPS =
      _class.staticFieldId(
        r'STREAM_2880_1440_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_1440_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_1440_50FPS => _id_STREAM_2880_1440_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_1440_30FPS =
      _class.staticFieldId(
        r'STREAM_2880_1440_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_1440_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_1440_30FPS => _id_STREAM_2880_1440_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_1440_25FPS =
      _class.staticFieldId(
        r'STREAM_2880_1440_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_1440_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_1440_25FPS => _id_STREAM_2880_1440_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_1440_24FPS =
      _class.staticFieldId(
        r'STREAM_2880_1440_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_1440_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_1440_24FPS => _id_STREAM_2880_1440_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1280_30FPS =
      _class.staticFieldId(
        r'STREAM_2560_1280_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1280_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1280_30FPS => _id_STREAM_2560_1280_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2176_1088_30FPS =
      _class.staticFieldId(
        r'STREAM_2176_1088_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2176_1088_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2176_1088_30FPS => _id_STREAM_2176_1088_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_960_30FPS =
      _class.staticFieldId(
        r'STREAM_1920_960_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_960_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_960_30FPS => _id_STREAM_1920_960_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_720_30FPS =
      _class.staticFieldId(
        r'STREAM_1440_720_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_720_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_720_30FPS => _id_STREAM_1440_720_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_720_15FPS =
      _class.staticFieldId(
        r'STREAM_1440_720_15FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_720_15FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_720_15FPS => _id_STREAM_1440_720_15FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_720_360_30FPS =
      _class.staticFieldId(
        r'STREAM_720_360_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_720_360_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_720_360_30FPS => _id_STREAM_720_360_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_480_240_30FPS =
      _class.staticFieldId(
        r'STREAM_480_240_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_480_240_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_480_240_30FPS => _id_STREAM_480_240_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2880_60FPS =
      _class.staticFieldId(
        r'STREAM_1440_2880_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2880_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2880_60FPS => _id_STREAM_1440_2880_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2880_50FPS =
      _class.staticFieldId(
        r'STREAM_1440_2880_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2880_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2880_50FPS => _id_STREAM_1440_2880_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2880_30FPS =
      _class.staticFieldId(
        r'STREAM_1440_2880_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2880_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2880_30FPS => _id_STREAM_1440_2880_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2880_25FPS =
      _class.staticFieldId(
        r'STREAM_1440_2880_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2880_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2880_25FPS => _id_STREAM_1440_2880_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2880_24FPS =
      _class.staticFieldId(
        r'STREAM_1440_2880_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2880_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2880_24FPS => _id_STREAM_1440_2880_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_4320_30FPS =
      _class.staticFieldId(
        r'STREAM_7680_4320_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_4320_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_4320_30FPS => _id_STREAM_7680_4320_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_4320_25FPS =
      _class.staticFieldId(
        r'STREAM_7680_4320_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_4320_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_4320_25FPS => _id_STREAM_7680_4320_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_4320_24FPS =
      _class.staticFieldId(
        r'STREAM_7680_4320_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_4320_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_4320_24FPS => _id_STREAM_7680_4320_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_2988_30FPS =
      _class.staticFieldId(
        r'STREAM_5312_2988_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_2988_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_2988_30FPS => _id_STREAM_5312_2988_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_2988_25FPS =
      _class.staticFieldId(
        r'STREAM_5312_2988_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_2988_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_2988_25FPS => _id_STREAM_5312_2988_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_2988_24FPS =
      _class.staticFieldId(
        r'STREAM_5312_2988_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_2988_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_2988_24FPS => _id_STREAM_5312_2988_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_120FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_120FPS => _id_STREAM_3840_2160_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_100FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_100FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_100FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_100FPS => _id_STREAM_3840_2160_100FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_60FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_60FPS => _id_STREAM_3840_2160_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_50FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_50FPS => _id_STREAM_3840_2160_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_30FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_30FPS => _id_STREAM_3840_2160_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_25FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_25FPS => _id_STREAM_3840_2160_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3840_2160_24FPS =
      _class.staticFieldId(
        r'STREAM_3840_2160_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3840_2160_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3840_2160_24FPS => _id_STREAM_3840_2160_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2016_60FPS =
      _class.staticFieldId(
        r'STREAM_3584_2016_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2016_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2016_60FPS => _id_STREAM_3584_2016_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2016_50FPS =
      _class.staticFieldId(
        r'STREAM_3584_2016_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2016_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2016_50FPS => _id_STREAM_3584_2016_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2016_30FPS =
      _class.staticFieldId(
        r'STREAM_3584_2016_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2016_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2016_30FPS => _id_STREAM_3584_2016_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2016_25FPS =
      _class.staticFieldId(
        r'STREAM_3584_2016_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2016_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2016_25FPS => _id_STREAM_3584_2016_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2016_24FPS =
      _class.staticFieldId(
        r'STREAM_3584_2016_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2016_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2016_24FPS => _id_STREAM_3584_2016_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_120FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_120FPS => _id_STREAM_2720_1530_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_100FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_100FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_100FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_100FPS => _id_STREAM_2720_1530_100FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_60FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_60FPS => _id_STREAM_2720_1530_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_50FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_50FPS => _id_STREAM_2720_1530_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_30FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_30FPS => _id_STREAM_2720_1530_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_25FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_25FPS => _id_STREAM_2720_1530_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_1530_24FPS =
      _class.staticFieldId(
        r'STREAM_2720_1530_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_1530_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_1530_24FPS => _id_STREAM_2720_1530_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_60FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_60FPS => _id_STREAM_2560_1440_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_50FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_50FPS => _id_STREAM_2560_1440_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_30FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_30FPS => _id_STREAM_2560_1440_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_25FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_25FPS => _id_STREAM_2560_1440_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_24FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_24FPS => _id_STREAM_2560_1440_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2560_1440_15FPS =
      _class.staticFieldId(
        r'STREAM_2560_1440_15FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2560_1440_15FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2560_1440_15FPS => _id_STREAM_2560_1440_15FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_240FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_240FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_240FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_240FPS => _id_STREAM_1920_1080_240FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_200FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_200FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_200FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_200FPS => _id_STREAM_1920_1080_200FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_120FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_120FPS => _id_STREAM_1920_1080_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_100FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_100FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_100FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_100FPS => _id_STREAM_1920_1080_100FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_60FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_60FPS => _id_STREAM_1920_1080_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_50FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_50FPS => _id_STREAM_1920_1080_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_30FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_30FPS => _id_STREAM_1920_1080_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_25FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_25FPS => _id_STREAM_1920_1080_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1080_24FPS =
      _class.staticFieldId(
        r'STREAM_1920_1080_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1080_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1080_24FPS => _id_STREAM_1920_1080_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1760_990_30FPS =
      _class.staticFieldId(
        r'STREAM_1760_990_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1760_990_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1760_990_30FPS => _id_STREAM_1760_990_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1600_900_30FPS =
      _class.staticFieldId(
        r'STREAM_1600_900_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1600_900_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1600_900_30FPS => _id_STREAM_1600_900_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1280_720_30FPS =
      _class.staticFieldId(
        r'STREAM_1280_720_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1280_720_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1280_720_30FPS => _id_STREAM_1280_720_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1152_648_30FPS =
      _class.staticFieldId(
        r'STREAM_1152_648_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1152_648_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1152_648_30FPS => _id_STREAM_1152_648_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_640_360_30FPS =
      _class.staticFieldId(
        r'STREAM_640_360_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_640_360_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_640_360_30FPS => _id_STREAM_640_360_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_424_240_15FPS =
      _class.staticFieldId(
        r'STREAM_424_240_15FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_424_240_15FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_424_240_15FPS => _id_STREAM_424_240_15FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2160_3840_60 =
      _class.staticFieldId(
        r'STREAM_2160_3840_60',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2160_3840_60`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2160_3840_60 => _id_STREAM_2160_3840_60.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2160_3840_50 =
      _class.staticFieldId(
        r'STREAM_2160_3840_50',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2160_3840_50`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2160_3840_50 => _id_STREAM_2160_3840_50.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2160_3840_30 =
      _class.staticFieldId(
        r'STREAM_2160_3840_30',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2160_3840_30`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2160_3840_30 => _id_STREAM_2160_3840_30.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2160_3840_25 =
      _class.staticFieldId(
        r'STREAM_2160_3840_25',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2160_3840_25`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2160_3840_25 => _id_STREAM_2160_3840_25.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2160_3840_24 =
      _class.staticFieldId(
        r'STREAM_2160_3840_24',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2160_3840_24`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2160_3840_24 => _id_STREAM_2160_3840_24.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2016_3584_60FPS =
      _class.staticFieldId(
        r'STREAM_2016_3584_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2016_3584_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2016_3584_60FPS => _id_STREAM_2016_3584_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2016_3584_50FPS =
      _class.staticFieldId(
        r'STREAM_2016_3584_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2016_3584_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2016_3584_50FPS => _id_STREAM_2016_3584_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2016_3584_30FPS =
      _class.staticFieldId(
        r'STREAM_2016_3584_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2016_3584_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2016_3584_30FPS => _id_STREAM_2016_3584_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2016_3584_25FPS =
      _class.staticFieldId(
        r'STREAM_2016_3584_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2016_3584_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2016_3584_25FPS => _id_STREAM_2016_3584_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2016_3584_24FPS =
      _class.staticFieldId(
        r'STREAM_2016_3584_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2016_3584_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2016_3584_24FPS => _id_STREAM_2016_3584_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1530_2720_60 =
      _class.staticFieldId(
        r'STREAM_1530_2720_60',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1530_2720_60`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1530_2720_60 => _id_STREAM_1530_2720_60.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1530_2720_50 =
      _class.staticFieldId(
        r'STREAM_1530_2720_50',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1530_2720_50`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1530_2720_50 => _id_STREAM_1530_2720_50.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1530_2720_30 =
      _class.staticFieldId(
        r'STREAM_1530_2720_30',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1530_2720_30`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1530_2720_30 => _id_STREAM_1530_2720_30.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1530_2720_25 =
      _class.staticFieldId(
        r'STREAM_1530_2720_25',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1530_2720_25`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1530_2720_25 => _id_STREAM_1530_2720_25.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1530_2720_24 =
      _class.staticFieldId(
        r'STREAM_1530_2720_24',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1530_2720_24`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1530_2720_24 => _id_STREAM_1530_2720_24.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_60FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_60FPS => _id_STREAM_1440_2560_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_50FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_50FPS => _id_STREAM_1440_2560_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_30FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_30FPS => _id_STREAM_1440_2560_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_25FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_25FPS => _id_STREAM_1440_2560_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_24FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_24FPS => _id_STREAM_1440_2560_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_2560_15FPS =
      _class.staticFieldId(
        r'STREAM_1440_2560_15FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_2560_15FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_2560_15FPS => _id_STREAM_1440_2560_15FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_120FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_120FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_120FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_120FPS => _id_STREAM_1080_1920_120FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_100FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_100FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_100FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_100FPS => _id_STREAM_1080_1920_100FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_60FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_60FPS => _id_STREAM_1080_1920_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_50FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_50FPS => _id_STREAM_1080_1920_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_30FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_30FPS => _id_STREAM_1080_1920_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_25FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_25FPS => _id_STREAM_1080_1920_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1080_1920_24FPS =
      _class.staticFieldId(
        r'STREAM_1080_1920_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1080_1920_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1080_1920_24FPS => _id_STREAM_1080_1920_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_720_1280_30FPS =
      _class.staticFieldId(
        r'STREAM_720_1280_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_720_1280_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_720_1280_30FPS => _id_STREAM_720_1280_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_648_1152_30FPS =
      _class.staticFieldId(
        r'STREAM_648_1152_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_648_1152_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_648_1152_30FPS => _id_STREAM_648_1152_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_360_640_30FPS =
      _class.staticFieldId(
        r'STREAM_360_640_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_360_640_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_360_640_30FPS => _id_STREAM_360_640_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_4000_3000_60FPS =
      _class.staticFieldId(
        r'STREAM_4000_3000_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_4000_3000_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_4000_3000_60FPS => _id_STREAM_4000_3000_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_4000_3000_50FPS =
      _class.staticFieldId(
        r'STREAM_4000_3000_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_4000_3000_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_4000_3000_50FPS => _id_STREAM_4000_3000_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_4000_3000_30FPS =
      _class.staticFieldId(
        r'STREAM_4000_3000_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_4000_3000_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_4000_3000_30FPS => _id_STREAM_4000_3000_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_4000_3000_25FPS =
      _class.staticFieldId(
        r'STREAM_4000_3000_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_4000_3000_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_4000_3000_25FPS => _id_STREAM_4000_3000_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_4000_3000_24FPS =
      _class.staticFieldId(
        r'STREAM_4000_3000_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_4000_3000_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_4000_3000_24FPS => _id_STREAM_4000_3000_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_2040_60FPS =
      _class.staticFieldId(
        r'STREAM_2720_2040_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_2040_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_2040_60FPS => _id_STREAM_2720_2040_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_2040_50FPS =
      _class.staticFieldId(
        r'STREAM_2720_2040_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_2040_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_2040_50FPS => _id_STREAM_2720_2040_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_2040_30FPS =
      _class.staticFieldId(
        r'STREAM_2720_2040_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_2040_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_2040_30FPS => _id_STREAM_2720_2040_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_2040_25FPS =
      _class.staticFieldId(
        r'STREAM_2720_2040_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_2040_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_2040_25FPS => _id_STREAM_2720_2040_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2720_2040_24FPS =
      _class.staticFieldId(
        r'STREAM_2720_2040_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2720_2040_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2720_2040_24FPS => _id_STREAM_2720_2040_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1440_60FPS =
      _class.staticFieldId(
        r'STREAM_1920_1440_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1440_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1440_60FPS => _id_STREAM_1920_1440_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1440_50FPS =
      _class.staticFieldId(
        r'STREAM_1920_1440_50FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1440_50FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1440_50FPS => _id_STREAM_1920_1440_50FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1440_30FPS =
      _class.staticFieldId(
        r'STREAM_1920_1440_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1440_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1440_30FPS => _id_STREAM_1920_1440_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1440_25FPS =
      _class.staticFieldId(
        r'STREAM_1920_1440_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1440_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1440_25FPS => _id_STREAM_1920_1440_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1920_1440_24FPS =
      _class.staticFieldId(
        r'STREAM_1920_1440_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1920_1440_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1920_1440_24FPS => _id_STREAM_1920_1440_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1280_960_30FPS =
      _class.staticFieldId(
        r'STREAM_1280_960_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1280_960_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1280_960_30FPS => _id_STREAM_1280_960_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_640_480_30FPS =
      _class.staticFieldId(
        r'STREAM_640_480_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_640_480_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_640_480_30FPS => _id_STREAM_640_480_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_1920_60FPS =
      _class.staticFieldId(
        r'STREAM_1440_1920_60FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_1920_60FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_1920_60FPS => _id_STREAM_1440_1920_60FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1440_1920_30FPS =
      _class.staticFieldId(
        r'STREAM_1440_1920_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1440_1920_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1440_1920_30FPS => _id_STREAM_1440_1920_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_960_1280_30FPS =
      _class.staticFieldId(
        r'STREAM_960_1280_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_960_1280_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_960_1280_30FPS => _id_STREAM_960_1280_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_480_640_30FPS =
      _class.staticFieldId(
        r'STREAM_480_640_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_480_640_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_480_640_30FPS => _id_STREAM_480_640_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_2880_25FPS =
      _class.staticFieldId(
        r'STREAM_2880_2880_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_2880_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_2880_25FPS => _id_STREAM_2880_2880_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_2880_24FPS =
      _class.staticFieldId(
        r'STREAM_2880_2880_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_2880_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_2880_24FPS => _id_STREAM_2880_2880_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2880_2880_30FPS =
      _class.staticFieldId(
        r'STREAM_2880_2880_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2880_2880_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2880_2880_30FPS => _id_STREAM_2880_2880_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1152_1152_30FPS =
      _class.staticFieldId(
        r'STREAM_1152_1152_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1152_1152_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1152_1152_30FPS => _id_STREAM_1152_1152_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_854_854_30FPS =
      _class.staticFieldId(
        r'STREAM_854_854_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_854_854_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_854_854_30FPS => _id_STREAM_854_854_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_640_640_30FPS =
      _class.staticFieldId(
        r'STREAM_640_640_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_640_640_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_640_640_30FPS => _id_STREAM_640_640_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_368_368_30FPS =
      _class.staticFieldId(
        r'STREAM_368_368_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_368_368_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_368_368_30FPS => _id_STREAM_368_368_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_3552_30FPS =
      _class.staticFieldId(
        r'STREAM_5312_3552_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_3552_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_3552_30FPS => _id_STREAM_5312_3552_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_3552_25FPS =
      _class.staticFieldId(
        r'STREAM_5312_3552_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_3552_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_3552_25FPS => _id_STREAM_5312_3552_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5312_3552_24FPS =
      _class.staticFieldId(
        r'STREAM_5312_3552_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5312_3552_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5312_3552_24FPS => _id_STREAM_5312_3552_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2400_30FPS =
      _class.staticFieldId(
        r'STREAM_3584_2400_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2400_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2400_30FPS => _id_STREAM_3584_2400_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2400_25FPS =
      _class.staticFieldId(
        r'STREAM_3584_2400_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2400_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2400_25FPS => _id_STREAM_3584_2400_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_3584_2400_24FPS =
      _class.staticFieldId(
        r'STREAM_3584_2400_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_3584_2400_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_3584_2400_24FPS => _id_STREAM_3584_2400_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_1152_768_30FPS =
      _class.staticFieldId(
        r'STREAM_1152_768_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_1152_768_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_1152_768_30FPS => _id_STREAM_1152_768_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2400_3584_30FPS =
      _class.staticFieldId(
        r'STREAM_2400_3584_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2400_3584_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2400_3584_30FPS => _id_STREAM_2400_3584_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2400_3584_25FPS =
      _class.staticFieldId(
        r'STREAM_2400_3584_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2400_3584_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2400_3584_25FPS => _id_STREAM_2400_3584_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_2400_3584_24FPS =
      _class.staticFieldId(
        r'STREAM_2400_3584_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_2400_3584_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_2400_3584_24FPS => _id_STREAM_2400_3584_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3268_30FPS =
      _class.staticFieldId(
        r'STREAM_7680_3268_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3268_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3268_30FPS => _id_STREAM_7680_3268_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3268_25FPS =
      _class.staticFieldId(
        r'STREAM_7680_3268_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3268_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3268_25FPS => _id_STREAM_7680_3268_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_7680_3268_24FPS =
      _class.staticFieldId(
        r'STREAM_7680_3268_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_7680_3268_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_7680_3268_24FPS => _id_STREAM_7680_3268_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6720_2856_25FPS =
      _class.staticFieldId(
        r'STREAM_6720_2856_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6720_2856_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6720_2856_25FPS => _id_STREAM_6720_2856_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6720_2856_24FPS =
      _class.staticFieldId(
        r'STREAM_6720_2856_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6720_2856_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6720_2856_24FPS => _id_STREAM_6720_2856_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6016_2560_25FPS =
      _class.staticFieldId(
        r'STREAM_6016_2560_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6016_2560_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6016_2560_25FPS => _id_STREAM_6016_2560_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_6016_2560_24FPS =
      _class.staticFieldId(
        r'STREAM_6016_2560_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_6016_2560_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_6016_2560_24FPS => _id_STREAM_6016_2560_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5472_2328_30FPS =
      _class.staticFieldId(
        r'STREAM_5472_2328_30FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5472_2328_30FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5472_2328_30FPS => _id_STREAM_5472_2328_30FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5472_2328_25FPS =
      _class.staticFieldId(
        r'STREAM_5472_2328_25FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5472_2328_25FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5472_2328_25FPS => _id_STREAM_5472_2328_25FPS.get(_class, const $StreamResolution$Type());

  static final _id_STREAM_5472_2328_24FPS =
      _class.staticFieldId(
        r'STREAM_5472_2328_24FPS',
        r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution STREAM_5472_2328_24FPS`
  /// The returned object must be released after use, by calling the [release] method.
static StreamResolution get STREAM_5472_2328_24FPS => _id_STREAM_5472_2328_24FPS.get(_class, const $StreamResolution$Type());

  static final _id_OooO00o =
      _class.staticFieldId(
        r'OooO00o',
        r'[Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
      );
  /// from: `synthetic static public final com.arashivision.insta360.basecamera.camera.setting.StreamResolution[] OooO00o`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<StreamResolution> get OooO00o => _id_OooO00o.get(_class, const _$jni.JArrayType($StreamResolution$Type()));

  static final _id_width =
      _class.instanceFieldId(
        r'width',
        r'I',
      );
  /// from: `public int width`
int get width => _id_width.get(this, const _$jni.jintType());

  /// from: `public int width`
set width(int value) => _id_width.set(this, const _$jni.jintType(), value);

  static final _id_height =
      _class.instanceFieldId(
        r'height',
        r'I',
      );
  /// from: `public int height`
int get height => _id_height.get(this, const _$jni.jintType());

  /// from: `public int height`
set height(int value) => _id_height.set(this, const _$jni.jintType(), value);

  static final _id_fps =
      _class.instanceFieldId(
        r'fps',
        r'I',
      );
  /// from: `public int fps`
int get fps => _id_fps.get(this, const _$jni.jintType());

  /// from: `public int fps`
set fps(int value) => _id_fps.set(this, const _$jni.jintType(), value);

  static final _id_bitrate =
      _class.instanceFieldId(
        r'bitrate',
        r'I',
      );
  /// from: `public int bitrate`
int get bitrate => _id_bitrate.get(this, const _$jni.jintType());

  /// from: `public int bitrate`
set bitrate(int value) => _id_bitrate.set(this, const _$jni.jintType(), value);

  static final _id_valueInCamera =
      _class.instanceFieldId(
        r'valueInCamera',
        r'I',
      );
  /// from: `public int valueInCamera`
int get valueInCamera => _id_valueInCamera.get(this, const _$jni.jintType());

  /// from: `public int valueInCamera`
set valueInCamera(int value) => _id_valueInCamera.set(this, const _$jni.jintType(), value);

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.setting.StreamResolution[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<StreamResolution> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($StreamResolution$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.setting.StreamResolution valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static StreamResolution valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $StreamResolution$Type());
  }

  static final _id_new$ = _class.constructorId(
    r'(Ljava/lang/String;IIIIII)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, int, int, int, int)>();
  /// from: `public void <init>(java.lang.String string, int i, int i1, int i2, int i3, int i4, int i5)`
  /// The returned object must be released after use, by calling the [release] method.
  factory StreamResolution(_$jni.JString string, int i, int i1, int i2, int i3, int i4, int i5, ) {
    
    return StreamResolution.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, string.reference.pointer, i, i1, i2, i3, i4, i5).reference
    );
  }

  static final _id_getFromCameraValue = _class.staticMethodId(
    r'getFromCameraValue',
    r'(I)Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getFromCameraValue = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getFromCameraValue(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  static StreamResolution getFromCameraValue(int i, ){
    
    return _getFromCameraValue(_class.reference.pointer, _id_getFromCameraValue as _$jni.JMethodIDPtr, i).object(const $StreamResolution$Type());
  }

  static final _id_getFromResolution = _class.staticMethodId(
    r'getFromResolution',
    r'(III)Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;',
  );

  static final _getFromResolution = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `static public com.arashivision.insta360.basecamera.camera.setting.StreamResolution getFromResolution(int i, int i1, int i2)`
  /// The returned object must be released after use, by calling the [release] method.
  static StreamResolution getFromResolution(int i, int i1, int i2, ){
    
    return _getFromResolution(_class.reference.pointer, _id_getFromResolution as _$jni.JMethodIDPtr, i, i1, i2).object(const $StreamResolution$Type());
  }


}
final class $StreamResolution$Type extends _$jni.JObjType<StreamResolution> {
  

  @_$jni.internal
  const $StreamResolution$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/setting/StreamResolution;';

  @_$jni.internal
  @_$core.override
  StreamResolution fromReference(_$jni.JReference reference) => StreamResolution.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($StreamResolution$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($StreamResolution$Type) &&
        other is $StreamResolution$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.setting.TimelapseParams`
class TimelapseParams extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<TimelapseParams> $type;

  

  @_$jni.internal
  TimelapseParams.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/setting/TimelapseParams');

      /// The type which includes information such as the signature of this class.
static const type = $TimelapseParams$Type();
  static final _id_mDurationS =
      _class.instanceFieldId(
        r'mDurationS',
        r'I',
      );
  /// from: `public int mDurationS`
int get mDurationS => _id_mDurationS.get(this, const _$jni.jintType());

  /// from: `public int mDurationS`
set mDurationS(int value) => _id_mDurationS.set(this, const _$jni.jintType(), value);

  static final _id_mIntervalMs =
      _class.instanceFieldId(
        r'mIntervalMs',
        r'I',
      );
  /// from: `public int mIntervalMs`
int get mIntervalMs => _id_mIntervalMs.get(this, const _$jni.jintType());

  /// from: `public int mIntervalMs`
set mIntervalMs(int value) => _id_mIntervalMs.set(this, const _$jni.jintType(), value);

  static final _id_mAccelerateFequency =
      _class.instanceFieldId(
        r'mAccelerateFequency',
        r'I',
      );
  /// from: `public int mAccelerateFequency`
int get mAccelerateFequency => _id_mAccelerateFequency.get(this, const _$jni.jintType());

  /// from: `public int mAccelerateFequency`
set mAccelerateFequency(int value) => _id_mAccelerateFequency.set(this, const _$jni.jintType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory TimelapseParams() {
    
    return TimelapseParams.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_new$1 = _class.constructorId(
    r'(III)V',
  );

  static final _new$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void <init>(int i, int i1, int i2)`
  /// The returned object must be released after use, by calling the [release] method.
  factory TimelapseParams.new$1(int i, int i1, int i2, ) {
    
    return TimelapseParams.fromReference(
      
      _new$1(_class.reference.pointer, _id_new$1 as _$jni.JMethodIDPtr, i, i1, i2).reference
    );
  }

}
final class $TimelapseParams$Type extends _$jni.JObjType<TimelapseParams> {
  

  @_$jni.internal
  const $TimelapseParams$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/setting/TimelapseParams;';

  @_$jni.internal
  @_$core.override
  TimelapseParams fromReference(_$jni.JReference reference) => TimelapseParams.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($TimelapseParams$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($TimelapseParams$Type) &&
        other is $TimelapseParams$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.camera.setting.VideoResolution`
class VideoResolution extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<VideoResolution> $type;

  

  @_$jni.internal
  VideoResolution.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/camera/setting/VideoResolution');

      /// The type which includes information such as the signature of this class.
static const type = $VideoResolution$Type();
  static final _id_mFps =
      _class.instanceFieldId(
        r'mFps',
        r'I',
      );
  /// from: `public int mFps`
int get mFps => _id_mFps.get(this, const _$jni.jintType());

  /// from: `public int mFps`
set mFps(int value) => _id_mFps.set(this, const _$jni.jintType(), value);

  static final _id_mWidth =
      _class.instanceFieldId(
        r'mWidth',
        r'I',
      );
  /// from: `public int mWidth`
int get mWidth => _id_mWidth.get(this, const _$jni.jintType());

  /// from: `public int mWidth`
set mWidth(int value) => _id_mWidth.set(this, const _$jni.jintType(), value);

  static final _id_mHeight =
      _class.instanceFieldId(
        r'mHeight',
        r'I',
      );
  /// from: `public int mHeight`
int get mHeight => _id_mHeight.get(this, const _$jni.jintType());

  /// from: `public int mHeight`
set mHeight(int value) => _id_mHeight.set(this, const _$jni.jintType(), value);

  static final _id_new$ = _class.constructorId(
    r'(III)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public void <init>(int i, int i1, int i2)`
  /// The returned object must be released after use, by calling the [release] method.
  factory VideoResolution(int i, int i1, int i2, ) {
    
    return VideoResolution.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, i, i1, i2).reference
    );
  }

}
final class $VideoResolution$Type extends _$jni.JObjType<VideoResolution> {
  

  @_$jni.internal
  const $VideoResolution$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/camera/setting/VideoResolution;';

  @_$jni.internal
  @_$core.override
  VideoResolution fromReference(_$jni.JReference reference) => VideoResolution.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($VideoResolution$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($VideoResolution$Type) &&
        other is $VideoResolution$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.log.CameraLogger`
class CameraLogger extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraLogger> $type;

  

  @_$jni.internal
  CameraLogger.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/log/CameraLogger');

      /// The type which includes information such as the signature of this class.
static const type = $CameraLogger$Type();
  static final _id_getLogger = _class.staticMethodId(
    r'getLogger',
    r'(Ljava/lang/String;)Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
  );

  static final _getLogger = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.log.CameraLogger getLogger(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraLogger getLogger(_$jni.JString string, ){
    
    return _getLogger(_class.reference.pointer, _id_getLogger as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CameraLogger$Type());
  }

  static final _id_getLogger$1 = _class.staticMethodId(
    r'getLogger',
    r'(Ljava/lang/String;Z)Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
  );

  static final _getLogger$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `static public com.arashivision.insta360.basecamera.log.CameraLogger getLogger(java.lang.String string, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraLogger getLogger$1(_$jni.JString string, bool z, ){
    
    return _getLogger$1(_class.reference.pointer, _id_getLogger$1 as _$jni.JMethodIDPtr, string.reference.pointer, z ? 1 : 0).object(const $CameraLogger$Type());
  }

  static final _id_getLogger$2 = _class.staticMethodId(
    r'getLogger',
    r'(Ljava/lang/Class;)Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
  );

  static final _getLogger$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basecamera.log.CameraLogger getLogger(java.lang.Class class)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraLogger getLogger$2(_$jni.JObject class$, ){
    
    return _getLogger$2(_class.reference.pointer, _id_getLogger$2 as _$jni.JMethodIDPtr, class$.reference.pointer).object(const $CameraLogger$Type());
  }

  static final _id_getLogger$3 = _class.staticMethodId(
    r'getLogger',
    r'(Ljava/lang/Class;Z)Lcom/arashivision/insta360/basecamera/log/CameraLogger;',
  );

  static final _getLogger$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `static public com.arashivision.insta360.basecamera.log.CameraLogger getLogger(java.lang.Class class, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  static CameraLogger getLogger$3(_$jni.JObject class$, bool z, ){
    
    return _getLogger$3(_class.reference.pointer, _id_getLogger$3 as _$jni.JMethodIDPtr, class$.reference.pointer, z ? 1 : 0).object(const $CameraLogger$Type());
  }

  static final _id_v = _class.instanceMethodId(
    r'v',
    r'(Ljava/lang/String;)V',
  );

  static final _v = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void v(java.lang.String string)`
  void v(_$jni.JString string, ){
    
    _v(reference.pointer, _id_v as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_d = _class.instanceMethodId(
    r'd',
    r'(Ljava/lang/String;)V',
  );

  static final _d = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void d(java.lang.String string)`
  void d(_$jni.JString string, ){
    
    _d(reference.pointer, _id_d as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_i = _class.instanceMethodId(
    r'i',
    r'(Ljava/lang/String;)V',
  );

  static final _i = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void i(java.lang.String string)`
  void i(_$jni.JString string, ){
    
    _i(reference.pointer, _id_i as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_w = _class.instanceMethodId(
    r'w',
    r'(Ljava/lang/String;)V',
  );

  static final _w = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void w(java.lang.String string)`
  void w(_$jni.JString string, ){
    
    _w(reference.pointer, _id_w as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_e = _class.instanceMethodId(
    r'e',
    r'(Ljava/lang/String;)V',
  );

  static final _e = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void e(java.lang.String string)`
  void e(_$jni.JString string, ){
    
    _e(reference.pointer, _id_e as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_t = _class.instanceMethodId(
    r't',
    r'(Ljava/lang/Throwable;)V',
  );

  static final _t = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void t(java.lang.Throwable throwable)`
  void t(_$jni.JObject throwable, ){
    
    _t(reference.pointer, _id_t as _$jni.JMethodIDPtr, throwable.reference.pointer).check();
  }

  static final _id_sv = _class.instanceMethodId(
    r'sv',
    r'(Ljava/lang/String;)V',
  );

  static final _sv = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void sv(java.lang.String string)`
  void sv(_$jni.JString string, ){
    
    _sv(reference.pointer, _id_sv as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_sd = _class.instanceMethodId(
    r'sd',
    r'(Ljava/lang/String;)V',
  );

  static final _sd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void sd(java.lang.String string)`
  void sd(_$jni.JString string, ){
    
    _sd(reference.pointer, _id_sd as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_si = _class.instanceMethodId(
    r'si',
    r'(Ljava/lang/String;)V',
  );

  static final _si = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void si(java.lang.String string)`
  void si(_$jni.JString string, ){
    
    _si(reference.pointer, _id_si as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_sw = _class.instanceMethodId(
    r'sw',
    r'(Ljava/lang/String;)V',
  );

  static final _sw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void sw(java.lang.String string)`
  void sw(_$jni.JString string, ){
    
    _sw(reference.pointer, _id_sw as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_se = _class.instanceMethodId(
    r'se',
    r'(Ljava/lang/String;)V',
  );

  static final _se = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void se(java.lang.String string)`
  void se(_$jni.JString string, ){
    
    _se(reference.pointer, _id_se as _$jni.JMethodIDPtr, string.reference.pointer).check();
  }

  static final _id_st = _class.instanceMethodId(
    r'st',
    r'(Ljava/lang/Throwable;)V',
  );

  static final _st = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void st(java.lang.Throwable throwable)`
  void st(_$jni.JObject throwable, ){
    
    _st(reference.pointer, _id_st as _$jni.JMethodIDPtr, throwable.reference.pointer).check();
  }

}
final class $CameraLogger$Type extends _$jni.JObjType<CameraLogger> {
  

  @_$jni.internal
  const $CameraLogger$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/log/CameraLogger;';

  @_$jni.internal
  @_$core.override
  CameraLogger fromReference(_$jni.JReference reference) => CameraLogger.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraLogger$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraLogger$Type) &&
        other is $CameraLogger$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.util.CameraConstants$ErrorCode`
class CameraConstants_ErrorCode extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraConstants_ErrorCode> $type;

  

  @_$jni.internal
  CameraConstants_ErrorCode.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/util/CameraConstants$ErrorCode');

      /// The type which includes information such as the signature of this class.
static const type = $CameraConstants_ErrorCode$Type();
  /// from: `static public final int OK`
  static const OK = 0;
  /// from: `static public final int ERROR`
  static const ERROR = -9999;
  /// from: `static public final int CAMERA_OPEN_FAIL`
  static const CAMERA_OPEN_FAIL = -14000;
  /// from: `static public final int CAMERA_ACTIVE_FAIL`
  static const CAMERA_ACTIVE_FAIL = -14001;
  /// from: `static public final int CAMERA_GET_LATEST_FIRMWARE_VERSION_FAIL`
  static const CAMERA_GET_LATEST_FIRMWARE_VERSION_FAIL = -14002;
  /// from: `static public final int CAMERA_UPLOAD_FIRMWARE_OTHER_HTTP_ERROR`
  static const CAMERA_UPLOAD_FIRMWARE_OTHER_HTTP_ERROR = -14004;
  /// from: `static public final int CAMERA_UPLOAD_FIRMWARE_IOEXCEPTION`
  static const CAMERA_UPLOAD_FIRMWARE_IOEXCEPTION = -14005;
  /// from: `static public final int CAMERA_UPGRADE_MD5_NOT_MATCH`
  static const CAMERA_UPGRADE_MD5_NOT_MATCH = -14006;
  /// from: `static public final int CAMERA_ABSENT_DURING_OPERATION`
  static const CAMERA_ABSENT_DURING_OPERATION = -14009;
  /// from: `static public final int CAMERA_WORK_DOWNLOAD_FAIL_FOR_NULL`
  static const CAMERA_WORK_DOWNLOAD_FAIL_FOR_NULL = -14010;
  /// from: `static public final int CAMERA_WORK_EXTRA_META_DATA_DECODE_FAIL`
  static const CAMERA_WORK_EXTRA_META_DATA_DECODE_FAIL = -14011;
  /// from: `static public final int SAMPLE_DOWNLOAD_FAIL_FOR_NULL`
  static const SAMPLE_DOWNLOAD_FAIL_FOR_NULL = -14012;
  /// from: `static public final int CAMERA_BLE_CONNECT_TIMEOUT`
  static const CAMERA_BLE_CONNECT_TIMEOUT = -14013;
  /// from: `static public final int CAMERA_DISCONNECT_DURING_OPERATION`
  static const CAMERA_DISCONNECT_DURING_OPERATION = -14014;
  /// from: `static public final int CAMERA_BLE_SCAN_FAIL`
  static const CAMERA_BLE_SCAN_FAIL = -14015;
  /// from: `static public final int CAMERA_BLE_CONNECT_FAIL`
  static const CAMERA_BLE_CONNECT_FAIL = -14016;
  /// from: `static public final int CAMERA_BLE_SERVICE_DISCOVER_FAIL`
  static const CAMERA_BLE_SERVICE_DISCOVER_FAIL = -14017;
  /// from: `static public final int CAMERA_BLE_GET_OPTION_FAIL`
  static const CAMERA_BLE_GET_OPTION_FAIL = -14018;
  /// from: `static public final int CAMERA_USB_FAIL`
  static const CAMERA_USB_FAIL = -14019;
  /// from: `static public final int CAMERA_WIFI_P2P_CONNECT_TIME_OUT`
  static const CAMERA_WIFI_P2P_CONNECT_TIME_OUT = -14020;
  /// from: `static public final int CAMERA_WIFI_P2P_CONNECT_ERROR`
  static const CAMERA_WIFI_P2P_CONNECT_ERROR = -14021;
  /// from: `static public final int CAMERA_CONNECT_WIFI_AUTHORIZATION_FAIL`
  static const CAMERA_CONNECT_WIFI_AUTHORIZATION_FAIL = -14022;
  /// from: `static public final int CAMERA_WIFI_AP_CONNECT_FAIL`
  static const CAMERA_WIFI_AP_CONNECT_FAIL = -14031;
  /// from: `static public final int CAMERA_CONNECT_WIFI_DISABLE`
  static const CAMERA_CONNECT_WIFI_DISABLE = -14032;
  /// from: `static public final int CAMERA_WAIT_FOR_CHECK`
  static const CAMERA_WAIT_FOR_CHECK = -14033;
  /// from: `static public final int CAMERA_BLE_CONNECT_FAIL_FOR_AUTHORIZATION_BUSY`
  static const CAMERA_BLE_CONNECT_FAIL_FOR_AUTHORIZATION_BUSY = -14034;
  /// from: `static public final int CAMERA_BLE_CONNECT_FAIL_FOR_AUTHORIZATION_UNAUTHORIZED`
  static const CAMERA_BLE_CONNECT_FAIL_FOR_AUTHORIZATION_UNAUTHORIZED = -14035;
  /// from: `static public final int CAMERA_CONNECT_BIND_WIFI_NETWORK_FAIL`
  static const CAMERA_CONNECT_BIND_WIFI_NETWORK_FAIL = -14040;
  /// from: `static public final int CAMERA_CONNECT_CREATE_SOCKET_FAIL`
  static const CAMERA_CONNECT_CREATE_SOCKET_FAIL = -14041;
  /// from: `static public final int CAMERA_CONNECT_SYNC_CAMERA_INFO_FAIL`
  static const CAMERA_CONNECT_SYNC_CAMERA_INFO_FAIL = -14042;
  /// from: `static public final int CAMERA_CONNECT_CAMERA_OPEN_ERROR`
  static const CAMERA_CONNECT_CAMERA_OPEN_ERROR = -14043;
  /// from: `static public final int CAMERA_USB_STATE_ERROR`
  static const CAMERA_USB_STATE_ERROR = -14044;
  /// from: `static public final int CAMERA_CONNECT_FAIL_FOR_CAMERA_MODE_IS_IOS`
  static const CAMERA_CONNECT_FAIL_FOR_CAMERA_MODE_IS_IOS = -14045;
  /// from: `static public final int CAMERA_UPLOAD_FIRMWARE_OTHER_HTTP_CANCEL`
  static const CAMERA_UPLOAD_FIRMWARE_OTHER_HTTP_CANCEL = -14046;
  /// from: `static public final int CAMERA_SCAN_BLE_REMOTE_CONTROL_TIME_OUT`
  static const CAMERA_SCAN_BLE_REMOTE_CONTROL_TIME_OUT = -14048;
  /// from: `static public final int CAMERA_CONNECT_BLE_REMOTE_CONTROL_TIME_OUT`
  static const CAMERA_CONNECT_BLE_REMOTE_CONTROL_TIME_OUT = -14049;
  /// from: `static public final int CAMERA_ALREADY_BINDING_WIFI_NETWORK`
  static const CAMERA_ALREADY_BINDING_WIFI_NETWORK = -14050;
  /// from: `static public final int CAMERA_BIND_NETWORK_FAIL`
  static const CAMERA_BIND_NETWORK_FAIL = -14051;
  /// from: `static public final int CAMERA_FIRMWARE_UPGRADE_FAIL_AFTER_REBOOT`
  static const CAMERA_FIRMWARE_UPGRADE_FAIL_AFTER_REBOOT = -14052;
  /// from: `static public final int CAMERA_BLE_CONNECT_FAIL_BY_ALREADY_CONNECT_CAMERA`
  static const CAMERA_BLE_CONNECT_FAIL_BY_ALREADY_CONNECT_CAMERA = -14053;
  /// from: `static public final int CAMERA_BLE_ALREADY_AUTHORIZED_OTHER_PHONE`
  static const CAMERA_BLE_ALREADY_AUTHORIZED_OTHER_PHONE = -14057;
  /// from: `static public final int CAMERA_BLE_GET_AUTHORIZATION_ID_FAIL`
  static const CAMERA_BLE_GET_AUTHORIZATION_ID_FAIL = -14058;
  /// from: `static public final int CAMERA_BLE_SET_AUTHORIZATION_ID_FAIL`
  static const CAMERA_BLE_SET_AUTHORIZATION_ID_FAIL = -14059;
  /// from: `static public final int CAMERA_BLE_DISCONNECT_WHEN_CONNECTING`
  static const CAMERA_BLE_DISCONNECT_WHEN_CONNECTING = -14060;
  /// from: `static public final int CAMERA_OPEN_TIME_OUT`
  static const CAMERA_OPEN_TIME_OUT = -14061;
  /// from: `static public final int CAMERA_CONNECT_BLE_FAILED_NO_SYNC_PACK`
  static const CAMERA_CONNECT_BLE_FAILED_NO_SYNC_PACK = -14062;
  /// from: `static public final int CAMERA_CONNECT_BLE_FAILED_GATT_133`
  static const CAMERA_CONNECT_BLE_FAILED_GATT_133 = -14063;
  /// from: `static public final int CAMERA_CONNECT_BLE_FAILED_NOTIFY`
  static const CAMERA_CONNECT_BLE_FAILED_NOTIFY = -14064;
  /// from: `static public final int CAMERA_CONNECT_BLE_FAILED_SHAKE_HAND`
  static const CAMERA_CONNECT_BLE_FAILED_SHAKE_HAND = -14065;
  /// from: `static public final int CAMERA_CONNECT_BLE_BOND_REJECT`
  static const CAMERA_CONNECT_BLE_BOND_REJECT = -14066;
  /// from: `static public final int CAMERA_SYNC_OPTIONS_FAILED_BY_BLE_WRITE_FAILED`
  static const CAMERA_SYNC_OPTIONS_FAILED_BY_BLE_WRITE_FAILED = -14067;
  /// from: `static public final int CAMERA_INNER_STOP_LOW_BATTERY`
  static const CAMERA_INNER_STOP_LOW_BATTERY = -14161;
  /// from: `static public final int CAMERA_INNER_STOP_RECORD`
  static const CAMERA_INNER_STOP_RECORD = -14162;
  /// from: `static public final int CAMERA_INNER_STOP_STORAGE_FULL`
  static const CAMERA_INNER_STOP_STORAGE_FULL = -14163;
  /// from: `static public final int CAMERA_INNER_STOP_OTHER_SITUATION`
  static const CAMERA_INNER_STOP_OTHER_SITUATION = -14164;
  /// from: `static public final int CAMERA_INNER_STOP_OVER_FILE_NUMBER_LIMIT`
  static const CAMERA_INNER_STOP_OVER_FILE_NUMBER_LIMIT = -14165;
  /// from: `static public final int CAMERA_INNER_STOP_LOW_CARD_SPEED`
  static const CAMERA_INNER_STOP_LOW_CARD_SPEED = -14166;
  /// from: `static public final int CAMERA_INNER_STOP_MUXER_STREAM_ERROR`
  static const CAMERA_INNER_STOP_MUXER_STREAM_ERROR = -14167;
  /// from: `static public final int CAMERA_INNER_STOP_DROP_FRAMES`
  static const CAMERA_INNER_STOP_DROP_FRAMES = -14168;
  /// from: `static public final int CAMERA_SYNC_OPTIONS_TIME_OUT`
  static const CAMERA_SYNC_OPTIONS_TIME_OUT = -14169;
  /// from: `static public final int CAMERA_TYPE_ERROR`
  static const CAMERA_TYPE_ERROR = -14170;
  /// from: `static public final int CAMERA_WAITING_WIFI_START_TIMEOUT`
  static const CAMERA_WAITING_WIFI_START_TIMEOUT = -14171;
  /// from: `static public final int CAMERA_INFO_RESPONSE_ERROR`
  static const CAMERA_INFO_RESPONSE_ERROR = -14172;
  /// from: `static public final int CAMERA_PARSE_PROTO_RESPONSE_FAILED`
  static const CAMERA_PARSE_PROTO_RESPONSE_FAILED = -14173;
  /// from: `static public final int CAMERA_CONNECT_FAILED_DUE_TO_VPN`
  static const CAMERA_CONNECT_FAILED_DUE_TO_VPN = -14174;
  /// from: `static public final int CAMERA_CONNECT_FAILED_DUE_TO_FD_SET`
  static const CAMERA_CONNECT_FAILED_DUE_TO_FD_SET = -14175;
  /// from: `static public final int CAMERA_CONNECT_FAILED_DUE_TO_OCCUPIED`
  static const CAMERA_CONNECT_FAILED_DUE_TO_OCCUPIED = -14176;
  /// from: `static public final int CAMERA_BLE_SCAN_NOT_FOUND`
  static const CAMERA_BLE_SCAN_NOT_FOUND = -14177;
  /// from: `static public final int CAMERA_RTOS_STATUS_ERROR`
  static const CAMERA_RTOS_STATUS_ERROR = -14178;
  /// from: `static public final int CAMERA_SETTING_WIFI_STATE_OFF`
  static const CAMERA_SETTING_WIFI_STATE_OFF = -14179;
  /// from: `static public final int CAMERA_INNER_STOP_STORAGEFRGMT`
  static const CAMERA_INNER_STOP_STORAGEFRGMT = -14180;
  /// from: `static public final int CAMERA_INNER_STOP_HIGH_TEMP`
  static const CAMERA_INNER_STOP_HIGH_TEMP = -14181;
  /// from: `static public final int CAMERA_INNER_STOP_LOW_POWER_START`
  static const CAMERA_INNER_STOP_LOW_POWER_START = -14182;
  /// from: `static public final int CAMERA_INNER_STOP_STORAGE_RUNOUT_START`
  static const CAMERA_INNER_STOP_STORAGE_RUNOUT_START = -14183;
  /// from: `static public final int CAMERA_INNER_STOP_HIGH_TEMP_START`
  static const CAMERA_INNER_STOP_HIGH_TEMP_START = -14184;
  /// from: `static public final int CAMERA_GET_MEDIA_TYPE_NOT_SUPPORT`
  static const CAMERA_GET_MEDIA_TYPE_NOT_SUPPORT = -14185;
  /// from: `static public final int CAMERA_CONNECT_LOW_BATTERY`
  static const CAMERA_CONNECT_LOW_BATTERY = -14186;
  /// from: `static public final int CAMERA_SOCKET_RECONNECT_SYNC_TIME_OUT`
  static const CAMERA_SOCKET_RECONNECT_SYNC_TIME_OUT = -14187;
  static final _id_FMG_BLE_SYSTEM_ERRORS =
      _class.staticFieldId(
        r'FMG_BLE_SYSTEM_ERRORS',
        r'[I',
      );
  /// from: `static public final int[] FMG_BLE_SYSTEM_ERRORS`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JArray<_$jni.jint> get FMG_BLE_SYSTEM_ERRORS => _id_FMG_BLE_SYSTEM_ERRORS.get(_class, const _$jni.JArrayType(_$jni.jintType()));

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraConstants_ErrorCode() {
    
    return CameraConstants_ErrorCode.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }



}
final class $CameraConstants_ErrorCode$Type extends _$jni.JObjType<CameraConstants_ErrorCode> {
  

  @_$jni.internal
  const $CameraConstants_ErrorCode$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/util/CameraConstants$ErrorCode;';

  @_$jni.internal
  @_$core.override
  CameraConstants_ErrorCode fromReference(_$jni.JReference reference) => CameraConstants_ErrorCode.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraConstants_ErrorCode$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraConstants_ErrorCode$Type) &&
        other is $CameraConstants_ErrorCode$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.util.CameraConstants`
class CameraConstants extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraConstants> $type;

  

  @_$jni.internal
  CameraConstants.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/util/CameraConstants');

      /// The type which includes information such as the signature of this class.
static const type = $CameraConstants$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraConstants() {
    
    return CameraConstants.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

}
final class $CameraConstants$Type extends _$jni.JObjType<CameraConstants> {
  

  @_$jni.internal
  const $CameraConstants$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/util/CameraConstants;';

  @_$jni.internal
  @_$core.override
  CameraConstants fromReference(_$jni.JReference reference) => CameraConstants.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraConstants$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraConstants$Type) &&
        other is $CameraConstants$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.util.CameraMediaUtils`
class CameraMediaUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CameraMediaUtils> $type;

  

  @_$jni.internal
  CameraMediaUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/util/CameraMediaUtils');

      /// The type which includes information such as the signature of this class.
static const type = $CameraMediaUtils$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CameraMediaUtils() {
    
    return CameraMediaUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_getFileInfoMap = _class.staticMethodId(
    r'getFileInfoMap',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;)Ljava/util/HashMap;',
  );

  static final _getFileInfoMap = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public java.util.HashMap getFileInfoMap(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JObject getFileInfoMap(BaseCamera baseCamera, ){
    
    return _getFileInfoMap(_class.reference.pointer, _id_getFileInfoMap as _$jni.JMethodIDPtr, baseCamera.reference.pointer).object(const _$jni.JObjectType());
  }

  static final _id_getAllFileList = _class.staticMethodId(
    r'getAllFileList',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;Z)Ljava/util/List;',
  );

  static final _getAllFileList = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `static public java.util.List getAllFileList(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JList<_$jni.JString> getAllFileList(BaseCamera baseCamera, bool z, ){
    
    return _getAllFileList(_class.reference.pointer, _id_getAllFileList as _$jni.JMethodIDPtr, baseCamera.reference.pointer, z ? 1 : 0).object(const _$jni.JListType(_$jni.JStringType()));
  }

  static final _id_getFileListWithType = _class.staticMethodId(
    r'getFileListWithType',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;IZ)Ljava/util/List;',
  );

  static final _getFileListWithType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `static public java.util.List getFileListWithType(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JList<_$jni.JString> getFileListWithType(BaseCamera baseCamera, int i, bool z, ){
    
    return _getFileListWithType(_class.reference.pointer, _id_getFileListWithType as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i, z ? 1 : 0).object(const _$jni.JListType(_$jni.JStringType()));
  }

  static final _id_OooO00o = _class.staticMethodId(
    r'OooO00o',
    r'(Lcom/arashivision/insta360/basecamera/camera/BaseCamera;IIIZ)Ljava/util/List;',
  );

  static final _OooO00o = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, int, int)>();
  /// from: `static public java.util.List OooO00o(com.arashivision.insta360.basecamera.camera.BaseCamera baseCamera, int i, int i1, int i2, boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JList<_$jni.JString> OooO00o(BaseCamera baseCamera, int i, int i1, int i2, bool z, ){
    
    return _OooO00o(_class.reference.pointer, _id_OooO00o as _$jni.JMethodIDPtr, baseCamera.reference.pointer, i, i1, i2, z ? 1 : 0).object(const _$jni.JListType(_$jni.JStringType()));
  }

  static final _id_OooO00o$1 = _class.staticMethodId(
    r'OooO00o',
    r'(Ljava/util/ArrayList;Ljava/util/concurrent/CountDownLatch;ILjava/util/List;)V',
  );

  static final _OooO00o$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(java.util.ArrayList arrayList, java.util.concurrent.CountDownLatch countDownLatch, int i, java.util.List list)`
  static void OooO00o$1(_$jni.JObject arrayList, _$jni.JObject countDownLatch, int i, _$jni.JList<_$jni.JObject> list, ){
    
    _OooO00o$1(_class.reference.pointer, _id_OooO00o$1 as _$jni.JMethodIDPtr, arrayList.reference.pointer, countDownLatch.reference.pointer, i, list.reference.pointer).check();
  }

  static final _id_OooO00o$2 = _class.staticMethodId(
    r'OooO00o',
    r'(Ljava/util/HashMap;Ljava/util/concurrent/CountDownLatch;ILjava/util/List;)V',
  );

  static final _OooO00o$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `synthetic static public void OooO00o(java.util.HashMap hashMap, java.util.concurrent.CountDownLatch countDownLatch, int i, java.util.List list)`
  static void OooO00o$2(_$jni.JObject hashMap, _$jni.JObject countDownLatch, int i, _$jni.JList<_$jni.JObject> list, ){
    
    _OooO00o$2(_class.reference.pointer, _id_OooO00o$2 as _$jni.JMethodIDPtr, hashMap.reference.pointer, countDownLatch.reference.pointer, i, list.reference.pointer).check();
  }

}
final class $CameraMediaUtils$Type extends _$jni.JObjType<CameraMediaUtils> {
  

  @_$jni.internal
  const $CameraMediaUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/util/CameraMediaUtils;';

  @_$jni.internal
  @_$core.override
  CameraMediaUtils fromReference(_$jni.JReference reference) => CameraMediaUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CameraMediaUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CameraMediaUtils$Type) &&
        other is $CameraMediaUtils$Type;
  }
}

/// from: `com.arashivision.insta360.basecamera.util.DeviceUtils`
class DeviceUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<DeviceUtils> $type;

  

  @_$jni.internal
  DeviceUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/insta360/basecamera/util/DeviceUtils');

      /// The type which includes information such as the signature of this class.
static const type = $DeviceUtils$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory DeviceUtils() {
    
    return DeviceUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_getCustomizedDeviceID = _class.staticMethodId(
    r'getCustomizedDeviceID',
    r'()Ljava/lang/String;',
  );

  static final _getCustomizedDeviceID = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public java.lang.String getCustomizedDeviceID()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JString getCustomizedDeviceID(){
    
    return _getCustomizedDeviceID(_class.reference.pointer, _id_getCustomizedDeviceID as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $DeviceUtils$Type extends _$jni.JObjType<DeviceUtils> {
  

  @_$jni.internal
  const $DeviceUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/insta360/basecamera/util/DeviceUtils;';

  @_$jni.internal
  @_$core.override
  DeviceUtils fromReference(_$jni.JReference reference) => DeviceUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($DeviceUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DeviceUtils$Type) &&
        other is $DeviceUtils$Type;
  }
}

