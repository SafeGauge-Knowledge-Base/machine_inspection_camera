
// Autogenerated by jnigen. DO NOT EDIT!


// ignore_for_file: annotate_overrides
// ignore_for_file: argument_type_not_assignable
// ignore_for_file: camel_case_extensions
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: doc_directive_unknown
// ignore_for_file: file_names
// ignore_for_file: inference_failure_on_untyped_parameter
// ignore_for_file: invalid_internal_annotation
// ignore_for_file: invalid_use_of_internal_member
// ignore_for_file: library_prefixes
// ignore_for_file: lines_longer_than_80_chars
// ignore_for_file: no_leading_underscores_for_library_prefixes
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: only_throw_errors
// ignore_for_file: overridden_fields
// ignore_for_file: prefer_double_quotes
// ignore_for_file: unintended_html_in_doc_comment
// ignore_for_file: unnecessary_cast
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name
// ignore_for_file: use_super_parameters


import 'dart:core' show Object, String, bool, double, int;
import 'dart:core' as _$core;

import 'package:jni/_internal.dart' as _$jni;
import 'package:jni/jni.dart' as _$jni;


/// from: `com.arashivision.sdkmedia.InstaMediaSDK`
class InstaMediaSDK extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<InstaMediaSDK> $type;

  

  @_$jni.internal
  InstaMediaSDK.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/InstaMediaSDK');

      /// The type which includes information such as the signature of this class.
static const type = $InstaMediaSDK$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaMediaSDK() {
    
    return InstaMediaSDK.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_init = _class.staticMethodId(
    r'init',
    r'(Landroid/app/Application;)V',
  );

  static final _init = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public void init(android.app.Application application)`
  static void init(_$jni.JObject application, ){
    
    _init(_class.reference.pointer, _id_init as _$jni.JMethodIDPtr, application.reference.pointer).check();
  }

  static final _id_oO8 = _class.staticMethodId(
    r'oO8',
    r'()Ljava/lang/String;',
  );

  static final _oO8 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public java.lang.String oO8()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JString oO8(){
    
    return _oO8(_class.reference.pointer, _id_oO8 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_oo0oo0 = _class.staticMethodId(
    r'oo0oo0',
    r'()Ljava/lang/String;',
  );

  static final _oo0oo0 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public java.lang.String oo0oo0()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JString oo0oo0(){
    
    return _oo0oo0(_class.reference.pointer, _id_oo0oo0 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_O8ooO8o88 = _class.staticMethodId(
    r'O8ooO8o88',
    r'()Ljava/lang/String;',
  );

  static final _O8ooO8o88 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public java.lang.String O8ooO8o88()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JString O8ooO8o88(){
    
    return _O8ooO8o88(_class.reference.pointer, _id_O8ooO8o88 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_oOoo = _class.staticMethodId(
    r'oOoo',
    r'()Ljava/lang/String;',
  );

  static final _oOoo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public java.lang.String oOoo()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JString oOoo(){
    
    return _oOoo(_class.reference.pointer, _id_oOoo as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $InstaMediaSDK$Type extends _$jni.JObjType<InstaMediaSDK> {
  

  @_$jni.internal
  const $InstaMediaSDK$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/InstaMediaSDK;';

  @_$jni.internal
  @_$core.override
  InstaMediaSDK fromReference(_$jni.JReference reference) => InstaMediaSDK.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($InstaMediaSDK$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($InstaMediaSDK$Type) &&
        other is $InstaMediaSDK$Type;
  }
}

/// from: `com.arashivision.sdkmedia.export.ExportImageParamsBuilder`
class ExportImageParamsBuilder extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ExportImageParamsBuilder> $type;

  

  @_$jni.internal
  ExportImageParamsBuilder.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/export/ExportImageParamsBuilder');

      /// The type which includes information such as the signature of this class.
static const type = $ExportImageParamsBuilder$Type();
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
      );
  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
ExportUtils_ExportMode get O8ooO8o88 => _id_O8ooO8o88.get(this, const $ExportUtils_ExportMode$Type());

  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(ExportUtils_ExportMode value) => _id_O8ooO8o88.set(this, const $ExportUtils_ExportMode$Type(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oOoo => _id_oOoo.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JString value) => _id_oOoo.set(this, const _$jni.JStringType(), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oO8 => _id_oO8.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
set oO8(_$jni.JString value) => _id_oO8.set(this, const _$jni.JStringType(), value);

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
set oo0oo0(_$jni.JString value) => _id_oo0oo0.set(this, const _$jni.JStringType(), value);

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get ooO => _id_ooO.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
set ooO(_$jni.JString value) => _id_ooO.set(this, const _$jni.JStringType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String Oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get Oo0 => _id_Oo0.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String Oo0`
  /// The returned object must be released after use, by calling the [release] method.
set Oo0(_$jni.JString value) => _id_Oo0.set(this, const _$jni.JStringType(), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oO => _id_oO.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oO`
  /// The returned object must be released after use, by calling the [release] method.
set oO(_$jni.JString value) => _id_oO.set(this, const _$jni.JStringType(), value);

  static final _id_ooo0Oo0O =
      _class.instanceFieldId(
        r'ooo0Oo0O',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String ooo0Oo0O`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get ooo0Oo0O => _id_ooo0Oo0O.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String ooo0Oo0O`
  /// The returned object must be released after use, by calling the [release] method.
set ooo0Oo0O(_$jni.JString value) => _id_ooo0Oo0O.set(this, const _$jni.JStringType(), value);

  static final _id_oo =
      _class.instanceFieldId(
        r'oo',
        r'Z',
      );
  /// from: `public boolean oo`
bool get oo => _id_oo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo`
set oo(bool value) => _id_oo.set(this, const _$jni.jbooleanType(), value);

  static final _id_o00oOOo =
      _class.instanceFieldId(
        r'o00oOOo',
        r'Z',
      );
  /// from: `public boolean o00oOOo`
bool get o00oOOo => _id_o00oOOo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean o00oOOo`
set o00oOOo(bool value) => _id_o00oOOo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OOo8 =
      _class.instanceFieldId(
        r'OOo8',
        r'Z',
      );
  /// from: `public boolean OOo8`
bool get OOo8 => _id_OOo8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OOo8`
set OOo8(bool value) => _id_OOo8.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo0oOOoO8 =
      _class.instanceFieldId(
        r'oo0oOOoO8',
        r'Z',
      );
  /// from: `public boolean oo0oOOoO8`
bool get oo0oOOoO8 => _id_oo0oOOoO8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo0oOOoO8`
set oo0oOOoO8(bool value) => _id_oo0oOOoO8.set(this, const _$jni.jbooleanType(), value);

  static final _id_Oo80Oo0O =
      _class.instanceFieldId(
        r'Oo80Oo0O',
        r'I',
      );
  /// from: `public int Oo80Oo0O`
int get Oo80Oo0O => _id_Oo80Oo0O.get(this, const _$jni.jintType());

  /// from: `public int Oo80Oo0O`
set Oo80Oo0O(int value) => _id_Oo80Oo0O.set(this, const _$jni.jintType(), value);

  static final _id_Oo =
      _class.instanceFieldId(
        r'Oo',
        r'I',
      );
  /// from: `public int Oo`
int get Oo => _id_Oo.get(this, const _$jni.jintType());

  /// from: `public int Oo`
set Oo(int value) => _id_Oo.set(this, const _$jni.jintType(), value);

  static final _id_o0o8o =
      _class.instanceFieldId(
        r'o0o8o',
        r'F',
      );
  /// from: `public float o0o8o`
double get o0o8o => _id_o0o8o.get(this, const _$jni.jfloatType());

  /// from: `public float o0o8o`
set o0o8o(double value) => _id_o0o8o.set(this, const _$jni.jfloatType(), value);

  static final _id_Ooo8ooOoo =
      _class.instanceFieldId(
        r'Ooo8ooOoo',
        r'F',
      );
  /// from: `public float Ooo8ooOoo`
double get Ooo8ooOoo => _id_Ooo8ooOoo.get(this, const _$jni.jfloatType());

  /// from: `public float Ooo8ooOoo`
set Ooo8ooOoo(double value) => _id_Ooo8ooOoo.set(this, const _$jni.jfloatType(), value);

  static final _id_Ooooo =
      _class.instanceFieldId(
        r'Ooooo',
        r'F',
      );
  /// from: `public float Ooooo`
double get Ooooo => _id_Ooooo.get(this, const _$jni.jfloatType());

  /// from: `public float Ooooo`
set Ooooo(double value) => _id_Ooooo.set(this, const _$jni.jfloatType(), value);

  static final _id_o8o0 =
      _class.instanceFieldId(
        r'o8o0',
        r'F',
      );
  /// from: `public float o8o0`
double get o8o0 => _id_o8o0.get(this, const _$jni.jfloatType());

  /// from: `public float o8o0`
set o8o0(double value) => _id_o8o0.set(this, const _$jni.jfloatType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory ExportImageParamsBuilder() {
    
    return ExportImageParamsBuilder.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_setExportMode = _class.instanceMethodId(
    r'setExportMode',
    r'(Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setExportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setExportMode(com.arashivision.sdkmedia.export.ExportUtils$ExportMode exportMode)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setExportMode(ExportUtils_ExportMode exportMode, ){
    
    return _setExportMode(reference.pointer, _id_setExportMode as _$jni.JMethodIDPtr, exportMode.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getExportMode = _class.instanceMethodId(
    r'getExportMode',
    r'()Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
  );

  static final _getExportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode getExportMode()`
  /// The returned object must be released after use, by calling the [release] method.
  ExportUtils_ExportMode getExportMode(){
    
    return _getExportMode(reference.pointer, _id_getExportMode as _$jni.JMethodIDPtr).object(const $ExportUtils_ExportMode$Type());
  }

  static final _id_setCameraType = _class.instanceMethodId(
    r'setCameraType',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setCameraType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setCameraType(_$jni.JString string, ){
    
    return _setCameraType(reference.pointer, _id_setCameraType as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setTargetPath = _class.instanceMethodId(
    r'setTargetPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setTargetPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setTargetPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setTargetPath(_$jni.JString string, ){
    
    return _setTargetPath(reference.pointer, _id_setTargetPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getTargetPath = _class.instanceMethodId(
    r'getTargetPath',
    r'()Ljava/lang/String;',
  );

  static final _getTargetPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getTargetPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getTargetPath(){
    
    return _getTargetPath(reference.pointer, _id_getTargetPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'setCacheWorkThumbnailRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setCacheWorkThumbnailRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setCacheWorkThumbnailRootPath(_$jni.JString string, ){
    
    return _setCacheWorkThumbnailRootPath(reference.pointer, _id_setCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'getCacheWorkThumbnailRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheWorkThumbnailRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheWorkThumbnailRootPath(){
    
    return _getCacheWorkThumbnailRootPath(reference.pointer, _id_getCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setStabilizerCacheRootPath = _class.instanceMethodId(
    r'setStabilizerCacheRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setStabilizerCacheRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setStabilizerCacheRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setStabilizerCacheRootPath(_$jni.JString string, ){
    
    return _setStabilizerCacheRootPath(reference.pointer, _id_setStabilizerCacheRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getStabilizerCacheRootPath = _class.instanceMethodId(
    r'getStabilizerCacheRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getStabilizerCacheRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getStabilizerCacheRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getStabilizerCacheRootPath(){
    
    return _getStabilizerCacheRootPath(reference.pointer, _id_getStabilizerCacheRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheCutSceneRootPath = _class.instanceMethodId(
    r'setCacheCutSceneRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setCacheCutSceneRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setCacheCutSceneRootPath(_$jni.JString string, ){
    
    return _setCacheCutSceneRootPath(reference.pointer, _id_setCacheCutSceneRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getCacheCutSceneRootPath = _class.instanceMethodId(
    r'getCacheCutSceneRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheCutSceneRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheCutSceneRootPath(){
    
    return _getCacheCutSceneRootPath(reference.pointer, _id_getCacheCutSceneRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheTemplateBlenderRootPath = _class.instanceMethodId(
    r'setCacheTemplateBlenderRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setCacheTemplateBlenderRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setCacheTemplateBlenderRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setCacheTemplateBlenderRootPath(_$jni.JString string, ){
    
    return _setCacheTemplateBlenderRootPath(reference.pointer, _id_setCacheTemplateBlenderRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getCacheTemplateBlenderRootPath = _class.instanceMethodId(
    r'getCacheTemplateBlenderRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheTemplateBlenderRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheTemplateBlenderRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheTemplateBlenderRootPath(){
    
    return _getCacheTemplateBlenderRootPath(reference.pointer, _id_getCacheTemplateBlenderRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setUrlForExport = _class.instanceMethodId(
    r'setUrlForExport',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setUrlForExport = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setUrlForExport(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setUrlForExport(_$jni.JString string, ){
    
    return _setUrlForExport(reference.pointer, _id_setUrlForExport as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getUrlForExport = _class.instanceMethodId(
    r'getUrlForExport',
    r'()Ljava/lang/String;',
  );

  static final _getUrlForExport = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getUrlForExport()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getUrlForExport(){
    
    return _getUrlForExport(reference.pointer, _id_getUrlForExport as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setStabEnabled = _class.instanceMethodId(
    r'setStabEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setStabEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setStabEnabled(bool z, ){
    
    return _setStabEnabled(reference.pointer, _id_setStabEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setDynamicStitch = _class.instanceMethodId(
    r'setDynamicStitch',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setDynamicStitch(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setDynamicStitch(bool z, ){
    
    return _setDynamicStitch(reference.pointer, _id_setDynamicStitch as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_isDynamicStitch = _class.instanceMethodId(
    r'isDynamicStitch',
    r'()Z',
  );

  static final _isDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isDynamicStitch()`
  bool isDynamicStitch(){
    
    return _isDynamicStitch(reference.pointer, _id_isDynamicStitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setImageFusion = _class.instanceMethodId(
    r'setImageFusion',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setImageFusion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setImageFusion(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setImageFusion(bool z, ){
    
    return _setImageFusion(reference.pointer, _id_setImageFusion as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_isImageFusion = _class.instanceMethodId(
    r'isImageFusion',
    r'()Z',
  );

  static final _isImageFusion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isImageFusion()`
  bool isImageFusion(){
    
    return _isImageFusion(reference.pointer, _id_isImageFusion as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setUseSoftwareDecoder = _class.instanceMethodId(
    r'setUseSoftwareDecoder',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setUseSoftwareDecoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setUseSoftwareDecoder(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setUseSoftwareDecoder(bool z, ){
    
    return _setUseSoftwareDecoder(reference.pointer, _id_setUseSoftwareDecoder as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_isUseSoftwareDecoder = _class.instanceMethodId(
    r'isUseSoftwareDecoder',
    r'()Z',
  );

  static final _isUseSoftwareDecoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isUseSoftwareDecoder()`
  bool isUseSoftwareDecoder(){
    
    return _isUseSoftwareDecoder(reference.pointer, _id_isUseSoftwareDecoder as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setWidth = _class.instanceMethodId(
    r'setWidth',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setWidth(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setWidth(int i, ){
    
    return _setWidth(reference.pointer, _id_setWidth as _$jni.JMethodIDPtr, i).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getWidth = _class.instanceMethodId(
    r'getWidth',
    r'()I',
  );

  static final _getWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getWidth()`
  int getWidth(){
    
    return _getWidth(reference.pointer, _id_getWidth as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setHeight = _class.instanceMethodId(
    r'setHeight',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setHeight(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setHeight(int i, ){
    
    return _setHeight(reference.pointer, _id_setHeight as _$jni.JMethodIDPtr, i).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getHeight = _class.instanceMethodId(
    r'getHeight',
    r'()I',
  );

  static final _getHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getHeight()`
  int getHeight(){
    
    return _getHeight(reference.pointer, _id_getHeight as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setFov = _class.instanceMethodId(
    r'setFov',
    r'(F)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setFov = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setFov(float f)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setFov(double f, ){
    
    return _setFov(reference.pointer, _id_setFov as _$jni.JMethodIDPtr, f).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getFov = _class.instanceMethodId(
    r'getFov',
    r'()F',
  );

  static final _getFov = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFov()`
  double getFov(){
    
    return _getFov(reference.pointer, _id_getFov as _$jni.JMethodIDPtr).float;
  }

  static final _id_setDistance = _class.instanceMethodId(
    r'setDistance',
    r'(F)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setDistance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setDistance(float f)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setDistance(double f, ){
    
    return _setDistance(reference.pointer, _id_setDistance as _$jni.JMethodIDPtr, f).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getDistance = _class.instanceMethodId(
    r'getDistance',
    r'()F',
  );

  static final _getDistance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getDistance()`
  double getDistance(){
    
    return _getDistance(reference.pointer, _id_getDistance as _$jni.JMethodIDPtr).float;
  }

  static final _id_setYaw = _class.instanceMethodId(
    r'setYaw',
    r'(F)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setYaw(float f)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setYaw(double f, ){
    
    return _setYaw(reference.pointer, _id_setYaw as _$jni.JMethodIDPtr, f).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getYaw = _class.instanceMethodId(
    r'getYaw',
    r'()F',
  );

  static final _getYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getYaw()`
  double getYaw(){
    
    return _getYaw(reference.pointer, _id_getYaw as _$jni.JMethodIDPtr).float;
  }

  static final _id_setPitch = _class.instanceMethodId(
    r'setPitch',
    r'(F)Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;',
  );

  static final _setPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportImageParamsBuilder setPitch(float f)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportImageParamsBuilder setPitch(double f, ){
    
    return _setPitch(reference.pointer, _id_setPitch as _$jni.JMethodIDPtr, f).object(const $ExportImageParamsBuilder$Type());
  }

  static final _id_getPitch = _class.instanceMethodId(
    r'getPitch',
    r'()F',
  );

  static final _getPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getPitch()`
  double getPitch(){
    
    return _getPitch(reference.pointer, _id_getPitch as _$jni.JMethodIDPtr).float;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $ExportImageParamsBuilder$Type extends _$jni.JObjType<ExportImageParamsBuilder> {
  

  @_$jni.internal
  const $ExportImageParamsBuilder$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;';

  @_$jni.internal
  @_$core.override
  ExportImageParamsBuilder fromReference(_$jni.JReference reference) => ExportImageParamsBuilder.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ExportImageParamsBuilder$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ExportImageParamsBuilder$Type) &&
        other is $ExportImageParamsBuilder$Type;
  }
}

/// from: `com.arashivision.sdkmedia.export.ExportUtils$ExportMode`
class ExportUtils_ExportMode extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ExportUtils_ExportMode> $type;

  

  @_$jni.internal
  ExportUtils_ExportMode.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/export/ExportUtils$ExportMode');

      /// The type which includes information such as the signature of this class.
static const type = $ExportUtils_ExportMode$Type();
  static final _id_PANORAMA =
      _class.staticFieldId(
        r'PANORAMA',
        r'Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
      );
  /// from: `static public final com.arashivision.sdkmedia.export.ExportUtils$ExportMode PANORAMA`
  /// The returned object must be released after use, by calling the [release] method.
static ExportUtils_ExportMode get PANORAMA => _id_PANORAMA.get(_class, const $ExportUtils_ExportMode$Type());

  static final _id_SPHERE =
      _class.staticFieldId(
        r'SPHERE',
        r'Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
      );
  /// from: `static public final com.arashivision.sdkmedia.export.ExportUtils$ExportMode SPHERE`
  /// The returned object must be released after use, by calling the [release] method.
static ExportUtils_ExportMode get SPHERE => _id_SPHERE.get(_class, const $ExportUtils_ExportMode$Type());

  static final _id_values = _class.staticMethodId(
    r'values',
    r'()[Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
  );

  static final _values = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public com.arashivision.sdkmedia.export.ExportUtils$ExportMode[] values()`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JArray<ExportUtils_ExportMode> values(){
    
    return _values(_class.reference.pointer, _id_values as _$jni.JMethodIDPtr).object(const _$jni.JArrayType($ExportUtils_ExportMode$Type()));
  }

  static final _id_valueOf = _class.staticMethodId(
    r'valueOf',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
  );

  static final _valueOf = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.sdkmedia.export.ExportUtils$ExportMode valueOf(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static ExportUtils_ExportMode valueOf(_$jni.JString string, ){
    
    return _valueOf(_class.reference.pointer, _id_valueOf as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportUtils_ExportMode$Type());
  }



}
final class $ExportUtils_ExportMode$Type extends _$jni.JObjType<ExportUtils_ExportMode> {
  

  @_$jni.internal
  const $ExportUtils_ExportMode$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;';

  @_$jni.internal
  @_$core.override
  ExportUtils_ExportMode fromReference(_$jni.JReference reference) => ExportUtils_ExportMode.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ExportUtils_ExportMode$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ExportUtils_ExportMode$Type) &&
        other is $ExportUtils_ExportMode$Type;
  }
}

/// from: `com.arashivision.sdkmedia.export.ExportUtils`
class ExportUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ExportUtils> $type;

  

  @_$jni.internal
  ExportUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/export/ExportUtils');

      /// The type which includes information such as the signature of this class.
static const type = $ExportUtils$Type();
  static final _id_O8ooO8o88 =
      _class.staticFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/log/MediaLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basemedia.log.MediaLogger O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(_class, const _$jni.JObjectType());

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory ExportUtils() {
    
    return ExportUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_exportImage = _class.staticMethodId(
    r'exportImage',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;Lcom/arashivision/sdkmedia/export/IExportCallback;)I',
  );

  static final _exportImage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int exportImage(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, com.arashivision.sdkmedia.export.ExportImageParamsBuilder exportImageParamsBuilder, com.arashivision.sdkmedia.export.IExportCallback iExportCallback)`
  static int exportImage(WorkWrapper workWrapper, ExportImageParamsBuilder exportImageParamsBuilder, IExportCallback iExportCallback, ){
    
    return _exportImage(_class.reference.pointer, _id_exportImage as _$jni.JMethodIDPtr, workWrapper.reference.pointer, exportImageParamsBuilder.reference.pointer, iExportCallback.reference.pointer).integer;
  }

  static final _id_exportVideo = _class.staticMethodId(
    r'exportVideo',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;Lcom/arashivision/sdkmedia/export/IExportCallback;)I',
  );

  static final _exportVideo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int exportVideo(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, com.arashivision.sdkmedia.export.ExportVideoParamsBuilder exportVideoParamsBuilder, com.arashivision.sdkmedia.export.IExportCallback iExportCallback)`
  static int exportVideo(WorkWrapper workWrapper, ExportVideoParamsBuilder exportVideoParamsBuilder, IExportCallback iExportCallback, ){
    
    return _exportVideo(_class.reference.pointer, _id_exportVideo as _$jni.JMethodIDPtr, workWrapper.reference.pointer, exportVideoParamsBuilder.reference.pointer, iExportCallback.reference.pointer).integer;
  }

  static final _id_exportVideoToImage = _class.staticMethodId(
    r'exportVideoToImage',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Lcom/arashivision/sdkmedia/export/ExportImageParamsBuilder;Lcom/arashivision/sdkmedia/export/IExportCallback;)I',
  );

  static final _exportVideoToImage = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int exportVideoToImage(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, com.arashivision.sdkmedia.export.ExportImageParamsBuilder exportImageParamsBuilder, com.arashivision.sdkmedia.export.IExportCallback iExportCallback)`
  static int exportVideoToImage(WorkWrapper workWrapper, ExportImageParamsBuilder exportImageParamsBuilder, IExportCallback iExportCallback, ){
    
    return _exportVideoToImage(_class.reference.pointer, _id_exportVideoToImage as _$jni.JMethodIDPtr, workWrapper.reference.pointer, exportImageParamsBuilder.reference.pointer, iExportCallback.reference.pointer).integer;
  }

  static final _id_stopExport = _class.staticMethodId(
    r'stopExport',
    r'(I)V',
  );

  static final _stopExport = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallStaticVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `static public void stopExport(int i)`
  static void stopExport(int i, ){
    
    _stopExport(_class.reference.pointer, _id_stopExport as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_O8ooO8o88$1 = _class.staticMethodId(
    r'O8ooO8o88',
    r'(Lcom/arashivision/sdkmedia/export/IExportCallback;)Lcom/arashivision/insta360/basemedia/export/task/single/ISingleExportListener;',
  );

  static final _O8ooO8o88$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public com.arashivision.insta360.basemedia.export.task.single.ISingleExportListener O8ooO8o88(com.arashivision.sdkmedia.export.IExportCallback iExportCallback)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JObject O8ooO8o88$1(IExportCallback iExportCallback, ){
    
    return _O8ooO8o88$1(_class.reference.pointer, _id_O8ooO8o88$1 as _$jni.JMethodIDPtr, iExportCallback.reference.pointer).object(const _$jni.JObjectType());
  }



}
final class $ExportUtils$Type extends _$jni.JObjType<ExportUtils> {
  

  @_$jni.internal
  const $ExportUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/export/ExportUtils;';

  @_$jni.internal
  @_$core.override
  ExportUtils fromReference(_$jni.JReference reference) => ExportUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ExportUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ExportUtils$Type) &&
        other is $ExportUtils$Type;
  }
}

/// from: `com.arashivision.sdkmedia.export.ExportVideoParamsBuilder`
class ExportVideoParamsBuilder extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ExportVideoParamsBuilder> $type;

  

  @_$jni.internal
  ExportVideoParamsBuilder.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/export/ExportVideoParamsBuilder');

      /// The type which includes information such as the signature of this class.
static const type = $ExportVideoParamsBuilder$Type();
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
      );
  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
ExportUtils_ExportMode get O8ooO8o88 => _id_O8ooO8o88.get(this, const $ExportUtils_ExportMode$Type());

  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(ExportUtils_ExportMode value) => _id_O8ooO8o88.set(this, const $ExportUtils_ExportMode$Type(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oOoo => _id_oOoo.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JString value) => _id_oOoo.set(this, const _$jni.JStringType(), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oO8 => _id_oO8.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
set oO8(_$jni.JString value) => _id_oO8.set(this, const _$jni.JStringType(), value);

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
set oo0oo0(_$jni.JString value) => _id_oo0oo0.set(this, const _$jni.JStringType(), value);

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get ooO => _id_ooO.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
set ooO(_$jni.JString value) => _id_ooO.set(this, const _$jni.JStringType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Z',
      );
  /// from: `public boolean Oo0`
bool get Oo0 => _id_Oo0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oo0`
set Oo0(bool value) => _id_Oo0.set(this, const _$jni.jbooleanType(), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'I',
      );
  /// from: `public int oO`
int get oO => _id_oO.get(this, const _$jni.jintType());

  /// from: `public int oO`
set oO(int value) => _id_oO.set(this, const _$jni.jintType(), value);

  static final _id_ooo0Oo0O =
      _class.instanceFieldId(
        r'ooo0Oo0O',
        r'Z',
      );
  /// from: `public boolean ooo0Oo0O`
bool get ooo0Oo0O => _id_ooo0Oo0O.get(this, const _$jni.jbooleanType());

  /// from: `public boolean ooo0Oo0O`
set ooo0Oo0O(bool value) => _id_ooo0Oo0O.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo =
      _class.instanceFieldId(
        r'oo',
        r'Z',
      );
  /// from: `public boolean oo`
bool get oo => _id_oo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo`
set oo(bool value) => _id_oo.set(this, const _$jni.jbooleanType(), value);

  static final _id_o00oOOo =
      _class.instanceFieldId(
        r'o00oOOo',
        r'Z',
      );
  /// from: `public boolean o00oOOo`
bool get o00oOOo => _id_o00oOOo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean o00oOOo`
set o00oOOo(bool value) => _id_o00oOOo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OOo8 =
      _class.instanceFieldId(
        r'OOo8',
        r'I',
      );
  /// from: `public int OOo8`
int get OOo8 => _id_OOo8.get(this, const _$jni.jintType());

  /// from: `public int OOo8`
set OOo8(int value) => _id_OOo8.set(this, const _$jni.jintType(), value);

  static final _id_oo0oOOoO8 =
      _class.instanceFieldId(
        r'oo0oOOoO8',
        r'I',
      );
  /// from: `public int oo0oOOoO8`
int get oo0oOOoO8 => _id_oo0oOOoO8.get(this, const _$jni.jintType());

  /// from: `public int oo0oOOoO8`
set oo0oOOoO8(int value) => _id_oo0oOOoO8.set(this, const _$jni.jintType(), value);

  static final _id_Oo80Oo0O =
      _class.instanceFieldId(
        r'Oo80Oo0O',
        r'I',
      );
  /// from: `public int Oo80Oo0O`
int get Oo80Oo0O => _id_Oo80Oo0O.get(this, const _$jni.jintType());

  /// from: `public int Oo80Oo0O`
set Oo80Oo0O(int value) => _id_Oo80Oo0O.set(this, const _$jni.jintType(), value);

  static final _id_Oo =
      _class.instanceFieldId(
        r'Oo',
        r'I',
      );
  /// from: `public int Oo`
int get Oo => _id_Oo.get(this, const _$jni.jintType());

  /// from: `public int Oo`
set Oo(int value) => _id_Oo.set(this, const _$jni.jintType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory ExportVideoParamsBuilder() {
    
    return ExportVideoParamsBuilder.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_setExportMode = _class.instanceMethodId(
    r'setExportMode',
    r'(Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setExportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setExportMode(com.arashivision.sdkmedia.export.ExportUtils$ExportMode exportMode)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setExportMode(ExportUtils_ExportMode exportMode, ){
    
    return _setExportMode(reference.pointer, _id_setExportMode as _$jni.JMethodIDPtr, exportMode.reference.pointer).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getExportMode = _class.instanceMethodId(
    r'getExportMode',
    r'()Lcom/arashivision/sdkmedia/export/ExportUtils$ExportMode;',
  );

  static final _getExportMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.sdkmedia.export.ExportUtils$ExportMode getExportMode()`
  /// The returned object must be released after use, by calling the [release] method.
  ExportUtils_ExportMode getExportMode(){
    
    return _getExportMode(reference.pointer, _id_getExportMode as _$jni.JMethodIDPtr).object(const $ExportUtils_ExportMode$Type());
  }

  static final _id_setCameraType = _class.instanceMethodId(
    r'setCameraType',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setCameraType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setCameraType(_$jni.JString string, ){
    
    return _setCameraType(reference.pointer, _id_setCameraType as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setTargetPath = _class.instanceMethodId(
    r'setTargetPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setTargetPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setTargetPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setTargetPath(_$jni.JString string, ){
    
    return _setTargetPath(reference.pointer, _id_setTargetPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getTargetPath = _class.instanceMethodId(
    r'getTargetPath',
    r'()Ljava/lang/String;',
  );

  static final _getTargetPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getTargetPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getTargetPath(){
    
    return _getTargetPath(reference.pointer, _id_getTargetPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'setCacheWorkThumbnailRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setCacheWorkThumbnailRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setCacheWorkThumbnailRootPath(_$jni.JString string, ){
    
    return _setCacheWorkThumbnailRootPath(reference.pointer, _id_setCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'getCacheWorkThumbnailRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheWorkThumbnailRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheWorkThumbnailRootPath(){
    
    return _getCacheWorkThumbnailRootPath(reference.pointer, _id_getCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheCutSceneRootPath = _class.instanceMethodId(
    r'setCacheCutSceneRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setCacheCutSceneRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setCacheCutSceneRootPath(_$jni.JString string, ){
    
    return _setCacheCutSceneRootPath(reference.pointer, _id_setCacheCutSceneRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getCacheCutSceneRootPath = _class.instanceMethodId(
    r'getCacheCutSceneRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheCutSceneRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheCutSceneRootPath(){
    
    return _getCacheCutSceneRootPath(reference.pointer, _id_getCacheCutSceneRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setStabEnabled = _class.instanceMethodId(
    r'setStabEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setStabEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setStabEnabled(bool z, ){
    
    return _setStabEnabled(reference.pointer, _id_setStabEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStabType = _class.instanceMethodId(
    r'setStabType',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setStabType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setStabType(int i, ){
    
    return _setStabType(reference.pointer, _id_setStabType as _$jni.JMethodIDPtr, i).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getStabType = _class.instanceMethodId(
    r'getStabType',
    r'()I',
  );

  static final _getStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStabType()`
  int getStabType(){
    
    return _getStabType(reference.pointer, _id_getStabType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setDynamicStitch = _class.instanceMethodId(
    r'setDynamicStitch',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setDynamicStitch(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setDynamicStitch(bool z, ){
    
    return _setDynamicStitch(reference.pointer, _id_setDynamicStitch as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_isDynamicStitch = _class.instanceMethodId(
    r'isDynamicStitch',
    r'()Z',
  );

  static final _isDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isDynamicStitch()`
  bool isDynamicStitch(){
    
    return _isDynamicStitch(reference.pointer, _id_isDynamicStitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setUseSoftwareDecoder = _class.instanceMethodId(
    r'setUseSoftwareDecoder',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setUseSoftwareDecoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setUseSoftwareDecoder(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setUseSoftwareDecoder(bool z, ){
    
    return _setUseSoftwareDecoder(reference.pointer, _id_setUseSoftwareDecoder as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_isUseSoftwareDecoder = _class.instanceMethodId(
    r'isUseSoftwareDecoder',
    r'()Z',
  );

  static final _isUseSoftwareDecoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isUseSoftwareDecoder()`
  bool isUseSoftwareDecoder(){
    
    return _isUseSoftwareDecoder(reference.pointer, _id_isUseSoftwareDecoder as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setUseSoftwareEncoder = _class.instanceMethodId(
    r'setUseSoftwareEncoder',
    r'(Z)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setUseSoftwareEncoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setUseSoftwareEncoder(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setUseSoftwareEncoder(bool z, ){
    
    return _setUseSoftwareEncoder(reference.pointer, _id_setUseSoftwareEncoder as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_isUseSoftwareEncoder = _class.instanceMethodId(
    r'isUseSoftwareEncoder',
    r'()Z',
  );

  static final _isUseSoftwareEncoder = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isUseSoftwareEncoder()`
  bool isUseSoftwareEncoder(){
    
    return _isUseSoftwareEncoder(reference.pointer, _id_isUseSoftwareEncoder as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setWidth = _class.instanceMethodId(
    r'setWidth',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setWidth(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setWidth(int i, ){
    
    return _setWidth(reference.pointer, _id_setWidth as _$jni.JMethodIDPtr, i).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getWidth = _class.instanceMethodId(
    r'getWidth',
    r'()I',
  );

  static final _getWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getWidth()`
  int getWidth(){
    
    return _getWidth(reference.pointer, _id_getWidth as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setHeight = _class.instanceMethodId(
    r'setHeight',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setHeight(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setHeight(int i, ){
    
    return _setHeight(reference.pointer, _id_setHeight as _$jni.JMethodIDPtr, i).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getHeight = _class.instanceMethodId(
    r'getHeight',
    r'()I',
  );

  static final _getHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getHeight()`
  int getHeight(){
    
    return _getHeight(reference.pointer, _id_getHeight as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setBitrate = _class.instanceMethodId(
    r'setBitrate',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setBitrate(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setBitrate(int i, ){
    
    return _setBitrate(reference.pointer, _id_setBitrate as _$jni.JMethodIDPtr, i).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getBitrate = _class.instanceMethodId(
    r'getBitrate',
    r'()I',
  );

  static final _getBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBitrate()`
  int getBitrate(){
    
    return _getBitrate(reference.pointer, _id_getBitrate as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setFps = _class.instanceMethodId(
    r'setFps',
    r'(I)Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;',
  );

  static final _setFps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.export.ExportVideoParamsBuilder setFps(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ExportVideoParamsBuilder setFps(int i, ){
    
    return _setFps(reference.pointer, _id_setFps as _$jni.JMethodIDPtr, i).object(const $ExportVideoParamsBuilder$Type());
  }

  static final _id_getFps = _class.instanceMethodId(
    r'getFps',
    r'()I',
  );

  static final _getFps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFps()`
  int getFps(){
    
    return _getFps(reference.pointer, _id_getFps as _$jni.JMethodIDPtr).integer;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $ExportVideoParamsBuilder$Type extends _$jni.JObjType<ExportVideoParamsBuilder> {
  

  @_$jni.internal
  const $ExportVideoParamsBuilder$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/export/ExportVideoParamsBuilder;';

  @_$jni.internal
  @_$core.override
  ExportVideoParamsBuilder fromReference(_$jni.JReference reference) => ExportVideoParamsBuilder.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ExportVideoParamsBuilder$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ExportVideoParamsBuilder$Type) &&
        other is $ExportVideoParamsBuilder$Type;
  }
}

/// from: `com.arashivision.sdkmedia.export.IExportCallback`
class IExportCallback extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<IExportCallback> $type;

  

  @_$jni.internal
  IExportCallback.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/export/IExportCallback');

      /// The type which includes information such as the signature of this class.
static const type = $IExportCallback$Type();
  static final _id_onSuccess = _class.instanceMethodId(
    r'onSuccess',
    r'()V',
  );

  static final _onSuccess = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void onSuccess()`
  void onSuccess(){
    
    _onSuccess(reference.pointer, _id_onSuccess as _$jni.JMethodIDPtr).check();
  }

  static final _id_onFail = _class.instanceMethodId(
    r'onFail',
    r'(ILjava/lang/String;)V',
  );

  static final _onFail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public abstract void onFail(int i, java.lang.String string)`
  void onFail(int i, _$jni.JString string, ){
    
    _onFail(reference.pointer, _id_onFail as _$jni.JMethodIDPtr, i, string.reference.pointer).check();
  }

  static final _id_onCancel = _class.instanceMethodId(
    r'onCancel',
    r'()V',
  );

  static final _onCancel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public abstract void onCancel()`
  void onCancel(){
    
    _onCancel(reference.pointer, _id_onCancel as _$jni.JMethodIDPtr).check();
  }

  static final _id_onProgress = _class.instanceMethodId(
    r'onProgress',
    r'(F)V',
  );

  static final _onProgress = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void onProgress(float f)`
  void onProgress(double f, ){
    
    _onProgress(reference.pointer, _id_onProgress as _$jni.JMethodIDPtr, f).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $IExportCallback> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onSuccess()V') {
          _$impls[$p]!.onSuccess(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFail(ILjava/lang/String;)V') {
          _$impls[$p]!.onFail(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCancel()V') {
          _$impls[$p]!.onCancel(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onProgress(F)V') {
          _$impls[$p]!.onProgress(
$a[0].as(const _$jni.JFloatType(), releaseOriginal: true).floatValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $IExportCallback $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.sdkmedia.export.IExportCallback',
      $p,
      _$invokePointer,
      [
        if ($impl.onSuccess$async) r'onSuccess()V',
        if ($impl.onFail$async) r'onFail(ILjava/lang/String;)V',
        if ($impl.onCancel$async) r'onCancel()V',
        if ($impl.onProgress$async) r'onProgress(F)V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory IExportCallback.implement(
    $IExportCallback $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return IExportCallback.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $IExportCallback {
  factory $IExportCallback(
    {required void Function() onSuccess, bool onSuccess$async,
    required void Function(int i, _$jni.JString string) onFail, bool onFail$async,
    required void Function() onCancel, bool onCancel$async,
    required void Function(double f) onProgress, bool onProgress$async,}
  ) = _$IExportCallback;

  

  void onSuccess();
  bool get onSuccess$async => false;
  void onFail(int i, _$jni.JString string);
  bool get onFail$async => false;
  void onCancel();
  bool get onCancel$async => false;
  void onProgress(double f);
  bool get onProgress$async => false;
}

final class _$IExportCallback with $IExportCallback {
  _$IExportCallback(
    {required void Function() onSuccess, this.onSuccess$async = false,
    required void Function(int i, _$jni.JString string) onFail, this.onFail$async = false,
    required void Function() onCancel, this.onCancel$async = false,
    required void Function(double f) onProgress, this.onProgress$async = false,}
  ) :  _onSuccess = onSuccess, _onFail = onFail, _onCancel = onCancel, _onProgress = onProgress;

  

  final void Function() _onSuccess;
  final bool onSuccess$async;
  final void Function(int i, _$jni.JString string) _onFail;
  final bool onFail$async;
  final void Function() _onCancel;
  final bool onCancel$async;
  final void Function(double f) _onProgress;
  final bool onProgress$async;

  void onSuccess() {
    return _onSuccess();
  }  void onFail(int i, _$jni.JString string) {
    return _onFail(i, string);
  }  void onCancel() {
    return _onCancel();
  }  void onProgress(double f) {
    return _onProgress(f);
  }}
final class $IExportCallback$Type extends _$jni.JObjType<IExportCallback> {
  

  @_$jni.internal
  const $IExportCallback$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/export/IExportCallback;';

  @_$jni.internal
  @_$core.override
  IExportCallback fromReference(_$jni.JReference reference) => IExportCallback.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($IExportCallback$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($IExportCallback$Type) &&
        other is $IExportCallback$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder`
class CaptureParamsBuilder extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<CaptureParamsBuilder> $type;

  

  @_$jni.internal
  CaptureParamsBuilder.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/capture/CaptureParamsBuilder');

      /// The type which includes information such as the signature of this class.
static const type = $CaptureParamsBuilder$Type();
  /// from: `static public final int RENDER_MODE_AUTO`
  static const RENDER_MODE_AUTO = 0;
  /// from: `static public final int RENDER_MODE_PLANE_STITCH`
  static const RENDER_MODE_PLANE_STITCH = 10;
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get O8ooO8o88 => _id_O8ooO8o88.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(_$jni.JString value) => _id_O8ooO8o88.set(this, const _$jni.JStringType(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oOoo => _id_oOoo.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JString value) => _id_oOoo.set(this, const _$jni.JStringType(), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oO8 => _id_oO8.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
set oO8(_$jni.JString value) => _id_oO8.set(this, const _$jni.JStringType(), value);

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
set oo0oo0(_$jni.JString value) => _id_oo0oo0.set(this, const _$jni.JStringType(), value);

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Z',
      );
  /// from: `public boolean ooO`
bool get ooO => _id_ooO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean ooO`
set ooO(bool value) => _id_ooO.set(this, const _$jni.jbooleanType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Z',
      );
  /// from: `public boolean Oo0`
bool get Oo0 => _id_Oo0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oo0`
set Oo0(bool value) => _id_Oo0.set(this, const _$jni.jbooleanType(), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'I',
      );
  /// from: `public int oO`
int get oO => _id_oO.get(this, const _$jni.jintType());

  /// from: `public int oO`
set oO(int value) => _id_oO.set(this, const _$jni.jintType(), value);

  static final _id_ooo0Oo0O =
      _class.instanceFieldId(
        r'ooo0Oo0O',
        r'I',
      );
  /// from: `public int ooo0Oo0O`
int get ooo0Oo0O => _id_ooo0Oo0O.get(this, const _$jni.jintType());

  /// from: `public int ooo0Oo0O`
set ooo0Oo0O(int value) => _id_ooo0Oo0O.set(this, const _$jni.jintType(), value);

  static final _id_oo =
      _class.instanceFieldId(
        r'oo',
        r'I',
      );
  /// from: `public int oo`
int get oo => _id_oo.get(this, const _$jni.jintType());

  /// from: `public int oo`
set oo(int value) => _id_oo.set(this, const _$jni.jintType(), value);

  static final _id_o00oOOo =
      _class.instanceFieldId(
        r'o00oOOo',
        r'D',
      );
  /// from: `public double o00oOOo`
double get o00oOOo => _id_o00oOOo.get(this, const _$jni.jdoubleType());

  /// from: `public double o00oOOo`
set o00oOOo(double value) => _id_o00oOOo.set(this, const _$jni.jdoubleType(), value);

  static final _id_OOo8 =
      _class.instanceFieldId(
        r'OOo8',
        r'I',
      );
  /// from: `public int OOo8`
int get OOo8 => _id_OOo8.get(this, const _$jni.jintType());

  /// from: `public int OOo8`
set OOo8(int value) => _id_OOo8.set(this, const _$jni.jintType(), value);

  static final _id_oo0oOOoO8 =
      _class.instanceFieldId(
        r'oo0oOOoO8',
        r'Lcom/arashivision/insta360/basemedia/asset/WindowCropInfo;',
      );
  /// from: `public com.arashivision.insta360.basemedia.asset.WindowCropInfo oo0oOOoO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oo0oOOoO8 => _id_oo0oOOoO8.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.asset.WindowCropInfo oo0oOOoO8`
  /// The returned object must be released after use, by calling the [release] method.
set oo0oOOoO8(_$jni.JObject value) => _id_oo0oOOoO8.set(this, const _$jni.JObjectType(), value);

  static final _id_Oo80Oo0O =
      _class.instanceFieldId(
        r'Oo80Oo0O',
        r'Z',
      );
  /// from: `public boolean Oo80Oo0O`
bool get Oo80Oo0O => _id_Oo80Oo0O.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oo80Oo0O`
set Oo80Oo0O(bool value) => _id_Oo80Oo0O.set(this, const _$jni.jbooleanType(), value);

  static final _id_Oo =
      _class.instanceFieldId(
        r'Oo',
        r'I',
      );
  /// from: `public int Oo`
int get Oo => _id_Oo.get(this, const _$jni.jintType());

  /// from: `public int Oo`
set Oo(int value) => _id_Oo.set(this, const _$jni.jintType(), value);

  static final _id_o0o8o =
      _class.instanceFieldId(
        r'o0o8o',
        r'[I',
      );
  /// from: `public int[] o0o8o`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.jint> get o0o8o => _id_o0o8o.get(this, const _$jni.JArrayType(_$jni.jintType()));

  /// from: `public int[] o0o8o`
  /// The returned object must be released after use, by calling the [release] method.
set o0o8o(_$jni.JArray<_$jni.jint> value) => _id_o0o8o.set(this, const _$jni.JArrayType(_$jni.jintType()), value);

  static final _id_Ooo8ooOoo =
      _class.instanceFieldId(
        r'Ooo8ooOoo',
        r'I',
      );
  /// from: `public int Ooo8ooOoo`
int get Ooo8ooOoo => _id_Ooo8ooOoo.get(this, const _$jni.jintType());

  /// from: `public int Ooo8ooOoo`
set Ooo8ooOoo(int value) => _id_Ooo8ooOoo.set(this, const _$jni.jintType(), value);

  static final _id_Ooooo =
      _class.instanceFieldId(
        r'Ooooo',
        r'Z',
      );
  /// from: `public boolean Ooooo`
bool get Ooooo => _id_Ooooo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Ooooo`
set Ooooo(bool value) => _id_Ooooo.set(this, const _$jni.jbooleanType(), value);

  static final _id_o8o0 =
      _class.instanceFieldId(
        r'o8o0',
        r'Z',
      );
  /// from: `public boolean o8o0`
bool get o8o0 => _id_o8o0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean o8o0`
set o8o0(bool value) => _id_o8o0.set(this, const _$jni.jbooleanType(), value);

  static final _id_oO8O00ooo =
      _class.instanceFieldId(
        r'oO8O00ooo',
        r'Landroid/view/Surface;',
      );
  /// from: `public android.view.Surface oO8O00ooo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oO8O00ooo => _id_oO8O00ooo.get(this, const _$jni.JObjectType());

  /// from: `public android.view.Surface oO8O00ooo`
  /// The returned object must be released after use, by calling the [release] method.
set oO8O00ooo(_$jni.JObject value) => _id_oO8O00ooo.set(this, const _$jni.JObjectType(), value);

  static final _id_ooO00O =
      _class.instanceFieldId(
        r'ooO00O',
        r'I',
      );
  /// from: `public int ooO00O`
int get ooO00O => _id_ooO00O.get(this, const _$jni.jintType());

  /// from: `public int ooO00O`
set ooO00O(int value) => _id_ooO00O.set(this, const _$jni.jintType(), value);

  static final _id_oo0o8oo =
      _class.instanceFieldId(
        r'oo0o8oo',
        r'Z',
      );
  /// from: `public boolean oo0o8oo`
bool get oo0o8oo => _id_oo0o8oo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo0o8oo`
set oo0o8oo(bool value) => _id_oo0o8oo.set(this, const _$jni.jbooleanType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory CaptureParamsBuilder() {
    
    return CaptureParamsBuilder.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_setCameraType = _class.instanceMethodId(
    r'setCameraType',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setCameraType(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setCameraType(_$jni.JString string, ){
    
    return _setCameraType(reference.pointer, _id_setCameraType as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getCameraType = _class.instanceMethodId(
    r'getCameraType',
    r'()Ljava/lang/String;',
  );

  static final _getCameraType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCameraType()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCameraType(){
    
    return _getCameraType(reference.pointer, _id_getCameraType as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffset = _class.instanceMethodId(
    r'setMediaOffset',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setMediaOffset(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setMediaOffset(_$jni.JString string, ){
    
    return _setMediaOffset(reference.pointer, _id_setMediaOffset as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getMediaOffset = _class.instanceMethodId(
    r'getMediaOffset',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffset()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffset(){
    
    return _getMediaOffset(reference.pointer, _id_getMediaOffset as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffsetV2 = _class.instanceMethodId(
    r'setMediaOffsetV2',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setMediaOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setMediaOffsetV2(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setMediaOffsetV2(_$jni.JString string, ){
    
    return _setMediaOffsetV2(reference.pointer, _id_setMediaOffsetV2 as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getMediaOffsetV2 = _class.instanceMethodId(
    r'getMediaOffsetV2',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV2()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV2(){
    
    return _getMediaOffsetV2(reference.pointer, _id_getMediaOffsetV2 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setMediaOffsetV3 = _class.instanceMethodId(
    r'setMediaOffsetV3',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setMediaOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setMediaOffsetV3(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setMediaOffsetV3(_$jni.JString string, ){
    
    return _setMediaOffsetV3(reference.pointer, _id_setMediaOffsetV3 as _$jni.JMethodIDPtr, string.reference.pointer).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getMediaOffsetV3 = _class.instanceMethodId(
    r'getMediaOffsetV3',
    r'()Ljava/lang/String;',
  );

  static final _getMediaOffsetV3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getMediaOffsetV3()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getMediaOffsetV3(){
    
    return _getMediaOffsetV3(reference.pointer, _id_getMediaOffsetV3 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCameraSelfie = _class.instanceMethodId(
    r'setCameraSelfie',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setCameraSelfie = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setCameraSelfie(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setCameraSelfie(bool z, ){
    
    return _setCameraSelfie(reference.pointer, _id_setCameraSelfie as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_isCameraSelfie = _class.instanceMethodId(
    r'isCameraSelfie',
    r'()Z',
  );

  static final _isCameraSelfie = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraSelfie()`
  bool isCameraSelfie(){
    
    return _isCameraSelfie(reference.pointer, _id_isCameraSelfie as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setLive = _class.instanceMethodId(
    r'setLive',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setLive(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setLive(bool z, ){
    
    return _setLive(reference.pointer, _id_setLive as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_isLive = _class.instanceMethodId(
    r'isLive',
    r'()Z',
  );

  static final _isLive = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLive()`
  bool isLive(){
    
    return _isLive(reference.pointer, _id_isLive as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setResolutionParams = _class.instanceMethodId(
    r'setResolutionParams',
    r'(III)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setResolutionParams = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setResolutionParams(int i, int i1, int i2)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setResolutionParams(int i, int i1, int i2, ){
    
    return _setResolutionParams(reference.pointer, _id_setResolutionParams as _$jni.JMethodIDPtr, i, i1, i2).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getWidth = _class.instanceMethodId(
    r'getWidth',
    r'()I',
  );

  static final _getWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getWidth()`
  int getWidth(){
    
    return _getWidth(reference.pointer, _id_getWidth as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getHeight = _class.instanceMethodId(
    r'getHeight',
    r'()I',
  );

  static final _getHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getHeight()`
  int getHeight(){
    
    return _getHeight(reference.pointer, _id_getHeight as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFps = _class.instanceMethodId(
    r'getFps',
    r'()I',
  );

  static final _getFps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getFps()`
  int getFps(){
    
    return _getFps(reference.pointer, _id_getFps as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setGyroTimeStamp = _class.instanceMethodId(
    r'setGyroTimeStamp',
    r'(D)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setGyroTimeStamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setGyroTimeStamp(double d)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setGyroTimeStamp(double d, ){
    
    return _setGyroTimeStamp(reference.pointer, _id_setGyroTimeStamp as _$jni.JMethodIDPtr, d).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getGyroTimeStamp = _class.instanceMethodId(
    r'getGyroTimeStamp',
    r'()D',
  );

  static final _getGyroTimeStamp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getGyroTimeStamp()`
  double getGyroTimeStamp(){
    
    return _getGyroTimeStamp(reference.pointer, _id_getGyroTimeStamp as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_setBatteryType = _class.instanceMethodId(
    r'setBatteryType',
    r'(I)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setBatteryType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setBatteryType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setBatteryType(int i, ){
    
    return _setBatteryType(reference.pointer, _id_setBatteryType as _$jni.JMethodIDPtr, i).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getWindowCropInfo = _class.instanceMethodId(
    r'getWindowCropInfo',
    r'()Lcom/arashivision/insta360/basemedia/asset/WindowCropInfo;',
  );

  static final _getWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basemedia.asset.WindowCropInfo getWindowCropInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWindowCropInfo(){
    
    return _getWindowCropInfo(reference.pointer, _id_getWindowCropInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setWindowCropInfo = _class.instanceMethodId(
    r'setWindowCropInfo',
    r'(Lcom/arashivision/insta360/basemedia/asset/WindowCropInfo;)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setWindowCropInfo(com.arashivision.insta360.basemedia.asset.WindowCropInfo windowCropInfo)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setWindowCropInfo(_$jni.JObject windowCropInfo, ){
    
    return _setWindowCropInfo(reference.pointer, _id_setWindowCropInfo as _$jni.JMethodIDPtr, windowCropInfo.reference.pointer).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getBatteryType = _class.instanceMethodId(
    r'getBatteryType',
    r'()I',
  );

  static final _getBatteryType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBatteryType()`
  int getBatteryType(){
    
    return _getBatteryType(reference.pointer, _id_getBatteryType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setStabEnabled = _class.instanceMethodId(
    r'setStabEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setStabEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setStabEnabled(bool z, ){
    
    return _setStabEnabled(reference.pointer, _id_setStabEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStabType = _class.instanceMethodId(
    r'setStabType',
    r'(I)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setStabType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setStabType(int i, ){
    
    return _setStabType(reference.pointer, _id_setStabType as _$jni.JMethodIDPtr, i).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getStabType = _class.instanceMethodId(
    r'getStabType',
    r'()I',
  );

  static final _getStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStabType()`
  int getStabType(){
    
    return _getStabType(reference.pointer, _id_getStabType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setScreenRatio = _class.instanceMethodId(
    r'setScreenRatio',
    r'(II)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setScreenRatio(int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setScreenRatio(int i, int i1, ){
    
    return _setScreenRatio(reference.pointer, _id_setScreenRatio as _$jni.JMethodIDPtr, i, i1).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getScreenRatio = _class.instanceMethodId(
    r'getScreenRatio',
    r'()[I',
  );

  static final _getScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int[] getScreenRatio()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.jint> getScreenRatio(){
    
    return _getScreenRatio(reference.pointer, _id_getScreenRatio as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.jintType()));
  }

  static final _id_setRenderModelType = _class.instanceMethodId(
    r'setRenderModelType',
    r'(I)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setRenderModelType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setRenderModelType(int i, ){
    
    return _setRenderModelType(reference.pointer, _id_setRenderModelType as _$jni.JMethodIDPtr, i).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getRenderModelType = _class.instanceMethodId(
    r'getRenderModelType',
    r'()I',
  );

  static final _getRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getRenderModelType()`
  int getRenderModelType(){
    
    return _getRenderModelType(reference.pointer, _id_getRenderModelType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setCameraRenderSurfaceInfo = _class.instanceMethodId(
    r'setCameraRenderSurfaceInfo',
    r'(Landroid/view/Surface;II)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setCameraRenderSurfaceInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setCameraRenderSurfaceInfo(android.view.Surface surface, int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setCameraRenderSurfaceInfo(_$jni.JObject surface, int i, int i1, ){
    
    return _setCameraRenderSurfaceInfo(reference.pointer, _id_setCameraRenderSurfaceInfo as _$jni.JMethodIDPtr, surface.reference.pointer, i, i1).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_getCameraRenderSurface = _class.instanceMethodId(
    r'getCameraRenderSurface',
    r'()Landroid/view/Surface;',
  );

  static final _getCameraRenderSurface = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public android.view.Surface getCameraRenderSurface()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getCameraRenderSurface(){
    
    return _getCameraRenderSurface(reference.pointer, _id_getCameraRenderSurface as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_getCameraRenderSurfaceWidth = _class.instanceMethodId(
    r'getCameraRenderSurfaceWidth',
    r'()I',
  );

  static final _getCameraRenderSurfaceWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraRenderSurfaceWidth()`
  int getCameraRenderSurfaceWidth(){
    
    return _getCameraRenderSurfaceWidth(reference.pointer, _id_getCameraRenderSurfaceWidth as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getCameraRenderSurfaceHeight = _class.instanceMethodId(
    r'getCameraRenderSurfaceHeight',
    r'()I',
  );

  static final _getCameraRenderSurfaceHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getCameraRenderSurfaceHeight()`
  int getCameraRenderSurfaceHeight(){
    
    return _getCameraRenderSurfaceHeight(reference.pointer, _id_getCameraRenderSurfaceHeight as _$jni.JMethodIDPtr).integer;
  }

  static final _id_isOnlyStitchSurfaceRender = _class.instanceMethodId(
    r'isOnlyStitchSurfaceRender',
    r'()Z',
  );

  static final _isOnlyStitchSurfaceRender = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isOnlyStitchSurfaceRender()`
  bool isOnlyStitchSurfaceRender(){
    
    return _isOnlyStitchSurfaceRender(reference.pointer, _id_isOnlyStitchSurfaceRender as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setOnlyStitchSurfaceRender = _class.instanceMethodId(
    r'setOnlyStitchSurfaceRender',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setOnlyStitchSurfaceRender = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setOnlyStitchSurfaceRender(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setOnlyStitchSurfaceRender(bool z, ){
    
    return _setOnlyStitchSurfaceRender(reference.pointer, _id_setOnlyStitchSurfaceRender as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_isCopyVideoHwaccel = _class.instanceMethodId(
    r'isCopyVideoHwaccel',
    r'()Z',
  );

  static final _isCopyVideoHwaccel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCopyVideoHwaccel()`
  bool isCopyVideoHwaccel(){
    
    return _isCopyVideoHwaccel(reference.pointer, _id_isCopyVideoHwaccel as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setCopyVideoHwaccel = _class.instanceMethodId(
    r'setCopyVideoHwaccel',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setCopyVideoHwaccel = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setCopyVideoHwaccel(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setCopyVideoHwaccel(bool z, ){
    
    return _setCopyVideoHwaccel(reference.pointer, _id_setCopyVideoHwaccel as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder setGestureEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  CaptureParamsBuilder setGestureEnabled(bool z, ){
    
    return _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $CaptureParamsBuilder$Type());
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $CaptureParamsBuilder$Type extends _$jni.JObjType<CaptureParamsBuilder> {
  

  @_$jni.internal
  const $CaptureParamsBuilder$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;';

  @_$jni.internal
  @_$core.override
  CaptureParamsBuilder fromReference(_$jni.JReference reference) => CaptureParamsBuilder.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($CaptureParamsBuilder$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($CaptureParamsBuilder$Type) &&
        other is $CaptureParamsBuilder$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.capture.InstaCapturePlayerView`
class InstaCapturePlayerView extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<InstaCapturePlayerView> $type;

  

  @_$jni.internal
  InstaCapturePlayerView.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/capture/InstaCapturePlayerView');

      /// The type which includes information such as the signature of this class.
static const type = $InstaCapturePlayerView$Type();
  static final _id_O8ooO8o88 =
      _class.staticFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/log/MediaLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basemedia.log.MediaLogger O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(_class, const _$jni.JObjectType());

  /// from: `static public final int LIVE_TYPE_PANORAMA`
  static const LIVE_TYPE_PANORAMA = 0;
  /// from: `static public final int LIVE_TYPE_RECORDING`
  static const LIVE_TYPE_RECORDING = 10;
  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oOoo => _id_oOoo.get(this, const _$jni.JObjectType());

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oO8 => _id_oO8.get(this, const _$jni.JObjectType());

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JObjectType());

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get ooO => _id_ooO.get(this, const _$jni.JObjectType());

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Lcom/arashivision/insta360/basemedia/ui/player/capture/CapturePlayerView;',
      );
  /// from: `public com.arashivision.insta360.basemedia.ui.player.capture.CapturePlayerView Oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oo0 => _id_Oo0.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.ui.player.capture.CapturePlayerView Oo0`
  /// The returned object must be released after use, by calling the [release] method.
set Oo0(_$jni.JObject value) => _id_Oo0.set(this, const _$jni.JObjectType(), value);

  static final _id_new$ = _class.constructorId(
    r'(Landroid/content/Context;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaCapturePlayerView(_$jni.JObject context, ) {
    
    return InstaCapturePlayerView.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, context.reference.pointer).reference
    );
  }

  static final _id_new$1 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;)V',
  );

  static final _new$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaCapturePlayerView.new$1(_$jni.JObject context, _$jni.JObject attributeSet, ) {
    
    return InstaCapturePlayerView.fromReference(
      
      _new$1(_class.reference.pointer, _id_new$1 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer).reference
    );
  }

  static final _id_new$2 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;I)V',
  );

  static final _new$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaCapturePlayerView.new$2(_$jni.JObject context, _$jni.JObject attributeSet, int i, ) {
    
    return InstaCapturePlayerView.fromReference(
      
      _new$2(_class.reference.pointer, _id_new$2 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i).reference
    );
  }

  static final _id_new$3 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;II)V',
  );

  static final _new$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaCapturePlayerView.new$3(_$jni.JObject context, _$jni.JObject attributeSet, int i, int i1, ) {
    
    return InstaCapturePlayerView.fromReference(
      
      _new$3(_class.reference.pointer, _id_new$3 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i, i1).reference
    );
  }



  static final _id_O8ooO8o88$1 = _class.instanceMethodId(
    r'O8ooO8o88',
    r'(Landroid/content/Context;)V',
  );

  static final _O8ooO8o88$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void O8ooO8o88(android.content.Context context)`
  void O8ooO8o88$1(_$jni.JObject context, ){
    
    _O8ooO8o88$1(reference.pointer, _id_O8ooO8o88$1 as _$jni.JMethodIDPtr, context.reference.pointer).check();
  }

  static final _id_setLifecycle = _class.instanceMethodId(
    r'setLifecycle',
    r'(Landroid/arch/lifecycle/Lifecycle;)V',
  );

  static final _setLifecycle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLifecycle(android.arch.lifecycle.Lifecycle lifecycle)`
  void setLifecycle(_$jni.JObject lifecycle, ){
    
    _setLifecycle(reference.pointer, _id_setLifecycle as _$jni.JMethodIDPtr, lifecycle.reference.pointer).check();
  }

  static final _id_prepare = _class.instanceMethodId(
    r'prepare',
    r'(Lcom/arashivision/sdkmedia/player/capture/CaptureParamsBuilder;)V',
  );

  static final _prepare = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void prepare(com.arashivision.sdkmedia.player.capture.CaptureParamsBuilder captureParamsBuilder)`
  void prepare(CaptureParamsBuilder captureParamsBuilder, ){
    
    _prepare(reference.pointer, _id_prepare as _$jni.JMethodIDPtr, captureParamsBuilder.reference.pointer).check();
  }

  static final _id_play = _class.instanceMethodId(
    r'play',
    r'()V',
  );

  static final _play = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void play()`
  void play(){
    
    _play(reference.pointer, _id_play as _$jni.JMethodIDPtr).check();
  }

  static final _id_isLoading = _class.instanceMethodId(
    r'isLoading',
    r'()Z',
  );

  static final _isLoading = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLoading()`
  bool isLoading(){
    
    return _isLoading(reference.pointer, _id_isLoading as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getPipeline = _class.instanceMethodId(
    r'getPipeline',
    r'()Ljava/lang/Object;',
  );

  static final _getPipeline = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.Object getPipeline()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getPipeline(){
    
    return _getPipeline(reference.pointer, _id_getPipeline as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_isPlaying = _class.instanceMethodId(
    r'isPlaying',
    r'()Z',
  );

  static final _isPlaying = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPlaying()`
  bool isPlaying(){
    
    return _isPlaying(reference.pointer, _id_isPlaying as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_destroy = _class.instanceMethodId(
    r'destroy',
    r'()V',
  );

  static final _destroy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void destroy()`
  void destroy(){
    
    _destroy(reference.pointer, _id_destroy as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchNormalMode = _class.instanceMethodId(
    r'switchNormalMode',
    r'()V',
  );

  static final _switchNormalMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchNormalMode()`
  void switchNormalMode(){
    
    _switchNormalMode(reference.pointer, _id_switchNormalMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchFisheyeMode = _class.instanceMethodId(
    r'switchFisheyeMode',
    r'()V',
  );

  static final _switchFisheyeMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchFisheyeMode()`
  void switchFisheyeMode(){
    
    _switchFisheyeMode(reference.pointer, _id_switchFisheyeMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchPerspectiveMode = _class.instanceMethodId(
    r'switchPerspectiveMode',
    r'()V',
  );

  static final _switchPerspectiveMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchPerspectiveMode()`
  void switchPerspectiveMode(){
    
    _switchPerspectiveMode(reference.pointer, _id_switchPerspectiveMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_setConstraint = _class.instanceMethodId(
    r'setConstraint',
    r'(FFFFFF)V',
  );

  static final _setConstraint = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(float f, float f1, float f2, float f3, float f4, float f5)`
  void setConstraint(double f, double f1, double f2, double f3, double f4, double f5, ){
    
    _setConstraint(reference.pointer, _id_setConstraint as _$jni.JMethodIDPtr, f, f1, f2, f3, f4, f5).check();
  }

  static final _id_setConstraint$1 = _class.instanceMethodId(
    r'setConstraint',
    r'(Ljava/lang/String;IIFFFFFFF)V',
  );

  static final _setConstraint$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, double, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(java.lang.String string, int i, int i1, float f, float f1, float f2, float f3, float f4, float f5, float f6)`
  void setConstraint$1(_$jni.JString string, int i, int i1, double f, double f1, double f2, double f3, double f4, double f5, double f6, ){
    
    _setConstraint$1(reference.pointer, _id_setConstraint$1 as _$jni.JMethodIDPtr, string.reference.pointer, i, i1, f, f1, f2, f3, f4, f5, f6).check();
  }

  static final _id_getFov = _class.instanceMethodId(
    r'getFov',
    r'()F',
  );

  static final _getFov = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFov()`
  double getFov(){
    
    return _getFov(reference.pointer, _id_getFov as _$jni.JMethodIDPtr).float;
  }

  static final _id_getDistance = _class.instanceMethodId(
    r'getDistance',
    r'()F',
  );

  static final _getDistance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getDistance()`
  double getDistance(){
    
    return _getDistance(reference.pointer, _id_getDistance as _$jni.JMethodIDPtr).float;
  }

  static final _id_setYaw = _class.instanceMethodId(
    r'setYaw',
    r'(F)V',
  );

  static final _setYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setYaw(float f)`
  void setYaw(double f, ){
    
    _setYaw(reference.pointer, _id_setYaw as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_getYaw = _class.instanceMethodId(
    r'getYaw',
    r'()F',
  );

  static final _getYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getYaw()`
  double getYaw(){
    
    return _getYaw(reference.pointer, _id_getYaw as _$jni.JMethodIDPtr).float;
  }

  static final _id_setPitch = _class.instanceMethodId(
    r'setPitch',
    r'(F)V',
  );

  static final _setPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setPitch(float f)`
  void setPitch(double f, ){
    
    _setPitch(reference.pointer, _id_setPitch as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_getPitch = _class.instanceMethodId(
    r'getPitch',
    r'()F',
  );

  static final _getPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getPitch()`
  double getPitch(){
    
    return _getPitch(reference.pointer, _id_getPitch as _$jni.JMethodIDPtr).float;
  }

  static final _id_setRoll = _class.instanceMethodId(
    r'setRoll',
    r'(F)V',
  );

  static final _setRoll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setRoll(float f)`
  void setRoll(double f, ){
    
    _setRoll(reference.pointer, _id_setRoll as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_getRoll = _class.instanceMethodId(
    r'getRoll',
    r'()F',
  );

  static final _getRoll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getRoll()`
  double getRoll(){
    
    return _getRoll(reference.pointer, _id_getRoll as _$jni.JMethodIDPtr).float;
  }

  static final _id_setYawPitchRoll = _class.instanceMethodId(
    r'setYawPitchRoll',
    r'(FFF)V',
  );

  static final _setYawPitchRoll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double)>();
  /// from: `public void setYawPitchRoll(float f, float f1, float f2)`
  void setYawPitchRoll(double f, double f1, double f2, ){
    
    _setYawPitchRoll(reference.pointer, _id_setYawPitchRoll as _$jni.JMethodIDPtr, f, f1, f2).check();
  }

  static final _id_setStabType = _class.instanceMethodId(
    r'setStabType',
    r'(I)V',
  );

  static final _setStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setStabType(int i)`
  void setStabType(int i, ){
    
    _setStabType(reference.pointer, _id_setStabType as _$jni.JMethodIDPtr, i).check();
  }

  static final _id_setOffset = _class.instanceMethodId(
    r'setOffset',
    r'(Lcom/arashivision/insta360/basemedia/model/offset/OffsetData;)V',
  );

  static final _setOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setOffset(com.arashivision.insta360.basemedia.model.offset.OffsetData offsetData)`
  void setOffset(_$jni.JObject offsetData, ){
    
    _setOffset(reference.pointer, _id_setOffset as _$jni.JMethodIDPtr, offsetData.reference.pointer).check();
  }

  static final _id_getWindowCropInfo = _class.instanceMethodId(
    r'getWindowCropInfo',
    r'()Lcom/arashivision/insta360/basemedia/asset/WindowCropInfo;',
  );

  static final _getWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basemedia.asset.WindowCropInfo getWindowCropInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject getWindowCropInfo(){
    
    return _getWindowCropInfo(reference.pointer, _id_getWindowCropInfo as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_setWindowCropInfo = _class.instanceMethodId(
    r'setWindowCropInfo',
    r'(Lcom/arashivision/insta360/basemedia/asset/WindowCropInfo;)V',
  );

  static final _setWindowCropInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setWindowCropInfo(com.arashivision.insta360.basemedia.asset.WindowCropInfo windowCropInfo)`
  void setWindowCropInfo(_$jni.JObject windowCropInfo, ){
    
    _setWindowCropInfo(reference.pointer, _id_setWindowCropInfo as _$jni.JMethodIDPtr, windowCropInfo.reference.pointer).check();
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)V',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureEnabled(boolean z)`
  void setGestureEnabled(bool z, ){
    
    _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureHorizontalEnabled = _class.instanceMethodId(
    r'isGestureHorizontalEnabled',
    r'()Z',
  );

  static final _isGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureHorizontalEnabled()`
  bool isGestureHorizontalEnabled(){
    
    return _isGestureHorizontalEnabled(reference.pointer, _id_isGestureHorizontalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureHorizontalEnabled = _class.instanceMethodId(
    r'setGestureHorizontalEnabled',
    r'(Z)V',
  );

  static final _setGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureHorizontalEnabled(boolean z)`
  void setGestureHorizontalEnabled(bool z, ){
    
    _setGestureHorizontalEnabled(reference.pointer, _id_setGestureHorizontalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureVerticalEnabled = _class.instanceMethodId(
    r'isGestureVerticalEnabled',
    r'()Z',
  );

  static final _isGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureVerticalEnabled()`
  bool isGestureVerticalEnabled(){
    
    return _isGestureVerticalEnabled(reference.pointer, _id_isGestureVerticalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureVerticalEnabled = _class.instanceMethodId(
    r'setGestureVerticalEnabled',
    r'(Z)V',
  );

  static final _setGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureVerticalEnabled(boolean z)`
  void setGestureVerticalEnabled(bool z, ){
    
    _setGestureVerticalEnabled(reference.pointer, _id_setGestureVerticalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureZoomEnabled = _class.instanceMethodId(
    r'isGestureZoomEnabled',
    r'()Z',
  );

  static final _isGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureZoomEnabled()`
  bool isGestureZoomEnabled(){
    
    return _isGestureZoomEnabled(reference.pointer, _id_isGestureZoomEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureZoomEnabled = _class.instanceMethodId(
    r'setGestureZoomEnabled',
    r'(Z)V',
  );

  static final _setGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureZoomEnabled(boolean z)`
  void setGestureZoomEnabled(bool z, ){
    
    _setGestureZoomEnabled(reference.pointer, _id_setGestureZoomEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_showFrame = _class.instanceMethodId(
    r'showFrame',
    r'()V',
  );

  static final _showFrame = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void showFrame()`
  void showFrame(){
    
    _showFrame(reference.pointer, _id_showFrame as _$jni.JMethodIDPtr).check();
  }

  static final _id_hideFrame = _class.instanceMethodId(
    r'hideFrame',
    r'()V',
  );

  static final _hideFrame = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void hideFrame()`
  void hideFrame(){
    
    _hideFrame(reference.pointer, _id_hideFrame as _$jni.JMethodIDPtr).check();
  }

  static final _id_setPlayerViewListener = _class.instanceMethodId(
    r'setPlayerViewListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerViewListener;)V',
  );

  static final _setPlayerViewListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPlayerViewListener(com.arashivision.sdkmedia.player.listener.PlayerViewListener playerViewListener)`
  void setPlayerViewListener(PlayerViewListener playerViewListener, ){
    
    _setPlayerViewListener(reference.pointer, _id_setPlayerViewListener as _$jni.JMethodIDPtr, playerViewListener.reference.pointer).check();
  }

  static final _id_setGestureListener = _class.instanceMethodId(
    r'setGestureListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerGestureListener;)V',
  );

  static final _setGestureListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGestureListener(com.arashivision.sdkmedia.player.listener.PlayerGestureListener playerGestureListener)`
  void setGestureListener(PlayerGestureListener playerGestureListener, ){
    
    _setGestureListener(reference.pointer, _id_setGestureListener as _$jni.JMethodIDPtr, playerGestureListener.reference.pointer).check();
  }

  static final _id_setLiveType = _class.instanceMethodId(
    r'setLiveType',
    r'(I)V',
  );

  static final _setLiveType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setLiveType(int i)`
  void setLiveType(int i, ){
    
    _setLiveType(reference.pointer, _id_setLiveType as _$jni.JMethodIDPtr, i).check();
  }

}
final class $InstaCapturePlayerView$Type extends _$jni.JObjType<InstaCapturePlayerView> {
  

  @_$jni.internal
  const $InstaCapturePlayerView$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/capture/InstaCapturePlayerView;';

  @_$jni.internal
  @_$core.override
  InstaCapturePlayerView fromReference(_$jni.JReference reference) => InstaCapturePlayerView.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($InstaCapturePlayerView$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($InstaCapturePlayerView$Type) &&
        other is $InstaCapturePlayerView$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.config.InstaStabType`
class InstaStabType extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<InstaStabType> $type;

  

  @_$jni.internal
  InstaStabType.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/config/InstaStabType');

      /// The type which includes information such as the signature of this class.
static const type = $InstaStabType$Type();
  /// from: `static public final int STAB_TYPE_AUTO`
  static const STAB_TYPE_AUTO = -2;
  /// from: `static public final int STAB_TYPE_PANORAMA`
  static const STAB_TYPE_PANORAMA = 0;
  /// from: `static public final int STAB_TYPE_CALIBRATE_HORIZON`
  static const STAB_TYPE_CALIBRATE_HORIZON = 2;
  /// from: `static public final int STAB_TYPE_FOOTAGE_MOTION_SMOOTH`
  static const STAB_TYPE_FOOTAGE_MOTION_SMOOTH = 4;
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaStabType() {
    
    return InstaStabType.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

}
final class $InstaStabType$Type extends _$jni.JObjType<InstaStabType> {
  

  @_$jni.internal
  const $InstaStabType$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/config/InstaStabType;';

  @_$jni.internal
  @_$core.override
  InstaStabType fromReference(_$jni.JReference reference) => InstaStabType.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($InstaStabType$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($InstaStabType$Type) &&
        other is $InstaStabType$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.image.ImageParamsBuilder`
class ImageParamsBuilder extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<ImageParamsBuilder> $type;

  

  @_$jni.internal
  ImageParamsBuilder.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/image/ImageParamsBuilder');

      /// The type which includes information such as the signature of this class.
static const type = $ImageParamsBuilder$Type();
  /// from: `static public final int RENDER_MODE_AUTO`
  static const RENDER_MODE_AUTO = 0;
  /// from: `static public final int RENDER_MODE_PLANE_STITCH`
  static const RENDER_MODE_PLANE_STITCH = 10;
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get O8ooO8o88 => _id_O8ooO8o88.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(_$jni.JString value) => _id_O8ooO8o88.set(this, const _$jni.JStringType(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oOoo => _id_oOoo.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JString value) => _id_oOoo.set(this, const _$jni.JStringType(), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oO8 => _id_oO8.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oO8`
  /// The returned object must be released after use, by calling the [release] method.
set oO8(_$jni.JString value) => _id_oO8.set(this, const _$jni.JStringType(), value);

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
set oo0oo0(_$jni.JString value) => _id_oo0oo0.set(this, const _$jni.JStringType(), value);

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get ooO => _id_ooO.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String ooO`
  /// The returned object must be released after use, by calling the [release] method.
set ooO(_$jni.JString value) => _id_ooO.set(this, const _$jni.JStringType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Z',
      );
  /// from: `public boolean Oo0`
bool get Oo0 => _id_Oo0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oo0`
set Oo0(bool value) => _id_Oo0.set(this, const _$jni.jbooleanType(), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'Z',
      );
  /// from: `public boolean oO`
bool get oO => _id_oO.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oO`
set oO(bool value) => _id_oO.set(this, const _$jni.jbooleanType(), value);

  static final _id_ooo0Oo0O =
      _class.instanceFieldId(
        r'ooo0Oo0O',
        r'Z',
      );
  /// from: `public boolean ooo0Oo0O`
bool get ooo0Oo0O => _id_ooo0Oo0O.get(this, const _$jni.jbooleanType());

  /// from: `public boolean ooo0Oo0O`
set ooo0Oo0O(bool value) => _id_ooo0Oo0O.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo =
      _class.instanceFieldId(
        r'oo',
        r'[I',
      );
  /// from: `public int[] oo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.jint> get oo => _id_oo.get(this, const _$jni.JArrayType(_$jni.jintType()));

  /// from: `public int[] oo`
  /// The returned object must be released after use, by calling the [release] method.
set oo(_$jni.JArray<_$jni.jint> value) => _id_oo.set(this, const _$jni.JArrayType(_$jni.jintType()), value);

  static final _id_o00oOOo =
      _class.instanceFieldId(
        r'o00oOOo',
        r'I',
      );
  /// from: `public int o00oOOo`
int get o00oOOo => _id_o00oOOo.get(this, const _$jni.jintType());

  /// from: `public int o00oOOo`
set o00oOOo(int value) => _id_o00oOOo.set(this, const _$jni.jintType(), value);

  static final _id_OOo8 =
      _class.instanceFieldId(
        r'OOo8',
        r'Z',
      );
  /// from: `public boolean OOo8`
bool get OOo8 => _id_OOo8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OOo8`
set OOo8(bool value) => _id_OOo8.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo0oOOoO8 =
      _class.instanceFieldId(
        r'oo0oOOoO8',
        r'Z',
      );
  /// from: `public boolean oo0oOOoO8`
bool get oo0oOOoO8 => _id_oo0oOOoO8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo0oOOoO8`
set oo0oOOoO8(bool value) => _id_oo0oOOoO8.set(this, const _$jni.jbooleanType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory ImageParamsBuilder() {
    
    return ImageParamsBuilder.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_setCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'setCacheWorkThumbnailRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setCacheWorkThumbnailRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setCacheWorkThumbnailRootPath(_$jni.JString string, ){
    
    return _setCacheWorkThumbnailRootPath(reference.pointer, _id_setCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'getCacheWorkThumbnailRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheWorkThumbnailRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheWorkThumbnailRootPath(){
    
    return _getCacheWorkThumbnailRootPath(reference.pointer, _id_getCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setStabilizerCacheRootPath = _class.instanceMethodId(
    r'setStabilizerCacheRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setStabilizerCacheRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setStabilizerCacheRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setStabilizerCacheRootPath(_$jni.JString string, ){
    
    return _setStabilizerCacheRootPath(reference.pointer, _id_setStabilizerCacheRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getStabilizerCacheRootPath = _class.instanceMethodId(
    r'getStabilizerCacheRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getStabilizerCacheRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getStabilizerCacheRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getStabilizerCacheRootPath(){
    
    return _getStabilizerCacheRootPath(reference.pointer, _id_getStabilizerCacheRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheCutSceneRootPath = _class.instanceMethodId(
    r'setCacheCutSceneRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setCacheCutSceneRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setCacheCutSceneRootPath(_$jni.JString string, ){
    
    return _setCacheCutSceneRootPath(reference.pointer, _id_setCacheCutSceneRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getCacheCutSceneRootPath = _class.instanceMethodId(
    r'getCacheCutSceneRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheCutSceneRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheCutSceneRootPath(){
    
    return _getCacheCutSceneRootPath(reference.pointer, _id_getCacheCutSceneRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheTemplateBlenderRootPath = _class.instanceMethodId(
    r'setCacheTemplateBlenderRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setCacheTemplateBlenderRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setCacheTemplateBlenderRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setCacheTemplateBlenderRootPath(_$jni.JString string, ){
    
    return _setCacheTemplateBlenderRootPath(reference.pointer, _id_setCacheTemplateBlenderRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getCacheTemplateBlenderRootPath = _class.instanceMethodId(
    r'getCacheTemplateBlenderRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheTemplateBlenderRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheTemplateBlenderRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheTemplateBlenderRootPath(){
    
    return _getCacheTemplateBlenderRootPath(reference.pointer, _id_getCacheTemplateBlenderRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setUrlForPlay = _class.instanceMethodId(
    r'setUrlForPlay',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setUrlForPlay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setUrlForPlay(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setUrlForPlay(_$jni.JString string, ){
    
    return _setUrlForPlay(reference.pointer, _id_setUrlForPlay as _$jni.JMethodIDPtr, string.reference.pointer).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getUrlForPlay = _class.instanceMethodId(
    r'getUrlForPlay',
    r'()Ljava/lang/String;',
  );

  static final _getUrlForPlay = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getUrlForPlay()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getUrlForPlay(){
    
    return _getUrlForPlay(reference.pointer, _id_getUrlForPlay as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setDynamicStitch = _class.instanceMethodId(
    r'setDynamicStitch',
    r'(Z)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setDynamicStitch(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setDynamicStitch(bool z, ){
    
    return _setDynamicStitch(reference.pointer, _id_setDynamicStitch as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ImageParamsBuilder$Type());
  }

  static final _id_isDynamicStitch = _class.instanceMethodId(
    r'isDynamicStitch',
    r'()Z',
  );

  static final _isDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isDynamicStitch()`
  bool isDynamicStitch(){
    
    return _isDynamicStitch(reference.pointer, _id_isDynamicStitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setImageFusion = _class.instanceMethodId(
    r'setImageFusion',
    r'(Z)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setImageFusion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setImageFusion(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setImageFusion(bool z, ){
    
    return _setImageFusion(reference.pointer, _id_setImageFusion as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ImageParamsBuilder$Type());
  }

  static final _id_isImageFusion = _class.instanceMethodId(
    r'isImageFusion',
    r'()Z',
  );

  static final _isImageFusion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isImageFusion()`
  bool isImageFusion(){
    
    return _isImageFusion(reference.pointer, _id_isImageFusion as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStabEnabled = _class.instanceMethodId(
    r'setStabEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setStabEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setStabEnabled(bool z, ){
    
    return _setStabEnabled(reference.pointer, _id_setStabEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ImageParamsBuilder$Type());
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setScreenRatio = _class.instanceMethodId(
    r'setScreenRatio',
    r'(II)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setScreenRatio(int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setScreenRatio(int i, int i1, ){
    
    return _setScreenRatio(reference.pointer, _id_setScreenRatio as _$jni.JMethodIDPtr, i, i1).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getScreenRatio = _class.instanceMethodId(
    r'getScreenRatio',
    r'()[I',
  );

  static final _getScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int[] getScreenRatio()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.jint> getScreenRatio(){
    
    return _getScreenRatio(reference.pointer, _id_getScreenRatio as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.jintType()));
  }

  static final _id_setRenderModelType = _class.instanceMethodId(
    r'setRenderModelType',
    r'(I)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setRenderModelType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setRenderModelType(int i, ){
    
    return _setRenderModelType(reference.pointer, _id_setRenderModelType as _$jni.JMethodIDPtr, i).object(const $ImageParamsBuilder$Type());
  }

  static final _id_getRenderModelType = _class.instanceMethodId(
    r'getRenderModelType',
    r'()I',
  );

  static final _getRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getRenderModelType()`
  int getRenderModelType(){
    
    return _getRenderModelType(reference.pointer, _id_getRenderModelType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setGestureEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setGestureEnabled(bool z, ){
    
    return _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ImageParamsBuilder$Type());
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setWithSwitchingAnimation = _class.instanceMethodId(
    r'setWithSwitchingAnimation',
    r'(Z)Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;',
  );

  static final _setWithSwitchingAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.image.ImageParamsBuilder setWithSwitchingAnimation(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  ImageParamsBuilder setWithSwitchingAnimation(bool z, ){
    
    return _setWithSwitchingAnimation(reference.pointer, _id_setWithSwitchingAnimation as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $ImageParamsBuilder$Type());
  }

  static final _id_isWithSwitchingAnimation = _class.instanceMethodId(
    r'isWithSwitchingAnimation',
    r'()Z',
  );

  static final _isWithSwitchingAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isWithSwitchingAnimation()`
  bool isWithSwitchingAnimation(){
    
    return _isWithSwitchingAnimation(reference.pointer, _id_isWithSwitchingAnimation as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $ImageParamsBuilder$Type extends _$jni.JObjType<ImageParamsBuilder> {
  

  @_$jni.internal
  const $ImageParamsBuilder$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;';

  @_$jni.internal
  @_$core.override
  ImageParamsBuilder fromReference(_$jni.JReference reference) => ImageParamsBuilder.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($ImageParamsBuilder$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($ImageParamsBuilder$Type) &&
        other is $ImageParamsBuilder$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.image.InstaImagePlayerView`
class InstaImagePlayerView extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<InstaImagePlayerView> $type;

  

  @_$jni.internal
  InstaImagePlayerView.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/image/InstaImagePlayerView');

      /// The type which includes information such as the signature of this class.
static const type = $InstaImagePlayerView$Type();
  static final _id_O8ooO8o88 =
      _class.staticFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/log/MediaLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basemedia.log.MediaLogger O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(_class, const _$jni.JObjectType());

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oOoo => _id_oOoo.get(this, const _$jni.JObjectType());

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oO8 => _id_oO8.get(this, const _$jni.JObjectType());

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JObjectType());

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Lcom/arashivision/insta360/basemedia/ui/player/image/ImagePlayerView;',
      );
  /// from: `public com.arashivision.insta360.basemedia.ui.player.image.ImagePlayerView ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get ooO => _id_ooO.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.ui.player.image.ImagePlayerView ooO`
  /// The returned object must be released after use, by calling the [release] method.
set ooO(_$jni.JObject value) => _id_ooO.set(this, const _$jni.JObjectType(), value);

  static final _id_new$ = _class.constructorId(
    r'(Landroid/content/Context;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaImagePlayerView(_$jni.JObject context, ) {
    
    return InstaImagePlayerView.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, context.reference.pointer).reference
    );
  }

  static final _id_new$1 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;)V',
  );

  static final _new$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaImagePlayerView.new$1(_$jni.JObject context, _$jni.JObject attributeSet, ) {
    
    return InstaImagePlayerView.fromReference(
      
      _new$1(_class.reference.pointer, _id_new$1 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer).reference
    );
  }

  static final _id_new$2 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;I)V',
  );

  static final _new$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaImagePlayerView.new$2(_$jni.JObject context, _$jni.JObject attributeSet, int i, ) {
    
    return InstaImagePlayerView.fromReference(
      
      _new$2(_class.reference.pointer, _id_new$2 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i).reference
    );
  }

  static final _id_new$3 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;II)V',
  );

  static final _new$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaImagePlayerView.new$3(_$jni.JObject context, _$jni.JObject attributeSet, int i, int i1, ) {
    
    return InstaImagePlayerView.fromReference(
      
      _new$3(_class.reference.pointer, _id_new$3 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i, i1).reference
    );
  }



  static final _id_O8ooO8o88$1 = _class.instanceMethodId(
    r'O8ooO8o88',
    r'(Landroid/content/Context;)V',
  );

  static final _O8ooO8o88$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void O8ooO8o88(android.content.Context context)`
  void O8ooO8o88$1(_$jni.JObject context, ){
    
    _O8ooO8o88$1(reference.pointer, _id_O8ooO8o88$1 as _$jni.JMethodIDPtr, context.reference.pointer).check();
  }

  static final _id_setLifecycle = _class.instanceMethodId(
    r'setLifecycle',
    r'(Landroid/arch/lifecycle/Lifecycle;)V',
  );

  static final _setLifecycle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLifecycle(android.arch.lifecycle.Lifecycle lifecycle)`
  void setLifecycle(_$jni.JObject lifecycle, ){
    
    _setLifecycle(reference.pointer, _id_setLifecycle as _$jni.JMethodIDPtr, lifecycle.reference.pointer).check();
  }

  static final _id_prepare = _class.instanceMethodId(
    r'prepare',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;)V',
  );

  static final _prepare = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void prepare(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, com.arashivision.sdkmedia.player.image.ImageParamsBuilder imageParamsBuilder)`
  void prepare(WorkWrapper workWrapper, ImageParamsBuilder imageParamsBuilder, ){
    
    _prepare(reference.pointer, _id_prepare as _$jni.JMethodIDPtr, workWrapper.reference.pointer, imageParamsBuilder.reference.pointer).check();
  }

  static final _id_play = _class.instanceMethodId(
    r'play',
    r'()V',
  );

  static final _play = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void play()`
  void play(){
    
    _play(reference.pointer, _id_play as _$jni.JMethodIDPtr).check();
  }

  static final _id_isLoading = _class.instanceMethodId(
    r'isLoading',
    r'()Z',
  );

  static final _isLoading = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLoading()`
  bool isLoading(){
    
    return _isLoading(reference.pointer, _id_isLoading as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_switchNormalMode = _class.instanceMethodId(
    r'switchNormalMode',
    r'()V',
  );

  static final _switchNormalMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchNormalMode()`
  void switchNormalMode(){
    
    _switchNormalMode(reference.pointer, _id_switchNormalMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchFisheyeMode = _class.instanceMethodId(
    r'switchFisheyeMode',
    r'()V',
  );

  static final _switchFisheyeMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchFisheyeMode()`
  void switchFisheyeMode(){
    
    _switchFisheyeMode(reference.pointer, _id_switchFisheyeMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchPerspectiveMode = _class.instanceMethodId(
    r'switchPerspectiveMode',
    r'()V',
  );

  static final _switchPerspectiveMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchPerspectiveMode()`
  void switchPerspectiveMode(){
    
    _switchPerspectiveMode(reference.pointer, _id_switchPerspectiveMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_setConstraint = _class.instanceMethodId(
    r'setConstraint',
    r'(FFFFFF)V',
  );

  static final _setConstraint = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(float f, float f1, float f2, float f3, float f4, float f5)`
  void setConstraint(double f, double f1, double f2, double f3, double f4, double f5, ){
    
    _setConstraint(reference.pointer, _id_setConstraint as _$jni.JMethodIDPtr, f, f1, f2, f3, f4, f5).check();
  }

  static final _id_setConstraint$1 = _class.instanceMethodId(
    r'setConstraint',
    r'(Ljava/lang/String;IIFFFFFFF)V',
  );

  static final _setConstraint$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, double, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(java.lang.String string, int i, int i1, float f, float f1, float f2, float f3, float f4, float f5, float f6)`
  void setConstraint$1(_$jni.JString string, int i, int i1, double f, double f1, double f2, double f3, double f4, double f5, double f6, ){
    
    _setConstraint$1(reference.pointer, _id_setConstraint$1 as _$jni.JMethodIDPtr, string.reference.pointer, i, i1, f, f1, f2, f3, f4, f5, f6).check();
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)V',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureEnabled(boolean z)`
  void setGestureEnabled(bool z, ){
    
    _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureHorizontalEnabled = _class.instanceMethodId(
    r'isGestureHorizontalEnabled',
    r'()Z',
  );

  static final _isGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureHorizontalEnabled()`
  bool isGestureHorizontalEnabled(){
    
    return _isGestureHorizontalEnabled(reference.pointer, _id_isGestureHorizontalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureHorizontalEnabled = _class.instanceMethodId(
    r'setGestureHorizontalEnabled',
    r'(Z)V',
  );

  static final _setGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureHorizontalEnabled(boolean z)`
  void setGestureHorizontalEnabled(bool z, ){
    
    _setGestureHorizontalEnabled(reference.pointer, _id_setGestureHorizontalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureVerticalEnabled = _class.instanceMethodId(
    r'isGestureVerticalEnabled',
    r'()Z',
  );

  static final _isGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureVerticalEnabled()`
  bool isGestureVerticalEnabled(){
    
    return _isGestureVerticalEnabled(reference.pointer, _id_isGestureVerticalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureVerticalEnabled = _class.instanceMethodId(
    r'setGestureVerticalEnabled',
    r'(Z)V',
  );

  static final _setGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureVerticalEnabled(boolean z)`
  void setGestureVerticalEnabled(bool z, ){
    
    _setGestureVerticalEnabled(reference.pointer, _id_setGestureVerticalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureZoomEnabled = _class.instanceMethodId(
    r'isGestureZoomEnabled',
    r'()Z',
  );

  static final _isGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureZoomEnabled()`
  bool isGestureZoomEnabled(){
    
    return _isGestureZoomEnabled(reference.pointer, _id_isGestureZoomEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureZoomEnabled = _class.instanceMethodId(
    r'setGestureZoomEnabled',
    r'(Z)V',
  );

  static final _setGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureZoomEnabled(boolean z)`
  void setGestureZoomEnabled(bool z, ){
    
    _setGestureZoomEnabled(reference.pointer, _id_setGestureZoomEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getFov = _class.instanceMethodId(
    r'getFov',
    r'()F',
  );

  static final _getFov = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFov()`
  double getFov(){
    
    return _getFov(reference.pointer, _id_getFov as _$jni.JMethodIDPtr).float;
  }

  static final _id_getDistance = _class.instanceMethodId(
    r'getDistance',
    r'()F',
  );

  static final _getDistance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getDistance()`
  double getDistance(){
    
    return _getDistance(reference.pointer, _id_getDistance as _$jni.JMethodIDPtr).float;
  }

  static final _id_getYaw = _class.instanceMethodId(
    r'getYaw',
    r'()F',
  );

  static final _getYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getYaw()`
  double getYaw(){
    
    return _getYaw(reference.pointer, _id_getYaw as _$jni.JMethodIDPtr).float;
  }

  static final _id_getPitch = _class.instanceMethodId(
    r'getPitch',
    r'()F',
  );

  static final _getPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getPitch()`
  double getPitch(){
    
    return _getPitch(reference.pointer, _id_getPitch as _$jni.JMethodIDPtr).float;
  }

  static final _id_getRoll = _class.instanceMethodId(
    r'getRoll',
    r'()F',
  );

  static final _getRoll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getRoll()`
  double getRoll(){
    
    return _getRoll(reference.pointer, _id_getRoll as _$jni.JMethodIDPtr).float;
  }

  static final _id_destroy = _class.instanceMethodId(
    r'destroy',
    r'()V',
  );

  static final _destroy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void destroy()`
  void destroy(){
    
    _destroy(reference.pointer, _id_destroy as _$jni.JMethodIDPtr).check();
  }

  static final _id_setPlayerViewListener = _class.instanceMethodId(
    r'setPlayerViewListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerViewListener;)V',
  );

  static final _setPlayerViewListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPlayerViewListener(com.arashivision.sdkmedia.player.listener.PlayerViewListener playerViewListener)`
  void setPlayerViewListener(PlayerViewListener playerViewListener, ){
    
    _setPlayerViewListener(reference.pointer, _id_setPlayerViewListener as _$jni.JMethodIDPtr, playerViewListener.reference.pointer).check();
  }

  static final _id_setGestureListener = _class.instanceMethodId(
    r'setGestureListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerGestureListener;)V',
  );

  static final _setGestureListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGestureListener(com.arashivision.sdkmedia.player.listener.PlayerGestureListener playerGestureListener)`
  void setGestureListener(PlayerGestureListener playerGestureListener, ){
    
    _setGestureListener(reference.pointer, _id_setGestureListener as _$jni.JMethodIDPtr, playerGestureListener.reference.pointer).check();
  }

  static final _id_O8ooO8o88$2 = _class.instanceMethodId(
    r'O8ooO8o88',
    r'(Lcom/arashivision/sdkmedia/player/image/ImageParamsBuilder;)Lcom/arashivision/insta360/basemedia/ui/player/image/IPlayImageParams;',
  );

  static final _O8ooO8o88$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final com.arashivision.insta360.basemedia.ui.player.image.IPlayImageParams O8ooO8o88(com.arashivision.sdkmedia.player.image.ImageParamsBuilder imageParamsBuilder)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject O8ooO8o88$2(ImageParamsBuilder imageParamsBuilder, ){
    
    return _O8ooO8o88$2(reference.pointer, _id_O8ooO8o88$2 as _$jni.JMethodIDPtr, imageParamsBuilder.reference.pointer).object(const _$jni.JObjectType());
  }

}
final class $InstaImagePlayerView$Type extends _$jni.JObjType<InstaImagePlayerView> {
  

  @_$jni.internal
  const $InstaImagePlayerView$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/image/InstaImagePlayerView;';

  @_$jni.internal
  @_$core.override
  InstaImagePlayerView fromReference(_$jni.JReference reference) => InstaImagePlayerView.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($InstaImagePlayerView$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($InstaImagePlayerView$Type) &&
        other is $InstaImagePlayerView$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.listener.PlayerGestureListener`
class PlayerGestureListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<PlayerGestureListener> $type;

  

  @_$jni.internal
  PlayerGestureListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/listener/PlayerGestureListener');

      /// The type which includes information such as the signature of this class.
static const type = $PlayerGestureListener$Type();
  static final _id_onDown = _class.instanceMethodId(
    r'onDown',
    r'(Landroid/view/MotionEvent;)Z',
  );

  static final _onDown = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public boolean onDown(android.view.MotionEvent motionEvent)`
  bool onDown(_$jni.JObject motionEvent, ){
    
    return _onDown(reference.pointer, _id_onDown as _$jni.JMethodIDPtr, motionEvent.reference.pointer).boolean;
  }

  static final _id_onTap = _class.instanceMethodId(
    r'onTap',
    r'(Landroid/view/MotionEvent;)Z',
  );

  static final _onTap = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public boolean onTap(android.view.MotionEvent motionEvent)`
  bool onTap(_$jni.JObject motionEvent, ){
    
    return _onTap(reference.pointer, _id_onTap as _$jni.JMethodIDPtr, motionEvent.reference.pointer).boolean;
  }

  static final _id_onUp = _class.instanceMethodId(
    r'onUp',
    r'()V',
  );

  static final _onUp = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onUp()`
  void onUp(){
    
    _onUp(reference.pointer, _id_onUp as _$jni.JMethodIDPtr).check();
  }

  static final _id_onLongPress = _class.instanceMethodId(
    r'onLongPress',
    r'(Landroid/view/MotionEvent;)V',
  );

  static final _onLongPress = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void onLongPress(android.view.MotionEvent motionEvent)`
  void onLongPress(_$jni.JObject motionEvent, ){
    
    _onLongPress(reference.pointer, _id_onLongPress as _$jni.JMethodIDPtr, motionEvent.reference.pointer).check();
  }

  static final _id_onZoom = _class.instanceMethodId(
    r'onZoom',
    r'()V',
  );

  static final _onZoom = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onZoom()`
  void onZoom(){
    
    _onZoom(reference.pointer, _id_onZoom as _$jni.JMethodIDPtr).check();
  }

  static final _id_onZoomAnimation = _class.instanceMethodId(
    r'onZoomAnimation',
    r'()V',
  );

  static final _onZoomAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onZoomAnimation()`
  void onZoomAnimation(){
    
    _onZoomAnimation(reference.pointer, _id_onZoomAnimation as _$jni.JMethodIDPtr).check();
  }

  static final _id_onZoomAnimationEnd = _class.instanceMethodId(
    r'onZoomAnimationEnd',
    r'()V',
  );

  static final _onZoomAnimationEnd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onZoomAnimationEnd()`
  void onZoomAnimationEnd(){
    
    _onZoomAnimationEnd(reference.pointer, _id_onZoomAnimationEnd as _$jni.JMethodIDPtr).check();
  }

  static final _id_onScroll = _class.instanceMethodId(
    r'onScroll',
    r'()V',
  );

  static final _onScroll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onScroll()`
  void onScroll(){
    
    _onScroll(reference.pointer, _id_onScroll as _$jni.JMethodIDPtr).check();
  }

  static final _id_onFlingAnimation = _class.instanceMethodId(
    r'onFlingAnimation',
    r'()V',
  );

  static final _onFlingAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onFlingAnimation()`
  void onFlingAnimation(){
    
    _onFlingAnimation(reference.pointer, _id_onFlingAnimation as _$jni.JMethodIDPtr).check();
  }

  static final _id_onFlingAnimationEnd = _class.instanceMethodId(
    r'onFlingAnimationEnd',
    r'()V',
  );

  static final _onFlingAnimationEnd = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onFlingAnimationEnd()`
  void onFlingAnimationEnd(){
    
    _onFlingAnimationEnd(reference.pointer, _id_onFlingAnimationEnd as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $PlayerGestureListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onDown(Landroid/view/MotionEvent;)Z') {
          final $r = _$impls[$p]!.onDown(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'onTap(Landroid/view/MotionEvent;)Z') {
          final $r = _$impls[$p]!.onTap(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.JBoolean($r).reference.toPointer();
        }
        if ($d == r'onUp()V') {
          _$impls[$p]!.onUp(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onLongPress(Landroid/view/MotionEvent;)V') {
          _$impls[$p]!.onLongPress(
$a[0].as(const _$jni.JObjectType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onZoom()V') {
          _$impls[$p]!.onZoom(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onZoomAnimation()V') {
          _$impls[$p]!.onZoomAnimation(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onZoomAnimationEnd()V') {
          _$impls[$p]!.onZoomAnimationEnd(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onScroll()V') {
          _$impls[$p]!.onScroll(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFlingAnimation()V') {
          _$impls[$p]!.onFlingAnimation(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFlingAnimationEnd()V') {
          _$impls[$p]!.onFlingAnimationEnd(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $PlayerGestureListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.sdkmedia.player.listener.PlayerGestureListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onUp$async) r'onUp()V',
        if ($impl.onLongPress$async) r'onLongPress(Landroid/view/MotionEvent;)V',
        if ($impl.onZoom$async) r'onZoom()V',
        if ($impl.onZoomAnimation$async) r'onZoomAnimation()V',
        if ($impl.onZoomAnimationEnd$async) r'onZoomAnimationEnd()V',
        if ($impl.onScroll$async) r'onScroll()V',
        if ($impl.onFlingAnimation$async) r'onFlingAnimation()V',
        if ($impl.onFlingAnimationEnd$async) r'onFlingAnimationEnd()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory PlayerGestureListener.implement(
    $PlayerGestureListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return PlayerGestureListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $PlayerGestureListener {
  factory $PlayerGestureListener(
    {required bool Function(_$jni.JObject motionEvent) onDown,
    required bool Function(_$jni.JObject motionEvent) onTap,
    required void Function() onUp, bool onUp$async,
    required void Function(_$jni.JObject motionEvent) onLongPress, bool onLongPress$async,
    required void Function() onZoom, bool onZoom$async,
    required void Function() onZoomAnimation, bool onZoomAnimation$async,
    required void Function() onZoomAnimationEnd, bool onZoomAnimationEnd$async,
    required void Function() onScroll, bool onScroll$async,
    required void Function() onFlingAnimation, bool onFlingAnimation$async,
    required void Function() onFlingAnimationEnd, bool onFlingAnimationEnd$async,}
  ) = _$PlayerGestureListener;

  

  bool onDown(_$jni.JObject motionEvent);
  bool onTap(_$jni.JObject motionEvent);
  void onUp();
  bool get onUp$async => false;
  void onLongPress(_$jni.JObject motionEvent);
  bool get onLongPress$async => false;
  void onZoom();
  bool get onZoom$async => false;
  void onZoomAnimation();
  bool get onZoomAnimation$async => false;
  void onZoomAnimationEnd();
  bool get onZoomAnimationEnd$async => false;
  void onScroll();
  bool get onScroll$async => false;
  void onFlingAnimation();
  bool get onFlingAnimation$async => false;
  void onFlingAnimationEnd();
  bool get onFlingAnimationEnd$async => false;
}

final class _$PlayerGestureListener with $PlayerGestureListener {
  _$PlayerGestureListener(
    {required bool Function(_$jni.JObject motionEvent) onDown,
    required bool Function(_$jni.JObject motionEvent) onTap,
    required void Function() onUp, this.onUp$async = false,
    required void Function(_$jni.JObject motionEvent) onLongPress, this.onLongPress$async = false,
    required void Function() onZoom, this.onZoom$async = false,
    required void Function() onZoomAnimation, this.onZoomAnimation$async = false,
    required void Function() onZoomAnimationEnd, this.onZoomAnimationEnd$async = false,
    required void Function() onScroll, this.onScroll$async = false,
    required void Function() onFlingAnimation, this.onFlingAnimation$async = false,
    required void Function() onFlingAnimationEnd, this.onFlingAnimationEnd$async = false,}
  ) :  _onDown = onDown, _onTap = onTap, _onUp = onUp, _onLongPress = onLongPress, _onZoom = onZoom, _onZoomAnimation = onZoomAnimation, _onZoomAnimationEnd = onZoomAnimationEnd, _onScroll = onScroll, _onFlingAnimation = onFlingAnimation, _onFlingAnimationEnd = onFlingAnimationEnd;

  

  final bool Function(_$jni.JObject motionEvent) _onDown;
  final bool Function(_$jni.JObject motionEvent) _onTap;
  final void Function() _onUp;
  final bool onUp$async;
  final void Function(_$jni.JObject motionEvent) _onLongPress;
  final bool onLongPress$async;
  final void Function() _onZoom;
  final bool onZoom$async;
  final void Function() _onZoomAnimation;
  final bool onZoomAnimation$async;
  final void Function() _onZoomAnimationEnd;
  final bool onZoomAnimationEnd$async;
  final void Function() _onScroll;
  final bool onScroll$async;
  final void Function() _onFlingAnimation;
  final bool onFlingAnimation$async;
  final void Function() _onFlingAnimationEnd;
  final bool onFlingAnimationEnd$async;

  bool onDown(_$jni.JObject motionEvent) {
    return _onDown(motionEvent);
  }  bool onTap(_$jni.JObject motionEvent) {
    return _onTap(motionEvent);
  }  void onUp() {
    return _onUp();
  }  void onLongPress(_$jni.JObject motionEvent) {
    return _onLongPress(motionEvent);
  }  void onZoom() {
    return _onZoom();
  }  void onZoomAnimation() {
    return _onZoomAnimation();
  }  void onZoomAnimationEnd() {
    return _onZoomAnimationEnd();
  }  void onScroll() {
    return _onScroll();
  }  void onFlingAnimation() {
    return _onFlingAnimation();
  }  void onFlingAnimationEnd() {
    return _onFlingAnimationEnd();
  }}
final class $PlayerGestureListener$Type extends _$jni.JObjType<PlayerGestureListener> {
  

  @_$jni.internal
  const $PlayerGestureListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/listener/PlayerGestureListener;';

  @_$jni.internal
  @_$core.override
  PlayerGestureListener fromReference(_$jni.JReference reference) => PlayerGestureListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($PlayerGestureListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($PlayerGestureListener$Type) &&
        other is $PlayerGestureListener$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.listener.PlayerViewListener`
class PlayerViewListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<PlayerViewListener> $type;

  

  @_$jni.internal
  PlayerViewListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/listener/PlayerViewListener');

      /// The type which includes information such as the signature of this class.
static const type = $PlayerViewListener$Type();
  static final _id_onLoadingStatusChanged = _class.instanceMethodId(
    r'onLoadingStatusChanged',
    r'(Z)V',
  );

  static final _onLoadingStatusChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void onLoadingStatusChanged(boolean z)`
  void onLoadingStatusChanged(bool z, ){
    
    _onLoadingStatusChanged(reference.pointer, _id_onLoadingStatusChanged as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_onLoadingFinish = _class.instanceMethodId(
    r'onLoadingFinish',
    r'()V',
  );

  static final _onLoadingFinish = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onLoadingFinish()`
  void onLoadingFinish(){
    
    _onLoadingFinish(reference.pointer, _id_onLoadingFinish as _$jni.JMethodIDPtr).check();
  }

  static final _id_onFail = _class.instanceMethodId(
    r'onFail',
    r'(ILjava/lang/String;)V',
  );

  static final _onFail = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void onFail(int i, java.lang.String string)`
  void onFail(int i, _$jni.JString string, ){
    
    _onFail(reference.pointer, _id_onFail as _$jni.JMethodIDPtr, i, string.reference.pointer).check();
  }

  static final _id_onReleaseCameraPipeline = _class.instanceMethodId(
    r'onReleaseCameraPipeline',
    r'()V',
  );

  static final _onReleaseCameraPipeline = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onReleaseCameraPipeline()`
  void onReleaseCameraPipeline(){
    
    _onReleaseCameraPipeline(reference.pointer, _id_onReleaseCameraPipeline as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $PlayerViewListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onLoadingStatusChanged(Z)V') {
          _$impls[$p]!.onLoadingStatusChanged(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onLoadingFinish()V') {
          _$impls[$p]!.onLoadingFinish(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onFail(ILjava/lang/String;)V') {
          _$impls[$p]!.onFail(
$a[0].as(const _$jni.JIntegerType(), releaseOriginal: true).intValue(releaseOriginal: true),
$a[1].as(const _$jni.JStringType(), releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onReleaseCameraPipeline()V') {
          _$impls[$p]!.onReleaseCameraPipeline(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $PlayerViewListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.sdkmedia.player.listener.PlayerViewListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onLoadingStatusChanged$async) r'onLoadingStatusChanged(Z)V',
        if ($impl.onLoadingFinish$async) r'onLoadingFinish()V',
        if ($impl.onFail$async) r'onFail(ILjava/lang/String;)V',
        if ($impl.onReleaseCameraPipeline$async) r'onReleaseCameraPipeline()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory PlayerViewListener.implement(
    $PlayerViewListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return PlayerViewListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $PlayerViewListener {
  factory $PlayerViewListener(
    {required void Function(bool z) onLoadingStatusChanged, bool onLoadingStatusChanged$async,
    required void Function() onLoadingFinish, bool onLoadingFinish$async,
    required void Function(int i, _$jni.JString string) onFail, bool onFail$async,
    required void Function() onReleaseCameraPipeline, bool onReleaseCameraPipeline$async,}
  ) = _$PlayerViewListener;

  

  void onLoadingStatusChanged(bool z);
  bool get onLoadingStatusChanged$async => false;
  void onLoadingFinish();
  bool get onLoadingFinish$async => false;
  void onFail(int i, _$jni.JString string);
  bool get onFail$async => false;
  void onReleaseCameraPipeline();
  bool get onReleaseCameraPipeline$async => false;
}

final class _$PlayerViewListener with $PlayerViewListener {
  _$PlayerViewListener(
    {required void Function(bool z) onLoadingStatusChanged, this.onLoadingStatusChanged$async = false,
    required void Function() onLoadingFinish, this.onLoadingFinish$async = false,
    required void Function(int i, _$jni.JString string) onFail, this.onFail$async = false,
    required void Function() onReleaseCameraPipeline, this.onReleaseCameraPipeline$async = false,}
  ) :  _onLoadingStatusChanged = onLoadingStatusChanged, _onLoadingFinish = onLoadingFinish, _onFail = onFail, _onReleaseCameraPipeline = onReleaseCameraPipeline;

  

  final void Function(bool z) _onLoadingStatusChanged;
  final bool onLoadingStatusChanged$async;
  final void Function() _onLoadingFinish;
  final bool onLoadingFinish$async;
  final void Function(int i, _$jni.JString string) _onFail;
  final bool onFail$async;
  final void Function() _onReleaseCameraPipeline;
  final bool onReleaseCameraPipeline$async;

  void onLoadingStatusChanged(bool z) {
    return _onLoadingStatusChanged(z);
  }  void onLoadingFinish() {
    return _onLoadingFinish();
  }  void onFail(int i, _$jni.JString string) {
    return _onFail(i, string);
  }  void onReleaseCameraPipeline() {
    return _onReleaseCameraPipeline();
  }}
final class $PlayerViewListener$Type extends _$jni.JObjType<PlayerViewListener> {
  

  @_$jni.internal
  const $PlayerViewListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/listener/PlayerViewListener;';

  @_$jni.internal
  @_$core.override
  PlayerViewListener fromReference(_$jni.JReference reference) => PlayerViewListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($PlayerViewListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($PlayerViewListener$Type) &&
        other is $PlayerViewListener$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.listener.VideoStatusListener`
class VideoStatusListener extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<VideoStatusListener> $type;

  

  @_$jni.internal
  VideoStatusListener.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/listener/VideoStatusListener');

      /// The type which includes information such as the signature of this class.
static const type = $VideoStatusListener$Type();
  static final _id_onProgressChanged = _class.instanceMethodId(
    r'onProgressChanged',
    r'(JJ)V',
  );

  static final _onProgressChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64, _$jni.Int64)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public void onProgressChanged(long j, long j1)`
  void onProgressChanged(int j, int j1, ){
    
    _onProgressChanged(reference.pointer, _id_onProgressChanged as _$jni.JMethodIDPtr, j, j1).check();
  }

  static final _id_onPlayStateChanged = _class.instanceMethodId(
    r'onPlayStateChanged',
    r'(Z)V',
  );

  static final _onPlayStateChanged = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void onPlayStateChanged(boolean z)`
  void onPlayStateChanged(bool z, ){
    
    _onPlayStateChanged(reference.pointer, _id_onPlayStateChanged as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_onSeekComplete = _class.instanceMethodId(
    r'onSeekComplete',
    r'()V',
  );

  static final _onSeekComplete = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onSeekComplete()`
  void onSeekComplete(){
    
    _onSeekComplete(reference.pointer, _id_onSeekComplete as _$jni.JMethodIDPtr).check();
  }

  static final _id_onCompletion = _class.instanceMethodId(
    r'onCompletion',
    r'()V',
  );

  static final _onCompletion = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void onCompletion()`
  void onCompletion(){
    
    _onCompletion(reference.pointer, _id_onCompletion as _$jni.JMethodIDPtr).check();
  }

  /// Maps a specific port to the implemented interface.
  static final _$core.Map<int, $VideoStatusListener> _$impls = {};
  static _$jni.JObjectPtr _$invoke(
    int port,
    _$jni.JObjectPtr descriptor,
    _$jni.JObjectPtr args,
  ) {
    return _$invokeMethod(
      port,
      _$jni.MethodInvocation.fromAddresses(
        0,
        descriptor.address,
        args.address,
      ),
    );
  }

  static final _$jni.Pointer<
          _$jni.NativeFunction<
              _$jni.JObjectPtr Function(
                  _$jni.Int64, _$jni.JObjectPtr, _$jni.JObjectPtr)>>
      _$invokePointer = _$jni.Pointer.fromFunction(_$invoke);

  static _$jni.Pointer<_$jni.Void> _$invokeMethod(
    int $p,
    _$jni.MethodInvocation $i,
  ) {
    try {
      final $d = $i.methodDescriptor.toDartString(releaseOriginal: true);
      final $a = $i.args;
            if ($d == r'onProgressChanged(JJ)V') {
          _$impls[$p]!.onProgressChanged(
$a[0].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
$a[1].as(const _$jni.JLongType(), releaseOriginal: true).longValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onPlayStateChanged(Z)V') {
          _$impls[$p]!.onPlayStateChanged(
$a[0].as(const _$jni.JBooleanType(), releaseOriginal: true).booleanValue(releaseOriginal: true),
          );
          return _$jni.nullptr;
        }
        if ($d == r'onSeekComplete()V') {
          _$impls[$p]!.onSeekComplete(
          );
          return _$jni.nullptr;
        }
        if ($d == r'onCompletion()V') {
          _$impls[$p]!.onCompletion(
          );
          return _$jni.nullptr;
        }
    } catch (e) {
      return _$jni.ProtectedJniExtensions.newDartException(e);
    }
    return _$jni.nullptr;
  }

  static void implementIn(
    _$jni.JImplementer implementer,
    $VideoStatusListener $impl,
  ) {
    late final _$jni.RawReceivePort $p;
    $p = _$jni.RawReceivePort(($m) {
      if ($m == null) {
        _$impls.remove($p.sendPort.nativePort);
        $p.close();
        return;
      }
      final $i = _$jni.MethodInvocation.fromMessage($m);
      final $r = _$invokeMethod($p.sendPort.nativePort, $i);
      _$jni.ProtectedJniExtensions.returnResult($i.result, $r);
    });
    implementer.add(
      r'com.arashivision.sdkmedia.player.listener.VideoStatusListener',
      $p,
      _$invokePointer,
      [
        if ($impl.onProgressChanged$async) r'onProgressChanged(JJ)V',
        if ($impl.onPlayStateChanged$async) r'onPlayStateChanged(Z)V',
        if ($impl.onSeekComplete$async) r'onSeekComplete()V',
        if ($impl.onCompletion$async) r'onCompletion()V',
      ],
    );
    final $a = $p.sendPort.nativePort; 
    _$impls[$a] = $impl;
  }

  factory VideoStatusListener.implement(
    $VideoStatusListener $impl,
  ) {
    final $i = _$jni.JImplementer();
    implementIn($i, $impl);
    return VideoStatusListener.fromReference(
      
      $i.implementReference(),
    );
  }
  }
abstract base mixin class $VideoStatusListener {
  factory $VideoStatusListener(
    {required void Function(int j, int j1) onProgressChanged, bool onProgressChanged$async,
    required void Function(bool z) onPlayStateChanged, bool onPlayStateChanged$async,
    required void Function() onSeekComplete, bool onSeekComplete$async,
    required void Function() onCompletion, bool onCompletion$async,}
  ) = _$VideoStatusListener;

  

  void onProgressChanged(int j, int j1);
  bool get onProgressChanged$async => false;
  void onPlayStateChanged(bool z);
  bool get onPlayStateChanged$async => false;
  void onSeekComplete();
  bool get onSeekComplete$async => false;
  void onCompletion();
  bool get onCompletion$async => false;
}

final class _$VideoStatusListener with $VideoStatusListener {
  _$VideoStatusListener(
    {required void Function(int j, int j1) onProgressChanged, this.onProgressChanged$async = false,
    required void Function(bool z) onPlayStateChanged, this.onPlayStateChanged$async = false,
    required void Function() onSeekComplete, this.onSeekComplete$async = false,
    required void Function() onCompletion, this.onCompletion$async = false,}
  ) :  _onProgressChanged = onProgressChanged, _onPlayStateChanged = onPlayStateChanged, _onSeekComplete = onSeekComplete, _onCompletion = onCompletion;

  

  final void Function(int j, int j1) _onProgressChanged;
  final bool onProgressChanged$async;
  final void Function(bool z) _onPlayStateChanged;
  final bool onPlayStateChanged$async;
  final void Function() _onSeekComplete;
  final bool onSeekComplete$async;
  final void Function() _onCompletion;
  final bool onCompletion$async;

  void onProgressChanged(int j, int j1) {
    return _onProgressChanged(j, j1);
  }  void onPlayStateChanged(bool z) {
    return _onPlayStateChanged(z);
  }  void onSeekComplete() {
    return _onSeekComplete();
  }  void onCompletion() {
    return _onCompletion();
  }}
final class $VideoStatusListener$Type extends _$jni.JObjType<VideoStatusListener> {
  

  @_$jni.internal
  const $VideoStatusListener$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/listener/VideoStatusListener;';

  @_$jni.internal
  @_$core.override
  VideoStatusListener fromReference(_$jni.JReference reference) => VideoStatusListener.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($VideoStatusListener$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($VideoStatusListener$Type) &&
        other is $VideoStatusListener$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.video.InstaVideoPlayerView`
class InstaVideoPlayerView extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<InstaVideoPlayerView> $type;

  

  @_$jni.internal
  InstaVideoPlayerView.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/video/InstaVideoPlayerView');

      /// The type which includes information such as the signature of this class.
static const type = $InstaVideoPlayerView$Type();
  static final _id_O8ooO8o88 =
      _class.staticFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/log/MediaLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basemedia.log.MediaLogger O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(_class, const _$jni.JObjectType());

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oOoo => _id_oOoo.get(this, const _$jni.JObjectType());

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oO8 => _id_oO8.get(this, const _$jni.JObjectType());

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Lcom/arashivision/insta360/basemedia/model/viewconstraint/Constraint;',
      );
  /// from: `public final com.arashivision.insta360.basemedia.model.viewconstraint.Constraint oo0oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oo0oo0 => _id_oo0oo0.get(this, const _$jni.JObjectType());

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'Lcom/arashivision/insta360/basemedia/ui/player/video/VideoPlayerView;',
      );
  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.VideoPlayerView ooO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get ooO => _id_ooO.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.VideoPlayerView ooO`
  /// The returned object must be released after use, by calling the [release] method.
set ooO(_$jni.JObject value) => _id_ooO.set(this, const _$jni.JObjectType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'Lcom/arashivision/insta360/basemedia/ui/player/video/IVideoParams;',
      );
  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.IVideoParams Oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get Oo0 => _id_Oo0.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.IVideoParams Oo0`
  /// The returned object must be released after use, by calling the [release] method.
set Oo0(_$jni.JObject value) => _id_Oo0.set(this, const _$jni.JObjectType(), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'Lcom/arashivision/insta360/basemedia/ui/player/video/IPlayVideoParams;',
      );
  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.IPlayVideoParams oO`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get oO => _id_oO.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.ui.player.video.IPlayVideoParams oO`
  /// The returned object must be released after use, by calling the [release] method.
set oO(_$jni.JObject value) => _id_oO.set(this, const _$jni.JObjectType(), value);

  static final _id_new$ = _class.constructorId(
    r'(Landroid/content/Context;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaVideoPlayerView(_$jni.JObject context, ) {
    
    return InstaVideoPlayerView.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, context.reference.pointer).reference
    );
  }

  static final _id_new$1 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;)V',
  );

  static final _new$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaVideoPlayerView.new$1(_$jni.JObject context, _$jni.JObject attributeSet, ) {
    
    return InstaVideoPlayerView.fromReference(
      
      _new$1(_class.reference.pointer, _id_new$1 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer).reference
    );
  }

  static final _id_new$2 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;I)V',
  );

  static final _new$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaVideoPlayerView.new$2(_$jni.JObject context, _$jni.JObject attributeSet, int i, ) {
    
    return InstaVideoPlayerView.fromReference(
      
      _new$2(_class.reference.pointer, _id_new$2 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i).reference
    );
  }

  static final _id_new$3 = _class.constructorId(
    r'(Landroid/content/Context;Landroid/util/AttributeSet;II)V',
  );

  static final _new$3 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, int, int)>();
  /// from: `public void <init>(android.content.Context context, android.util.AttributeSet attributeSet, int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  factory InstaVideoPlayerView.new$3(_$jni.JObject context, _$jni.JObject attributeSet, int i, int i1, ) {
    
    return InstaVideoPlayerView.fromReference(
      
      _new$3(_class.reference.pointer, _id_new$3 as _$jni.JMethodIDPtr, context.reference.pointer, attributeSet.reference.pointer, i, i1).reference
    );
  }



  static final _id_O8ooO8o88$1 = _class.instanceMethodId(
    r'O8ooO8o88',
    r'(Landroid/content/Context;)V',
  );

  static final _O8ooO8o88$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final void O8ooO8o88(android.content.Context context)`
  void O8ooO8o88$1(_$jni.JObject context, ){
    
    _O8ooO8o88$1(reference.pointer, _id_O8ooO8o88$1 as _$jni.JMethodIDPtr, context.reference.pointer).check();
  }

  static final _id_setLifecycle = _class.instanceMethodId(
    r'setLifecycle',
    r'(Landroid/arch/lifecycle/Lifecycle;)V',
  );

  static final _setLifecycle = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setLifecycle(android.arch.lifecycle.Lifecycle lifecycle)`
  void setLifecycle(_$jni.JObject lifecycle, ){
    
    _setLifecycle(reference.pointer, _id_setLifecycle as _$jni.JMethodIDPtr, lifecycle.reference.pointer).check();
  }

  static final _id_prepare = _class.instanceMethodId(
    r'prepare',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;)V',
  );

  static final _prepare = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void prepare(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, com.arashivision.sdkmedia.player.video.VideoParamsBuilder videoParamsBuilder)`
  void prepare(WorkWrapper workWrapper, VideoParamsBuilder videoParamsBuilder, ){
    
    _prepare(reference.pointer, _id_prepare as _$jni.JMethodIDPtr, workWrapper.reference.pointer, videoParamsBuilder.reference.pointer).check();
  }

  static final _id_play = _class.instanceMethodId(
    r'play',
    r'()V',
  );

  static final _play = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void play()`
  void play(){
    
    _play(reference.pointer, _id_play as _$jni.JMethodIDPtr).check();
  }

  static final _id_isLoading = _class.instanceMethodId(
    r'isLoading',
    r'()Z',
  );

  static final _isLoading = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLoading()`
  bool isLoading(){
    
    return _isLoading(reference.pointer, _id_isLoading as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isLooping = _class.instanceMethodId(
    r'isLooping',
    r'()Z',
  );

  static final _isLooping = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLooping()`
  bool isLooping(){
    
    return _isLooping(reference.pointer, _id_isLooping as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setLooping = _class.instanceMethodId(
    r'setLooping',
    r'(Z)V',
  );

  static final _setLooping = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setLooping(boolean z)`
  void setLooping(bool z, ){
    
    _setLooping(reference.pointer, _id_setLooping as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_setVolume = _class.instanceMethodId(
    r'setVolume',
    r'(F)V',
  );

  static final _setVolume = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double)>();
  /// from: `public void setVolume(float f)`
  void setVolume(double f, ){
    
    _setVolume(reference.pointer, _id_setVolume as _$jni.JMethodIDPtr, f).check();
  }

  static final _id_isSeeking = _class.instanceMethodId(
    r'isSeeking',
    r'()Z',
  );

  static final _isSeeking = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isSeeking()`
  bool isSeeking(){
    
    return _isSeeking(reference.pointer, _id_isSeeking as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_seekTo = _class.instanceMethodId(
    r'seekTo',
    r'(J)V',
  );

  static final _seekTo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int64,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void seekTo(long j)`
  void seekTo(int j, ){
    
    _seekTo(reference.pointer, _id_seekTo as _$jni.JMethodIDPtr, j).check();
  }

  static final _id_pause = _class.instanceMethodId(
    r'pause',
    r'()V',
  );

  static final _pause = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void pause()`
  void pause(){
    
    _pause(reference.pointer, _id_pause as _$jni.JMethodIDPtr).check();
  }

  static final _id_resume = _class.instanceMethodId(
    r'resume',
    r'()V',
  );

  static final _resume = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void resume()`
  void resume(){
    
    _resume(reference.pointer, _id_resume as _$jni.JMethodIDPtr).check();
  }

  static final _id_isPlaying = _class.instanceMethodId(
    r'isPlaying',
    r'()Z',
  );

  static final _isPlaying = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPlaying()`
  bool isPlaying(){
    
    return _isPlaying(reference.pointer, _id_isPlaying as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getVideoCurrentPosition = _class.instanceMethodId(
    r'getVideoCurrentPosition',
    r'()J',
  );

  static final _getVideoCurrentPosition = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getVideoCurrentPosition()`
  int getVideoCurrentPosition(){
    
    return _getVideoCurrentPosition(reference.pointer, _id_getVideoCurrentPosition as _$jni.JMethodIDPtr).long;
  }

  static final _id_getVideoTotalDuration = _class.instanceMethodId(
    r'getVideoTotalDuration',
    r'()J',
  );

  static final _getVideoTotalDuration = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getVideoTotalDuration()`
  int getVideoTotalDuration(){
    
    return _getVideoTotalDuration(reference.pointer, _id_getVideoTotalDuration as _$jni.JMethodIDPtr).long;
  }

  static final _id_switchNormalMode = _class.instanceMethodId(
    r'switchNormalMode',
    r'()V',
  );

  static final _switchNormalMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchNormalMode()`
  void switchNormalMode(){
    
    _switchNormalMode(reference.pointer, _id_switchNormalMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchFisheyeMode = _class.instanceMethodId(
    r'switchFisheyeMode',
    r'()V',
  );

  static final _switchFisheyeMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchFisheyeMode()`
  void switchFisheyeMode(){
    
    _switchFisheyeMode(reference.pointer, _id_switchFisheyeMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_switchPerspectiveMode = _class.instanceMethodId(
    r'switchPerspectiveMode',
    r'()V',
  );

  static final _switchPerspectiveMode = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void switchPerspectiveMode()`
  void switchPerspectiveMode(){
    
    _switchPerspectiveMode(reference.pointer, _id_switchPerspectiveMode as _$jni.JMethodIDPtr).check();
  }

  static final _id_setConstraint = _class.instanceMethodId(
    r'setConstraint',
    r'(FFFFFF)V',
  );

  static final _setConstraint = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(float f, float f1, float f2, float f3, float f4, float f5)`
  void setConstraint(double f, double f1, double f2, double f3, double f4, double f5, ){
    
    _setConstraint(reference.pointer, _id_setConstraint as _$jni.JMethodIDPtr, f, f1, f2, f3, f4, f5).check();
  }

  static final _id_setConstraint$1 = _class.instanceMethodId(
    r'setConstraint',
    r'(Ljava/lang/String;IIFFFFFFF)V',
  );

  static final _setConstraint$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32, _$jni.Int32, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double, _$jni.Double)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int, int, double, double, double, double, double, double, double)>();
  /// from: `public void setConstraint(java.lang.String string, int i, int i1, float f, float f1, float f2, float f3, float f4, float f5, float f6)`
  void setConstraint$1(_$jni.JString string, int i, int i1, double f, double f1, double f2, double f3, double f4, double f5, double f6, ){
    
    _setConstraint$1(reference.pointer, _id_setConstraint$1 as _$jni.JMethodIDPtr, string.reference.pointer, i, i1, f, f1, f2, f3, f4, f5, f6).check();
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)V',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureEnabled(boolean z)`
  void setGestureEnabled(bool z, ){
    
    _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureHorizontalEnabled = _class.instanceMethodId(
    r'isGestureHorizontalEnabled',
    r'()Z',
  );

  static final _isGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureHorizontalEnabled()`
  bool isGestureHorizontalEnabled(){
    
    return _isGestureHorizontalEnabled(reference.pointer, _id_isGestureHorizontalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureHorizontalEnabled = _class.instanceMethodId(
    r'setGestureHorizontalEnabled',
    r'(Z)V',
  );

  static final _setGestureHorizontalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureHorizontalEnabled(boolean z)`
  void setGestureHorizontalEnabled(bool z, ){
    
    _setGestureHorizontalEnabled(reference.pointer, _id_setGestureHorizontalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureVerticalEnabled = _class.instanceMethodId(
    r'isGestureVerticalEnabled',
    r'()Z',
  );

  static final _isGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureVerticalEnabled()`
  bool isGestureVerticalEnabled(){
    
    return _isGestureVerticalEnabled(reference.pointer, _id_isGestureVerticalEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureVerticalEnabled = _class.instanceMethodId(
    r'setGestureVerticalEnabled',
    r'(Z)V',
  );

  static final _setGestureVerticalEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureVerticalEnabled(boolean z)`
  void setGestureVerticalEnabled(bool z, ){
    
    _setGestureVerticalEnabled(reference.pointer, _id_setGestureVerticalEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_isGestureZoomEnabled = _class.instanceMethodId(
    r'isGestureZoomEnabled',
    r'()Z',
  );

  static final _isGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureZoomEnabled()`
  bool isGestureZoomEnabled(){
    
    return _isGestureZoomEnabled(reference.pointer, _id_isGestureZoomEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureZoomEnabled = _class.instanceMethodId(
    r'setGestureZoomEnabled',
    r'(Z)V',
  );

  static final _setGestureZoomEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public void setGestureZoomEnabled(boolean z)`
  void setGestureZoomEnabled(bool z, ){
    
    _setGestureZoomEnabled(reference.pointer, _id_setGestureZoomEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).check();
  }

  static final _id_getFov = _class.instanceMethodId(
    r'getFov',
    r'()F',
  );

  static final _getFov = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getFov()`
  double getFov(){
    
    return _getFov(reference.pointer, _id_getFov as _$jni.JMethodIDPtr).float;
  }

  static final _id_getDistance = _class.instanceMethodId(
    r'getDistance',
    r'()F',
  );

  static final _getDistance = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getDistance()`
  double getDistance(){
    
    return _getDistance(reference.pointer, _id_getDistance as _$jni.JMethodIDPtr).float;
  }

  static final _id_getYaw = _class.instanceMethodId(
    r'getYaw',
    r'()F',
  );

  static final _getYaw = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getYaw()`
  double getYaw(){
    
    return _getYaw(reference.pointer, _id_getYaw as _$jni.JMethodIDPtr).float;
  }

  static final _id_getPitch = _class.instanceMethodId(
    r'getPitch',
    r'()F',
  );

  static final _getPitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getPitch()`
  double getPitch(){
    
    return _getPitch(reference.pointer, _id_getPitch as _$jni.JMethodIDPtr).float;
  }

  static final _id_getRoll = _class.instanceMethodId(
    r'getRoll',
    r'()F',
  );

  static final _getRoll = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallFloatMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public float getRoll()`
  double getRoll(){
    
    return _getRoll(reference.pointer, _id_getRoll as _$jni.JMethodIDPtr).float;
  }

  static final _id_destroy = _class.instanceMethodId(
    r'destroy',
    r'()V',
  );

  static final _destroy = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void destroy()`
  void destroy(){
    
    _destroy(reference.pointer, _id_destroy as _$jni.JMethodIDPtr).check();
  }

  static final _id_setPlayerViewListener = _class.instanceMethodId(
    r'setPlayerViewListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerViewListener;)V',
  );

  static final _setPlayerViewListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setPlayerViewListener(com.arashivision.sdkmedia.player.listener.PlayerViewListener playerViewListener)`
  void setPlayerViewListener(PlayerViewListener playerViewListener, ){
    
    _setPlayerViewListener(reference.pointer, _id_setPlayerViewListener as _$jni.JMethodIDPtr, playerViewListener.reference.pointer).check();
  }

  static final _id_setVideoStatusListener = _class.instanceMethodId(
    r'setVideoStatusListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/VideoStatusListener;)V',
  );

  static final _setVideoStatusListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setVideoStatusListener(com.arashivision.sdkmedia.player.listener.VideoStatusListener videoStatusListener)`
  void setVideoStatusListener(VideoStatusListener videoStatusListener, ){
    
    _setVideoStatusListener(reference.pointer, _id_setVideoStatusListener as _$jni.JMethodIDPtr, videoStatusListener.reference.pointer).check();
  }

  static final _id_setGestureListener = _class.instanceMethodId(
    r'setGestureListener',
    r'(Lcom/arashivision/sdkmedia/player/listener/PlayerGestureListener;)V',
  );

  static final _setGestureListener = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallVoidMethod')
    .asFunction<_$jni.JThrowablePtr Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void setGestureListener(com.arashivision.sdkmedia.player.listener.PlayerGestureListener playerGestureListener)`
  void setGestureListener(PlayerGestureListener playerGestureListener, ){
    
    _setGestureListener(reference.pointer, _id_setGestureListener as _$jni.JMethodIDPtr, playerGestureListener.reference.pointer).check();
  }

  static final _id_O8ooO8o88$2 = _class.instanceMethodId(
    r'O8ooO8o88',
    r'(Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;)Lcom/arashivision/insta360/basemedia/ui/player/video/IPlayVideoParams;',
  );

  static final _O8ooO8o88$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public final com.arashivision.insta360.basemedia.ui.player.video.IPlayVideoParams O8ooO8o88(com.arashivision.sdkmedia.player.video.VideoParamsBuilder videoParamsBuilder)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject O8ooO8o88$2(VideoParamsBuilder videoParamsBuilder, ){
    
    return _O8ooO8o88$2(reference.pointer, _id_O8ooO8o88$2 as _$jni.JMethodIDPtr, videoParamsBuilder.reference.pointer).object(const _$jni.JObjectType());
  }

}
final class $InstaVideoPlayerView$Type extends _$jni.JObjType<InstaVideoPlayerView> {
  

  @_$jni.internal
  const $InstaVideoPlayerView$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/video/InstaVideoPlayerView;';

  @_$jni.internal
  @_$core.override
  InstaVideoPlayerView fromReference(_$jni.JReference reference) => InstaVideoPlayerView.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($InstaVideoPlayerView$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($InstaVideoPlayerView$Type) &&
        other is $InstaVideoPlayerView$Type;
  }
}

/// from: `com.arashivision.sdkmedia.player.video.VideoParamsBuilder`
class VideoParamsBuilder extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<VideoParamsBuilder> $type;

  

  @_$jni.internal
  VideoParamsBuilder.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/player/video/VideoParamsBuilder');

      /// The type which includes information such as the signature of this class.
static const type = $VideoParamsBuilder$Type();
  /// from: `static public final int RENDER_MODE_AUTO`
  static const RENDER_MODE_AUTO = 0;
  /// from: `static public final int RENDER_MODE_PLANE_STITCH`
  static const RENDER_MODE_PLANE_STITCH = 10;
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get O8ooO8o88 => _id_O8ooO8o88.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(_$jni.JString value) => _id_O8ooO8o88.set(this, const _$jni.JStringType(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'Ljava/lang/String;',
      );
  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JString get oOoo => _id_oOoo.get(this, const _$jni.JStringType());

  /// from: `public java.lang.String oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JString value) => _id_oOoo.set(this, const _$jni.JStringType(), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'Z',
      );
  /// from: `public boolean oO8`
bool get oO8 => _id_oO8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oO8`
set oO8(bool value) => _id_oO8.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo0oo0 =
      _class.instanceFieldId(
        r'oo0oo0',
        r'Z',
      );
  /// from: `public boolean oo0oo0`
bool get oo0oo0 => _id_oo0oo0.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo0oo0`
set oo0oo0(bool value) => _id_oo0oo0.set(this, const _$jni.jbooleanType(), value);

  static final _id_ooO =
      _class.instanceFieldId(
        r'ooO',
        r'I',
      );
  /// from: `public int ooO`
int get ooO => _id_ooO.get(this, const _$jni.jintType());

  /// from: `public int ooO`
set ooO(int value) => _id_ooO.set(this, const _$jni.jintType(), value);

  static final _id_Oo0 =
      _class.instanceFieldId(
        r'Oo0',
        r'[I',
      );
  /// from: `public int[] Oo0`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.jint> get Oo0 => _id_Oo0.get(this, const _$jni.JArrayType(_$jni.jintType()));

  /// from: `public int[] Oo0`
  /// The returned object must be released after use, by calling the [release] method.
set Oo0(_$jni.JArray<_$jni.jint> value) => _id_Oo0.set(this, const _$jni.JArrayType(_$jni.jintType()), value);

  static final _id_oO =
      _class.instanceFieldId(
        r'oO',
        r'I',
      );
  /// from: `public int oO`
int get oO => _id_oO.get(this, const _$jni.jintType());

  /// from: `public int oO`
set oO(int value) => _id_oO.set(this, const _$jni.jintType(), value);

  static final _id_ooo0Oo0O =
      _class.instanceFieldId(
        r'ooo0Oo0O',
        r'I',
      );
  /// from: `public int ooo0Oo0O`
int get ooo0Oo0O => _id_ooo0Oo0O.get(this, const _$jni.jintType());

  /// from: `public int ooo0Oo0O`
set ooo0Oo0O(int value) => _id_ooo0Oo0O.set(this, const _$jni.jintType(), value);

  static final _id_oo =
      _class.instanceFieldId(
        r'oo',
        r'I',
      );
  /// from: `public int oo`
int get oo => _id_oo.get(this, const _$jni.jintType());

  /// from: `public int oo`
set oo(int value) => _id_oo.set(this, const _$jni.jintType(), value);

  static final _id_o00oOOo =
      _class.instanceFieldId(
        r'o00oOOo',
        r'Z',
      );
  /// from: `public boolean o00oOOo`
bool get o00oOOo => _id_o00oOOo.get(this, const _$jni.jbooleanType());

  /// from: `public boolean o00oOOo`
set o00oOOo(bool value) => _id_o00oOOo.set(this, const _$jni.jbooleanType(), value);

  static final _id_OOo8 =
      _class.instanceFieldId(
        r'OOo8',
        r'Z',
      );
  /// from: `public boolean OOo8`
bool get OOo8 => _id_OOo8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean OOo8`
set OOo8(bool value) => _id_OOo8.set(this, const _$jni.jbooleanType(), value);

  static final _id_oo0oOOoO8 =
      _class.instanceFieldId(
        r'oo0oOOoO8',
        r'Z',
      );
  /// from: `public boolean oo0oOOoO8`
bool get oo0oOOoO8 => _id_oo0oOOoO8.get(this, const _$jni.jbooleanType());

  /// from: `public boolean oo0oOOoO8`
set oo0oOOoO8(bool value) => _id_oo0oOOoO8.set(this, const _$jni.jbooleanType(), value);

  static final _id_Oo80Oo0O =
      _class.instanceFieldId(
        r'Oo80Oo0O',
        r'Z',
      );
  /// from: `public boolean Oo80Oo0O`
bool get Oo80Oo0O => _id_Oo80Oo0O.get(this, const _$jni.jbooleanType());

  /// from: `public boolean Oo80Oo0O`
set Oo80Oo0O(bool value) => _id_Oo80Oo0O.set(this, const _$jni.jbooleanType(), value);

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory VideoParamsBuilder() {
    
    return VideoParamsBuilder.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_setCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'setCacheWorkThumbnailRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setCacheWorkThumbnailRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setCacheWorkThumbnailRootPath(_$jni.JString string, ){
    
    return _setCacheWorkThumbnailRootPath(reference.pointer, _id_setCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getCacheWorkThumbnailRootPath = _class.instanceMethodId(
    r'getCacheWorkThumbnailRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheWorkThumbnailRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheWorkThumbnailRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheWorkThumbnailRootPath(){
    
    return _getCacheWorkThumbnailRootPath(reference.pointer, _id_getCacheWorkThumbnailRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setCacheCutSceneRootPath = _class.instanceMethodId(
    r'setCacheCutSceneRootPath',
    r'(Ljava/lang/String;)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setCacheCutSceneRootPath(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setCacheCutSceneRootPath(_$jni.JString string, ){
    
    return _setCacheCutSceneRootPath(reference.pointer, _id_setCacheCutSceneRootPath as _$jni.JMethodIDPtr, string.reference.pointer).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getCacheCutSceneRootPath = _class.instanceMethodId(
    r'getCacheCutSceneRootPath',
    r'()Ljava/lang/String;',
  );

  static final _getCacheCutSceneRootPath = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getCacheCutSceneRootPath()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getCacheCutSceneRootPath(){
    
    return _getCacheCutSceneRootPath(reference.pointer, _id_getCacheCutSceneRootPath as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_setDynamicStitch = _class.instanceMethodId(
    r'setDynamicStitch',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setDynamicStitch(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setDynamicStitch(bool z, ){
    
    return _setDynamicStitch(reference.pointer, _id_setDynamicStitch as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isDynamicStitch = _class.instanceMethodId(
    r'isDynamicStitch',
    r'()Z',
  );

  static final _isDynamicStitch = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isDynamicStitch()`
  bool isDynamicStitch(){
    
    return _isDynamicStitch(reference.pointer, _id_isDynamicStitch as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStabEnabled = _class.instanceMethodId(
    r'setStabEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setStabEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setStabEnabled(bool z, ){
    
    return _setStabEnabled(reference.pointer, _id_setStabEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isStabEnabled = _class.instanceMethodId(
    r'isStabEnabled',
    r'()Z',
  );

  static final _isStabEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isStabEnabled()`
  bool isStabEnabled(){
    
    return _isStabEnabled(reference.pointer, _id_isStabEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setStabType = _class.instanceMethodId(
    r'setStabType',
    r'(I)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setStabType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setStabType(int i, ){
    
    return _setStabType(reference.pointer, _id_setStabType as _$jni.JMethodIDPtr, i).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getStabType = _class.instanceMethodId(
    r'getStabType',
    r'()I',
  );

  static final _getStabType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getStabType()`
  int getStabType(){
    
    return _getStabType(reference.pointer, _id_getStabType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setScreenRatio = _class.instanceMethodId(
    r'setScreenRatio',
    r'(II)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32, _$jni.Int32)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setScreenRatio(int i, int i1)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setScreenRatio(int i, int i1, ){
    
    return _setScreenRatio(reference.pointer, _id_setScreenRatio as _$jni.JMethodIDPtr, i, i1).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getScreenRatio = _class.instanceMethodId(
    r'getScreenRatio',
    r'()[I',
  );

  static final _getScreenRatio = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int[] getScreenRatio()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.jint> getScreenRatio(){
    
    return _getScreenRatio(reference.pointer, _id_getScreenRatio as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.jintType()));
  }

  static final _id_setRenderModelType = _class.instanceMethodId(
    r'setRenderModelType',
    r'(I)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setRenderModelType(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setRenderModelType(int i, ){
    
    return _setRenderModelType(reference.pointer, _id_setRenderModelType as _$jni.JMethodIDPtr, i).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getRenderModelType = _class.instanceMethodId(
    r'getRenderModelType',
    r'()I',
  );

  static final _getRenderModelType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getRenderModelType()`
  int getRenderModelType(){
    
    return _getRenderModelType(reference.pointer, _id_getRenderModelType as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setLoadingImageResId = _class.instanceMethodId(
    r'setLoadingImageResId',
    r'(I)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setLoadingImageResId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setLoadingImageResId(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setLoadingImageResId(int i, ){
    
    return _setLoadingImageResId(reference.pointer, _id_setLoadingImageResId as _$jni.JMethodIDPtr, i).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getLoadingImageResId = _class.instanceMethodId(
    r'getLoadingImageResId',
    r'()I',
  );

  static final _getLoadingImageResId = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getLoadingImageResId()`
  int getLoadingImageResId(){
    
    return _getLoadingImageResId(reference.pointer, _id_getLoadingImageResId as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setLoadingBackgroundColor = _class.instanceMethodId(
    r'setLoadingBackgroundColor',
    r'(I)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setLoadingBackgroundColor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setLoadingBackgroundColor(int i)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setLoadingBackgroundColor(int i, ){
    
    return _setLoadingBackgroundColor(reference.pointer, _id_setLoadingBackgroundColor as _$jni.JMethodIDPtr, i).object(const $VideoParamsBuilder$Type());
  }

  static final _id_getLoadingBackgroundColor = _class.instanceMethodId(
    r'getLoadingBackgroundColor',
    r'()I',
  );

  static final _getLoadingBackgroundColor = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getLoadingBackgroundColor()`
  int getLoadingBackgroundColor(){
    
    return _getLoadingBackgroundColor(reference.pointer, _id_getLoadingBackgroundColor as _$jni.JMethodIDPtr).integer;
  }

  static final _id_setAutoPlayAfterPrepared = _class.instanceMethodId(
    r'setAutoPlayAfterPrepared',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setAutoPlayAfterPrepared = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setAutoPlayAfterPrepared(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setAutoPlayAfterPrepared(bool z, ){
    
    return _setAutoPlayAfterPrepared(reference.pointer, _id_setAutoPlayAfterPrepared as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isAutoPlayAfterPrepared = _class.instanceMethodId(
    r'isAutoPlayAfterPrepared',
    r'()Z',
  );

  static final _isAutoPlayAfterPrepared = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isAutoPlayAfterPrepared()`
  bool isAutoPlayAfterPrepared(){
    
    return _isAutoPlayAfterPrepared(reference.pointer, _id_isAutoPlayAfterPrepared as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setIsLooping = _class.instanceMethodId(
    r'setIsLooping',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setIsLooping = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setIsLooping(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setIsLooping(bool z, ){
    
    return _setIsLooping(reference.pointer, _id_setIsLooping as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isLooping = _class.instanceMethodId(
    r'isLooping',
    r'()Z',
  );

  static final _isLooping = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLooping()`
  bool isLooping(){
    
    return _isLooping(reference.pointer, _id_isLooping as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setGestureEnabled = _class.instanceMethodId(
    r'setGestureEnabled',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setGestureEnabled(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setGestureEnabled(bool z, ){
    
    return _setGestureEnabled(reference.pointer, _id_setGestureEnabled as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isGestureEnabled = _class.instanceMethodId(
    r'isGestureEnabled',
    r'()Z',
  );

  static final _isGestureEnabled = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isGestureEnabled()`
  bool isGestureEnabled(){
    
    return _isGestureEnabled(reference.pointer, _id_isGestureEnabled as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_setWithSwitchingAnimation = _class.instanceMethodId(
    r'setWithSwitchingAnimation',
    r'(Z)Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;',
  );

  static final _setWithSwitchingAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public com.arashivision.sdkmedia.player.video.VideoParamsBuilder setWithSwitchingAnimation(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  VideoParamsBuilder setWithSwitchingAnimation(bool z, ){
    
    return _setWithSwitchingAnimation(reference.pointer, _id_setWithSwitchingAnimation as _$jni.JMethodIDPtr, z ? 1 : 0).object(const $VideoParamsBuilder$Type());
  }

  static final _id_isWithSwitchingAnimation = _class.instanceMethodId(
    r'isWithSwitchingAnimation',
    r'()Z',
  );

  static final _isWithSwitchingAnimation = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isWithSwitchingAnimation()`
  bool isWithSwitchingAnimation(){
    
    return _isWithSwitchingAnimation(reference.pointer, _id_isWithSwitchingAnimation as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

}
final class $VideoParamsBuilder$Type extends _$jni.JObjType<VideoParamsBuilder> {
  

  @_$jni.internal
  const $VideoParamsBuilder$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/player/video/VideoParamsBuilder;';

  @_$jni.internal
  @_$core.override
  VideoParamsBuilder fromReference(_$jni.JReference reference) => VideoParamsBuilder.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($VideoParamsBuilder$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($VideoParamsBuilder$Type) &&
        other is $VideoParamsBuilder$Type;
  }
}

/// from: `com.arashivision.sdkmedia.stitch.StitchUtils`
class StitchUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<StitchUtils> $type;

  

  @_$jni.internal
  StitchUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/stitch/StitchUtils');

      /// The type which includes information such as the signature of this class.
static const type = $StitchUtils$Type();
  static final _id_O8ooO8o88 =
      _class.staticFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/log/MediaLogger;',
      );
  /// from: `static public final com.arashivision.insta360.basemedia.log.MediaLogger O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
static _$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(_class, const _$jni.JObjectType());

  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory StitchUtils() {
    
    return StitchUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_generateHDR = _class.staticMethodId(
    r'generateHDR',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Ljava/lang/String;)Z',
  );

  static final _generateHDR = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public boolean generateHDR(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, java.lang.String string)`
  static bool generateHDR(WorkWrapper workWrapper, _$jni.JString string, ){
    
    return _generateHDR(_class.reference.pointer, _id_generateHDR as _$jni.JMethodIDPtr, workWrapper.reference.pointer, string.reference.pointer).boolean;
  }

  static final _id_stitchSeparatedFisheyeFile = _class.staticMethodId(
    r'stitchSeparatedFisheyeFile',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Ljava/lang/String;)I',
  );

  static final _stitchSeparatedFisheyeFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int stitchSeparatedFisheyeFile(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, java.lang.String string)`
  static int stitchSeparatedFisheyeFile(WorkWrapper workWrapper, _$jni.JString string, ){
    
    return _stitchSeparatedFisheyeFile(_class.reference.pointer, _id_stitchSeparatedFisheyeFile as _$jni.JMethodIDPtr, workWrapper.reference.pointer, string.reference.pointer).integer;
  }

  static final _id_stitchSeparatedFisheyeFile$1 = _class.staticMethodId(
    r'stitchSeparatedFisheyeFile',
    r'(LO8ooO8o88/O8ooO8o88/O8ooO8o88/oOoo/O8ooO8o88/oo0oo0;)I',
  );

  static final _stitchSeparatedFisheyeFile$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int stitchSeparatedFisheyeFile(O8ooO8o88.O8ooO8o88.O8ooO8o88.oOoo.O8ooO8o88.oo0oo0 oo0oo0)`
  static int stitchSeparatedFisheyeFile$1(_$jni.JObject oo0oo0, ){
    
    return _stitchSeparatedFisheyeFile$1(_class.reference.pointer, _id_stitchSeparatedFisheyeFile$1 as _$jni.JMethodIDPtr, oo0oo0.reference.pointer).integer;
  }

  static final _id_generatePureShot = _class.staticMethodId(
    r'generatePureShot',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Ljava/lang/String;Ljava/lang/String;)I',
  );

  static final _generatePureShot = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public int generatePureShot(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, java.lang.String string, java.lang.String string1)`
  static int generatePureShot(WorkWrapper workWrapper, _$jni.JString string, _$jni.JString string1, ){
    
    return _generatePureShot(_class.reference.pointer, _id_generatePureShot as _$jni.JMethodIDPtr, workWrapper.reference.pointer, string.reference.pointer, string1.reference.pointer).integer;
  }

  static final _id_getStitchType = _class.staticMethodId(
    r'getStitchType',
    r'(Lcom/arashivision/sdkmedia/work/WorkWrapper;Z)I',
  );

  static final _getStitchType = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Int32)>)>>('globalEnv_CallStaticIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, int)>();
  /// from: `static public int getStitchType(com.arashivision.sdkmedia.work.WorkWrapper workWrapper, boolean z)`
  static int getStitchType(WorkWrapper workWrapper, bool z, ){
    
    return _getStitchType(_class.reference.pointer, _id_getStitchType as _$jni.JMethodIDPtr, workWrapper.reference.pointer, z ? 1 : 0).integer;
  }



}
final class $StitchUtils$Type extends _$jni.JObjType<StitchUtils> {
  

  @_$jni.internal
  const $StitchUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/stitch/StitchUtils;';

  @_$jni.internal
  @_$core.override
  StitchUtils fromReference(_$jni.JReference reference) => StitchUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($StitchUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($StitchUtils$Type) &&
        other is $StitchUtils$Type;
  }
}

/// from: `com.arashivision.sdkmedia.utils.DetectUtils`
class DetectUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<DetectUtils> $type;

  

  @_$jni.internal
  DetectUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/utils/DetectUtils');

      /// The type which includes information such as the signature of this class.
static const type = $DetectUtils$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory DetectUtils() {
    
    return DetectUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_supportPlayAndExportByDevice = _class.staticMethodId(
    r'supportPlayAndExportByDevice',
    r'()Z',
  );

  static final _supportPlayAndExportByDevice = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallStaticBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `static public boolean supportPlayAndExportByDevice()`
  static bool supportPlayAndExportByDevice(){
    
    return _supportPlayAndExportByDevice(_class.reference.pointer, _id_supportPlayAndExportByDevice as _$jni.JMethodIDPtr).boolean;
  }

}
final class $DetectUtils$Type extends _$jni.JObjType<DetectUtils> {
  

  @_$jni.internal
  const $DetectUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/utils/DetectUtils;';

  @_$jni.internal
  @_$core.override
  DetectUtils fromReference(_$jni.JReference reference) => DetectUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($DetectUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($DetectUtils$Type) &&
        other is $DetectUtils$Type;
  }
}

/// from: `com.arashivision.sdkmedia.work.WorkUtils`
class WorkUtils extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<WorkUtils> $type;

  

  @_$jni.internal
  WorkUtils.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/work/WorkUtils');

      /// The type which includes information such as the signature of this class.
static const type = $WorkUtils$Type();
  static final _id_new$ = _class.constructorId(
    r'()V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public void <init>()`
  /// The returned object must be released after use, by calling the [release] method.
  factory WorkUtils() {
    
    return WorkUtils.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr).reference
    );
  }

  static final _id_getAllCameraWorks = _class.staticMethodId(
    r'getAllCameraWorks',
    r'(Ljava/lang/String;Ljava/util/HashMap;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;',
  );

  static final _getAllCameraWorks = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public java.util.List getAllCameraWorks(java.lang.String string, java.util.HashMap hashMap, java.util.List list, java.util.List list1, java.util.List list2)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JList<WorkWrapper> getAllCameraWorks(_$jni.JString string, _$jni.JObject hashMap, _$jni.JList<_$jni.JString> list, _$jni.JList<_$jni.JString> list1, _$jni.JList<_$jni.JString> list2, ){
    
    return _getAllCameraWorks(_class.reference.pointer, _id_getAllCameraWorks as _$jni.JMethodIDPtr, string.reference.pointer, hashMap.reference.pointer, list.reference.pointer, list1.reference.pointer, list2.reference.pointer).object(const _$jni.JListType($WorkWrapper$Type()));
  }

  static final _id_getAllLocalWorks = _class.staticMethodId(
    r'getAllLocalWorks',
    r'(Ljava/lang/String;)Ljava/util/List;',
  );

  static final _getAllLocalWorks = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallStaticObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `static public java.util.List getAllLocalWorks(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  static _$jni.JList<WorkWrapper> getAllLocalWorks(_$jni.JString string, ){
    
    return _getAllLocalWorks(_class.reference.pointer, _id_getAllLocalWorks as _$jni.JMethodIDPtr, string.reference.pointer).object(const _$jni.JListType($WorkWrapper$Type()));
  }

}
final class $WorkUtils$Type extends _$jni.JObjType<WorkUtils> {
  

  @_$jni.internal
  const $WorkUtils$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/work/WorkUtils;';

  @_$jni.internal
  @_$core.override
  WorkUtils fromReference(_$jni.JReference reference) => WorkUtils.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($WorkUtils$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($WorkUtils$Type) &&
        other is $WorkUtils$Type;
  }
}

/// from: `com.arashivision.sdkmedia.work.WorkWrapper`
class WorkWrapper extends _$jni.JObject {
  @_$jni.internal
  @_$core.override
  final _$jni.JObjType<WorkWrapper> $type;

  

  @_$jni.internal
  WorkWrapper.fromReference(
    
    _$jni.JReference reference,
  ) :
    $type = type,
    super.fromReference(
      
      reference
    );

  static final _class = _$jni.JClass.forName(r'com/arashivision/sdkmedia/work/WorkWrapper');

      /// The type which includes information such as the signature of this class.
static const type = $WorkWrapper$Type();
  static final _id_O8ooO8o88 =
      _class.instanceFieldId(
        r'O8ooO8o88',
        r'Lcom/arashivision/insta360/basemedia/model/work/Work;',
      );
  /// from: `public com.arashivision.insta360.basemedia.model.work.Work O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JObject get O8ooO8o88 => _id_O8ooO8o88.get(this, const _$jni.JObjectType());

  /// from: `public com.arashivision.insta360.basemedia.model.work.Work O8ooO8o88`
  /// The returned object must be released after use, by calling the [release] method.
set O8ooO8o88(_$jni.JObject value) => _id_O8ooO8o88.set(this, const _$jni.JObjectType(), value);

  static final _id_oOoo =
      _class.instanceFieldId(
        r'oOoo',
        r'[B',
      );
  /// from: `public byte[] oOoo`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.jbyte> get oOoo => _id_oOoo.get(this, const _$jni.JArrayType(_$jni.jbyteType()));

  /// from: `public byte[] oOoo`
  /// The returned object must be released after use, by calling the [release] method.
set oOoo(_$jni.JArray<_$jni.jbyte> value) => _id_oOoo.set(this, const _$jni.JArrayType(_$jni.jbyteType()), value);

  static final _id_oO8 =
      _class.instanceFieldId(
        r'oO8',
        r'[B',
      );
  /// from: `public byte[] oO8`
  /// The returned object must be released after use, by calling the [release] method.
_$jni.JArray<_$jni.jbyte> get oO8 => _id_oO8.get(this, const _$jni.JArrayType(_$jni.jbyteType()));

  /// from: `public byte[] oO8`
  /// The returned object must be released after use, by calling the [release] method.
set oO8(_$jni.JArray<_$jni.jbyte> value) => _id_oO8.set(this, const _$jni.JArrayType(_$jni.jbyteType()), value);

  static final _id_new$ = _class.constructorId(
    r'(Lcom/arashivision/insta360/basemedia/model/work/Work;)V',
  );

  static final _new$ = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(com.arashivision.insta360.basemedia.model.work.Work work)`
  /// The returned object must be released after use, by calling the [release] method.
  factory WorkWrapper(_$jni.JObject work, ) {
    
    return WorkWrapper.fromReference(
      
      _new$(_class.reference.pointer, _id_new$ as _$jni.JMethodIDPtr, work.reference.pointer).reference
    );
  }

  static final _id_new$1 = _class.constructorId(
    r'(Ljava/lang/String;)V',
  );

  static final _new$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(java.lang.String string)`
  /// The returned object must be released after use, by calling the [release] method.
  factory WorkWrapper.new$1(_$jni.JString string, ) {
    
    return WorkWrapper.fromReference(
      
      _new$1(_class.reference.pointer, _id_new$1 as _$jni.JMethodIDPtr, string.reference.pointer).reference
    );
  }

  static final _id_new$2 = _class.constructorId(
    r'([Ljava/lang/String;)V',
  );

  static final _new$2 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_NewObject')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public void <init>(java.lang.String[] strings)`
  /// The returned object must be released after use, by calling the [release] method.
  factory WorkWrapper.new$2(_$jni.JArray<_$jni.JString> strings, ) {
    
    return WorkWrapper.fromReference(
      
      _new$2(_class.reference.pointer, _id_new$2 as _$jni.JMethodIDPtr, strings.reference.pointer).reference
    );
  }

  static final _id_getIdenticalKey = _class.instanceMethodId(
    r'getIdenticalKey',
    r'()Ljava/lang/String;',
  );

  static final _getIdenticalKey = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String getIdenticalKey()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString getIdenticalKey(){
    
    return _getIdenticalKey(reference.pointer, _id_getIdenticalKey as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_getUrls = _class.instanceMethodId(
    r'getUrls',
    r'(Z)[Ljava/lang/String;',
  );

  static final _getUrls = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Int32,)>)>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, int)>();
  /// from: `public java.lang.String[] getUrls(boolean z)`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> getUrls(bool z, ){
    
    return _getUrls(reference.pointer, _id_getUrls as _$jni.JMethodIDPtr, z ? 1 : 0).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_getUrlsForDelete = _class.instanceMethodId(
    r'getUrlsForDelete',
    r'()[Ljava/lang/String;',
  );

  static final _getUrlsForDelete = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String[] getUrlsForDelete()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JString> getUrlsForDelete(){
    
    return _getUrlsForDelete(reference.pointer, _id_getUrlsForDelete as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JStringType()));
  }

  static final _id_getWidth = _class.instanceMethodId(
    r'getWidth',
    r'()I',
  );

  static final _getWidth = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getWidth()`
  int getWidth(){
    
    return _getWidth(reference.pointer, _id_getWidth as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getHeight = _class.instanceMethodId(
    r'getHeight',
    r'()I',
  );

  static final _getHeight = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getHeight()`
  int getHeight(){
    
    return _getHeight(reference.pointer, _id_getHeight as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getBitrate = _class.instanceMethodId(
    r'getBitrate',
    r'()I',
  );

  static final _getBitrate = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int getBitrate()`
  int getBitrate(){
    
    return _getBitrate(reference.pointer, _id_getBitrate as _$jni.JMethodIDPtr).integer;
  }

  static final _id_getFps = _class.instanceMethodId(
    r'getFps',
    r'()D',
  );

  static final _getFps = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getFps()`
  double getFps(){
    
    return _getFps(reference.pointer, _id_getFps as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_isPanoramaFile = _class.instanceMethodId(
    r'isPanoramaFile',
    r'()Z',
  );

  static final _isPanoramaFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPanoramaFile()`
  bool isPanoramaFile(){
    
    return _isPanoramaFile(reference.pointer, _id_isPanoramaFile as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isVideo = _class.instanceMethodId(
    r'isVideo',
    r'()Z',
  );

  static final _isVideo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isVideo()`
  bool isVideo(){
    
    return _isVideo(reference.pointer, _id_isVideo as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isPhoto = _class.instanceMethodId(
    r'isPhoto',
    r'()Z',
  );

  static final _isPhoto = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isPhoto()`
  bool isPhoto(){
    
    return _isPhoto(reference.pointer, _id_isPhoto as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isHDRVideo = _class.instanceMethodId(
    r'isHDRVideo',
    r'()Z',
  );

  static final _isHDRVideo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isHDRVideo()`
  bool isHDRVideo(){
    
    return _isHDRVideo(reference.pointer, _id_isHDRVideo as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isHDRPhoto = _class.instanceMethodId(
    r'isHDRPhoto',
    r'()Lcom/arashivision/insta360/basemedia/asset/AssetConstants$HDRType;',
  );

  static final _isHDRPhoto = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basemedia.asset.AssetConstants$HDRType isHDRPhoto()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JObject isHDRPhoto(){
    
    return _isHDRPhoto(reference.pointer, _id_isHDRPhoto as _$jni.JMethodIDPtr).object(const _$jni.JObjectType());
  }

  static final _id_isCameraFile = _class.instanceMethodId(
    r'isCameraFile',
    r'()Z',
  );

  static final _isCameraFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isCameraFile()`
  bool isCameraFile(){
    
    return _isCameraFile(reference.pointer, _id_isCameraFile as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_isLocalFile = _class.instanceMethodId(
    r'isLocalFile',
    r'()Z',
  );

  static final _isLocalFile = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean isLocalFile()`
  bool isLocalFile(){
    
    return _isLocalFile(reference.pointer, _id_isLocalFile as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getCreationTime = _class.instanceMethodId(
    r'getCreationTime',
    r'()J',
  );

  static final _getCreationTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getCreationTime()`
  int getCreationTime(){
    
    return _getCreationTime(reference.pointer, _id_getCreationTime as _$jni.JMethodIDPtr).long;
  }

  static final _id_getFirstFrameTimeOffset = _class.instanceMethodId(
    r'getFirstFrameTimeOffset',
    r'()J',
  );

  static final _getFirstFrameTimeOffset = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getFirstFrameTimeOffset()`
  int getFirstFrameTimeOffset(){
    
    return _getFirstFrameTimeOffset(reference.pointer, _id_getFirstFrameTimeOffset as _$jni.JMethodIDPtr).long;
  }

  static final _id_supportPureShot = _class.instanceMethodId(
    r'supportPureShot',
    r'()Z',
  );

  static final _supportPureShot = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public boolean supportPureShot()`
  bool supportPureShot(){
    
    return _supportPureShot(reference.pointer, _id_supportPureShot as _$jni.JMethodIDPtr).boolean;
  }

  static final _id_getGyroInfo = _class.instanceMethodId(
    r'getGyroInfo',
    r'()[Lcom/arashivision/insta360/basemedia/asset/GyroInfo;',
  );

  static final _getGyroInfo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basemedia.asset.GyroInfo[] getGyroInfo()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JObject> getGyroInfo(){
    
    return _getGyroInfo(reference.pointer, _id_getGyroInfo as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JObjectType()));
  }

  static final _id_getExposureData = _class.instanceMethodId(
    r'getExposureData',
    r'()[Lcom/arashivision/insta360/basemedia/model/exposure/ExposureData;',
  );

  static final _getExposureData = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public com.arashivision.insta360.basemedia.model.exposure.ExposureData[] getExposureData()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JArray<_$jni.JObject> getExposureData(){
    
    return _getExposureData(reference.pointer, _id_getExposureData as _$jni.JMethodIDPtr).object(const _$jni.JArrayType(_$jni.JObjectType()));
  }

  static final _id_getRollingShutterTime = _class.instanceMethodId(
    r'getRollingShutterTime',
    r'()D',
  );

  static final _getRollingShutterTime = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallDoubleMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public double getRollingShutterTime()`
  double getRollingShutterTime(){
    
    return _getRollingShutterTime(reference.pointer, _id_getRollingShutterTime as _$jni.JMethodIDPtr).doubleFloat;
  }

  static final _id_getDurationInMs = _class.instanceMethodId(
    r'getDurationInMs',
    r'()J',
  );

  static final _getDurationInMs = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getDurationInMs()`
  int getDurationInMs(){
    
    return _getDurationInMs(reference.pointer, _id_getDurationInMs as _$jni.JMethodIDPtr).long;
  }

  static final _id_getFileSize = _class.instanceMethodId(
    r'getFileSize',
    r'()J',
  );

  static final _getFileSize = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallLongMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public long getFileSize()`
  int getFileSize(){
    
    return _getFileSize(reference.pointer, _id_getFileSize as _$jni.JMethodIDPtr).long;
  }

  static final _id_toString$1 = _class.instanceMethodId(
    r'toString',
    r'()Ljava/lang/String;',
  );

  static final _toString$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallObjectMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public java.lang.String toString()`
  /// The returned object must be released after use, by calling the [release] method.
  _$jni.JString toString$1(){
    
    return _toString$1(reference.pointer, _id_toString$1 as _$jni.JMethodIDPtr).object(const _$jni.JStringType());
  }

  static final _id_equals = _class.instanceMethodId(
    r'equals',
    r'(Ljava/lang/Object;)Z',
  );

  static final _equals = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallBooleanMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public boolean equals(java.lang.Object object)`
  bool equals(_$jni.JObject object, ){
    
    return _equals(reference.pointer, _id_equals as _$jni.JMethodIDPtr, object.reference.pointer).boolean;
  }

  static final _id_hashCode$1 = _class.instanceMethodId(
    r'hashCode',
    r'()I',
  );

  static final _hashCode$1 = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, )>();
  /// from: `public int hashCode()`
  int hashCode$1(){
    
    return _hashCode$1(reference.pointer, _id_hashCode$1 as _$jni.JMethodIDPtr).integer;
  }

  static final _id_compareTo = _class.instanceMethodId(
    r'compareTo',
    r'(Ljava/lang/Object;)I',
  );

  static final _compareTo = _$jni.ProtectedJniExtensions
    .lookup<_$jni.NativeFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.VarArgs<(_$jni.Pointer<_$jni.Void>,)>)>>('globalEnv_CallIntMethod')
    .asFunction<_$jni.JniResult Function(_$jni.Pointer<_$jni.Void>, _$jni.JMethodIDPtr, _$jni.Pointer<_$jni.Void>)>();
  /// from: `public int compareTo(java.lang.Object object)`
  int compareTo(_$jni.JObject object, ){
    
    return _compareTo(reference.pointer, _id_compareTo as _$jni.JMethodIDPtr, object.reference.pointer).integer;
  }

}
final class $WorkWrapper$Type extends _$jni.JObjType<WorkWrapper> {
  

  @_$jni.internal
  const $WorkWrapper$Type(
    
  );

  @_$jni.internal
  @_$core.override
  String get signature => r'Lcom/arashivision/sdkmedia/work/WorkWrapper;';

  @_$jni.internal
  @_$core.override
  WorkWrapper fromReference(_$jni.JReference reference) => WorkWrapper.fromReference(
    
    reference
  );

  @_$jni.internal
  @_$core.override
  _$jni.JObjType get superType => const _$jni.JObjectType();

  @_$jni.internal
  @_$core.override
  final superCount = 1;

  @_$core.override
  int get hashCode => ($WorkWrapper$Type).hashCode;

  @_$core.override
  bool operator ==(Object other) {
    return other.runtimeType == ($WorkWrapper$Type) &&
        other is $WorkWrapper$Type;
  }
}

